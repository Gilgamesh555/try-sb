"use strict";(self.webpackChunk_koerber_uikit=self.webpackChunk_koerber_uikit||[]).push([[164],{"./src/stories/components/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Dropdown_Distance:()=>Dropdown_Distance,Dropdown_Hoisting:()=>Dropdown_Hoisting,Dropdown_Menu:()=>Dropdown_Menu,Dropdown_Placement:()=>Dropdown_Placement,Dropdown_Select_Values:()=>Dropdown_Select_Values,Dropdown_Skidding:()=>Dropdown_Skidding,Dropdown_Submenu:()=>Dropdown_Submenu,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/utils.ts");__webpack_require__("./src/stories/component-imports.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Dropdown-Stories",component:"koerber-dropdown",argTypes:{open:{control:{type:"boolean"},description:"Indicates whether or not the dropdown is open. You can toggle this attribute to show and hide the dropdown, or you\r\ncan use the `show()` and `hide()` methods and this attribute will reflect the dropdown's open state.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},placement:{control:{type:"select"},options:["top","top-start","top-end","bottom","bottom-start","bottom-end","right","right-start","right-end","left","left-start","left-end"],description:"The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\r\ninside of the viewport.",defaultValue:"'bottom-start'",table:{type:{summary:"| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'",detail:"| 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end'"},defaultValue:{summary:"'bottom-start'"}}},disabled:{control:{type:"boolean"},description:"Disables the dropdown so the panel will not open.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},"stay-open-on-select":{control:{type:"boolean"},description:"By default, the dropdown is closed when an item is selected. This attribute will keep it open instead. Useful for\r\ndropdowns that allow for multiple interactions.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},distance:{control:{type:"number"},description:"The distance in pixels from which to offset the panel away from its trigger.",defaultValue:"0",table:{type:{summary:"number",detail:"number"},defaultValue:{summary:"0"}}},skidding:{control:{type:"number"},description:"The distance in pixels from which to offset the panel along its trigger.",defaultValue:"0",table:{type:{summary:"number",detail:"number"},defaultValue:{summary:"0"}}},hoist:{control:{type:"boolean"},description:"Enable this option to prevent the panel from being clipped when the component is placed inside a container with\r\n`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},sync:{control:{type:"select"},options:["width","height","both","undefined"],description:"Syncs the popup width or height to that of the trigger element.",defaultValue:"undefined",table:{type:{summary:"'width' | 'height' | 'both' | undefined",detail:"'width' | 'height' | 'both' | undefined"},defaultValue:{summary:"undefined"}}}}},Default={render:args=>{const dropdownHTML=`<koerber-dropdown ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}></koerber-dropdown>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(dropdownHTML)},args:{},storyName:"Default"},Dropdown_Menu={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n    <koerber-dropdown hoist>\n      <koerber-button slot="trigger" caret>Dropdown</koerber-button>\n      <koerber-menu style="max-width: 200px;">\n      <koerber-menu-item value="undo">Undo</koerber-menu-item>\n      <koerber-menu-item value="redo">Redo</koerber-menu-item>\n      <koerber-divider></koerber-divider>\n      <koerber-menu-item value="cut">Cut</koerber-menu-item>\n      <koerber-menu-item value="copy">Copy</koerber-menu-item>\n      <koerber-menu-item value="paste">Paste</koerber-menu-item>\n      <koerber-divider></koerber-divider>\n      <koerber-menu-item>Find</koerber-menu-item>\n      <koerber-menu-item>Transformations</koerber-menu-item>\n      </koerber-menu>\n  </koerber-dropdown>\n  ')},Dropdown_Select_Values={render:()=>(setTimeout((()=>{const menu=document.getElementById("menu_value"),displayElement=document.getElementById("selection-display");null==menu||menu.addEventListener("koerber-select",(event=>{const item=event.detail.item;displayElement&&(displayElement.textContent=`Selected value is: ${item.value}`)}))}),0),(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n     <div class="dropdown-selection">\n      <koerber-dropdown hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n        <koerber-menu id="menu_value">\n          <koerber-menu-item value="cut">Cut</koerber-menu-item>\n          <koerber-menu-item value="copy">Copy</koerber-menu-item>\n          <koerber-menu-item value="paste">Paste</koerber-menu-item>\n        </koerber-menu>\n      </koerber-dropdown>\n      </div>\n    <koerber-card id="selection-display">No item selected yet.</koerber-card>\n    ')),parameters:{layout:"centered"}},Dropdown_Placement={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n      <koerber-dropdown placement="right" hoist distance="4">\n      <koerber-button slot="trigger" caret>Placement</koerber-button>\n      <koerber-menu>\n        <koerber-menu-item>top</koerber-menu-item>\n        <koerber-menu-item>top-start</koerber-menu-item>\n        <koerber-menu-item>top-end</koerber-menu-item>\n        <koerber-menu-item>bottom</koerber-menu-item>\n        <koerber-menu-item>bottom-start</koerber-menu-item>\n        <koerber-menu-item>bottom-end</koerber-menu-item>\n        <koerber-menu-item>right</koerber-menu-item>\n        <koerber-menu-item>right-start</koerber-menu-item>\n        <koerber-menu-item>right-end</koerber-menu-item>\n        <koerber-menu-item>left</koerber-menu-item>\n        <koerber-menu-item>left-start</koerber-menu-item>\n        <koerber-menu-item>left-end</koerber-menu-item>\n      </koerber-menu>\n    </koerber-dropdown>\n    ')},Dropdown_Distance={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n    <koerber-dropdown distance="30" hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n        <koerber-menu>\n            <koerber-menu-item>Cut</koerber-menu-item>\n            <koerber-menu-item>Copy</koerber-menu-item>\n            <koerber-menu-item>Paste</koerber-menu-item>\n        </koerber-menu>\n    </koerber-dropdown>\n    ')},Dropdown_Skidding={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n      <koerber-dropdown skidding="30" hoist>\n      <koerber-button slot="trigger" caret>Edit</koerber-button>\n      <koerber-menu>\n        <koerber-menu-item>Cut</koerber-menu-item>\n        <koerber-menu-item>Copy</koerber-menu-item>\n        <koerber-menu-item>Paste</koerber-menu-item>\n      </koerber-menu>\n    </koerber-dropdown>\n    ')},Dropdown_Submenu={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n      <koerber-dropdown hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n\n        <koerber-menu style="max-width: 200px;">\n        <koerber-menu-item value="undo">Undo</koerber-menu-item>\n        <koerber-menu-item value="redo">Redo</koerber-menu-item>\n        <koerber-divider></koerber-divider>\n        <koerber-menu-item value="cut">Cut</koerber-menu-item>\n        <koerber-menu-item value="copy">Copy</koerber-menu-item>\n        <koerber-menu-item value="paste">Paste</koerber-menu-item>\n        <koerber-divider></koerber-divider>\n        <koerber-menu-item>\n            Find\n        <koerber-menu slot="submenu">\n        <koerber-menu-item value="find">Findâ€¦</koerber-menu-item>\n        <koerber-menu-item value="find-previous">Find Next</koerber-menu-item>\n        <koerber-menu-item value="find-next">Find Previous</koerber-menu-item>\n        </koerber-menu>\n        </koerber-menu-item>\n        <koerber-menu-item>\n            Transformations\n        <koerber-menu slot="submenu">\n        <koerber-menu-item value="uppercase">Make uppercase</koerber-menu-item>\n        <koerber-menu-item value="lowercase">Make lowercase</koerber-menu-item>\n        <koerber-menu-item value="capitalize">Capitalize</koerber-menu-item>\n        </koerber-menu>\n        </koerber-menu-item>\n        </koerber-menu>\n    </koerber-dropdown>\n    ')},Dropdown_Hoisting={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n      <div>\n    <koerber-dropdown>\n    <koerber-button slot="trigger" caret>No Hoist</koerber-button>\n    <koerber-menu>\n      <koerber-menu-item>Item 1</koerber-menu-item>\n      <koerber-menu-item>Item 2</koerber-menu-item>\n      <koerber-menu-item>Item 3</koerber-menu-item>\n    </koerber-menu>\n    </koerber-dropdown>\n\n    <koerber-dropdown style="padding-left: 80px" hoist>\n    <koerber-button slot="trigger" caret>Hoist</koerber-button>\n    <koerber-menu>\n      <koerber-menu-item>Item 1</koerber-menu-item>\n      <koerber-menu-item>Item 2</koerber-menu-item>\n      <koerber-menu-item>Item 3</koerber-menu-item>\n    </koerber-menu>\n    </koerber-dropdown>\n    </div>\n    ')};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const dropdownHTML = `<koerber-dropdown ${attributes}></koerber-dropdown>`;\n    return getStoryTemplate(dropdownHTML);\n  },\n  args: {}\n}",...Default.parameters?.docs?.source}}},Dropdown_Menu.parameters={...Dropdown_Menu.parameters,docs:{...Dropdown_Menu.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const menuHTML = `\n    <koerber-dropdown hoist>\n      <koerber-button slot="trigger" caret>Dropdown</koerber-button>\n      <koerber-menu style="max-width: 200px;">\n      <koerber-menu-item value="undo">Undo</koerber-menu-item>\n      <koerber-menu-item value="redo">Redo</koerber-menu-item>\n      <koerber-divider></koerber-divider>\n      <koerber-menu-item value="cut">Cut</koerber-menu-item>\n      <koerber-menu-item value="copy">Copy</koerber-menu-item>\n      <koerber-menu-item value="paste">Paste</koerber-menu-item>\n      <koerber-divider></koerber-divider>\n      <koerber-menu-item>Find</koerber-menu-item>\n      <koerber-menu-item>Transformations</koerber-menu-item>\n      </koerber-menu>\n  </koerber-dropdown>\n  `;\n    return getStoryTemplate(menuHTML);\n  }\n}',...Dropdown_Menu.parameters?.docs?.source}}},Dropdown_Select_Values.parameters={...Dropdown_Select_Values.parameters,docs:{...Dropdown_Select_Values.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n     <div class="dropdown-selection">\n      <koerber-dropdown hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n        <koerber-menu id="menu_value">\n          <koerber-menu-item value="cut">Cut</koerber-menu-item>\n          <koerber-menu-item value="copy">Copy</koerber-menu-item>\n          <koerber-menu-item value="paste">Paste</koerber-menu-item>\n        </koerber-menu>\n      </koerber-dropdown>\n      </div>\n    <koerber-card id="selection-display">No item selected yet.</koerber-card>\n    `;\n\n    // After the content is rendered, add the event listener to update the display element\n    setTimeout(() => {\n      const menu = document.getElementById(\'menu_value\');\n      const displayElement = document.getElementById(\'selection-display\');\n      menu?.addEventListener(\'koerber-select\', event => {\n        const item = event.detail.item;\n        // Update the display element\'s content\n        if (displayElement) {\n          displayElement.textContent = `Selected value is: ${item.value}`;\n        }\n      });\n    }, 0);\n    return getStoryTemplate(dropdownHTML);\n  },\n  parameters: {\n    layout: \'centered\'\n  }\n}',...Dropdown_Select_Values.parameters?.docs?.source}}},Dropdown_Placement.parameters={...Dropdown_Placement.parameters,docs:{...Dropdown_Placement.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n      <koerber-dropdown placement="right" hoist distance="4">\n      <koerber-button slot="trigger" caret>Placement</koerber-button>\n      <koerber-menu>\n        <koerber-menu-item>top</koerber-menu-item>\n        <koerber-menu-item>top-start</koerber-menu-item>\n        <koerber-menu-item>top-end</koerber-menu-item>\n        <koerber-menu-item>bottom</koerber-menu-item>\n        <koerber-menu-item>bottom-start</koerber-menu-item>\n        <koerber-menu-item>bottom-end</koerber-menu-item>\n        <koerber-menu-item>right</koerber-menu-item>\n        <koerber-menu-item>right-start</koerber-menu-item>\n        <koerber-menu-item>right-end</koerber-menu-item>\n        <koerber-menu-item>left</koerber-menu-item>\n        <koerber-menu-item>left-start</koerber-menu-item>\n        <koerber-menu-item>left-end</koerber-menu-item>\n      </koerber-menu>\n    </koerber-dropdown>\n    `;\n    return getStoryTemplate(dropdownHTML);\n  }\n}',...Dropdown_Placement.parameters?.docs?.source}}},Dropdown_Distance.parameters={...Dropdown_Distance.parameters,docs:{...Dropdown_Distance.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n    <koerber-dropdown distance="30" hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n        <koerber-menu>\n            <koerber-menu-item>Cut</koerber-menu-item>\n            <koerber-menu-item>Copy</koerber-menu-item>\n            <koerber-menu-item>Paste</koerber-menu-item>\n        </koerber-menu>\n    </koerber-dropdown>\n    `;\n    return getStoryTemplate(dropdownHTML);\n  }\n}',...Dropdown_Distance.parameters?.docs?.source}}},Dropdown_Skidding.parameters={...Dropdown_Skidding.parameters,docs:{...Dropdown_Skidding.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n      <koerber-dropdown skidding="30" hoist>\n      <koerber-button slot="trigger" caret>Edit</koerber-button>\n      <koerber-menu>\n        <koerber-menu-item>Cut</koerber-menu-item>\n        <koerber-menu-item>Copy</koerber-menu-item>\n        <koerber-menu-item>Paste</koerber-menu-item>\n      </koerber-menu>\n    </koerber-dropdown>\n    `;\n    return getStoryTemplate(dropdownHTML);\n  }\n}',...Dropdown_Skidding.parameters?.docs?.source}}},Dropdown_Submenu.parameters={...Dropdown_Submenu.parameters,docs:{...Dropdown_Submenu.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n      <koerber-dropdown hoist>\n        <koerber-button slot="trigger" caret>Edit</koerber-button>\n\n        <koerber-menu style="max-width: 200px;">\n        <koerber-menu-item value="undo">Undo</koerber-menu-item>\n        <koerber-menu-item value="redo">Redo</koerber-menu-item>\n        <koerber-divider></koerber-divider>\n        <koerber-menu-item value="cut">Cut</koerber-menu-item>\n        <koerber-menu-item value="copy">Copy</koerber-menu-item>\n        <koerber-menu-item value="paste">Paste</koerber-menu-item>\n        <koerber-divider></koerber-divider>\n        <koerber-menu-item>\n            Find\n        <koerber-menu slot="submenu">\n        <koerber-menu-item value="find">Findâ€¦</koerber-menu-item>\n        <koerber-menu-item value="find-previous">Find Next</koerber-menu-item>\n        <koerber-menu-item value="find-next">Find Previous</koerber-menu-item>\n        </koerber-menu>\n        </koerber-menu-item>\n        <koerber-menu-item>\n            Transformations\n        <koerber-menu slot="submenu">\n        <koerber-menu-item value="uppercase">Make uppercase</koerber-menu-item>\n        <koerber-menu-item value="lowercase">Make lowercase</koerber-menu-item>\n        <koerber-menu-item value="capitalize">Capitalize</koerber-menu-item>\n        </koerber-menu>\n        </koerber-menu-item>\n        </koerber-menu>\n    </koerber-dropdown>\n    `;\n    return getStoryTemplate(dropdownHTML);\n  }\n}',...Dropdown_Submenu.parameters?.docs?.source}}},Dropdown_Hoisting.parameters={...Dropdown_Hoisting.parameters,docs:{...Dropdown_Hoisting.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const dropdownHTML = `\n      <div>\n    <koerber-dropdown>\n    <koerber-button slot="trigger" caret>No Hoist</koerber-button>\n    <koerber-menu>\n      <koerber-menu-item>Item 1</koerber-menu-item>\n      <koerber-menu-item>Item 2</koerber-menu-item>\n      <koerber-menu-item>Item 3</koerber-menu-item>\n    </koerber-menu>\n    </koerber-dropdown>\n\n    <koerber-dropdown style="padding-left: 80px" hoist>\n    <koerber-button slot="trigger" caret>Hoist</koerber-button>\n    <koerber-menu>\n      <koerber-menu-item>Item 1</koerber-menu-item>\n      <koerber-menu-item>Item 2</koerber-menu-item>\n      <koerber-menu-item>Item 3</koerber-menu-item>\n    </koerber-menu>\n    </koerber-dropdown>\n    </div>\n    `;\n    return getStoryTemplate(dropdownHTML);\n  }\n}',...Dropdown_Hoisting.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Dropdown_Menu","Dropdown_Select_Values","Dropdown_Placement","Dropdown_Distance","Dropdown_Skidding","Dropdown_Submenu","Dropdown_Hoisting"]}}]);