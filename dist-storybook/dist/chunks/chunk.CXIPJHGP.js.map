{
  "version": 3,
  "sources": ["../../src/internal/default-value.ts"],
  "sourcesContent": ["// @defaultValue decorator\n//\n// Runs when the corresponding attribute of the observed property changes, e.g. after calling Element.setAttribute or after updating\n// the observed property.\n//\n// The decorator checks whether the value of the attribute is different from the value of the property and in that case\n// it saves the new value.\n//\n//\n// Usage:\n//\n//  @property({ type: Boolean, reflect: true }) checked = false;\n//\n//  @defaultValue('checked') defaultChecked = false;\n//\n\nimport { defaultConverter } from 'lit';\nimport type { ReactiveElement } from 'lit';\n\nexport const defaultValue =\n  (propertyName = 'value') =>\n  (proto: ReactiveElement, key: string) => {\n    const ctor = proto.constructor as typeof ReactiveElement;\n\n    const attributeChangedCallback = ctor.prototype.attributeChangedCallback;\n    ctor.prototype.attributeChangedCallback = function (\n      this: ReactiveElement & { [name: string]: unknown },\n      name,\n      old,\n      value\n    ) {\n      const options = ctor.getPropertyOptions(propertyName);\n      const attributeName = typeof options.attribute === 'string' ? options.attribute : propertyName;\n\n      if (name === attributeName) {\n        const converter = options.converter || defaultConverter;\n        const fromAttribute =\n          typeof converter === 'function' ? converter : converter?.fromAttribute ?? defaultConverter.fromAttribute;\n\n        const newValue: unknown = fromAttribute!(value, options.type);\n\n        if (this[propertyName] !== newValue) {\n          this[key] = newValue;\n        }\n      }\n\n      attributeChangedCallback.call(this, name, old, value);\n    };\n  };\n"],
  "mappings": ";AAgBA,SAAS,wBAAwB;AAG1B,IAAM,eACX,CAAC,eAAe,YAChB,CAAC,OAAwB,QAAgB;AACvC,QAAM,OAAO,MAAM;AAEnB,QAAM,2BAA2B,KAAK,UAAU;AAChD,OAAK,UAAU,2BAA2B,SAExC,MACA,KACA,OACA;AA9BN;AA+BM,UAAM,UAAU,KAAK,mBAAmB,YAAY;AACpD,UAAM,gBAAgB,OAAO,QAAQ,cAAc,WAAW,QAAQ,YAAY;AAElF,QAAI,SAAS,eAAe;AAC1B,YAAM,YAAY,QAAQ,aAAa;AACvC,YAAM,gBACJ,OAAO,cAAc,aAAa,aAAY,4CAAW,kBAAX,YAA4B,iBAAiB;AAE7F,YAAM,WAAoB,cAAe,OAAO,QAAQ,IAAI;AAE5D,UAAI,KAAK,YAAY,MAAM,UAAU;AACnC,aAAK,GAAG,IAAI;AAAA,MACd;AAAA,IACF;AAEA,6BAAyB,KAAK,MAAM,MAAM,KAAK,KAAK;AAAA,EACtD;AACF;",
  "names": []
}
