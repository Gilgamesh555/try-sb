{
  "version": 3,
  "sources": ["../../src/components/card/card.component.ts"],
  "sourcesContent": ["import { classMap } from 'lit/directives/class-map.js';\nimport { HasSlotController } from '../../internal/slot';\nimport { html } from 'lit';\nimport { query } from 'lit/decorators.js';\nimport styles from './card.styles';\nimport UIKitElement from '../../internal/uikit-element';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Cards can be used to group related subjects in a container.\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-card--docs\n * @status stable\n * @since 2.0\n *\n * @slot - The card's main content.\n * @slot header - An optional header for the card.\n * @slot footer - An optional footer for the card.\n * @slot image - An optional image to render at the start of the card.\n *\n * @csspart base - The component's base wrapper.\n * @csspart image - The container that wraps the card's image.\n * @csspart header - The container that wraps the card's header.\n * @csspart body - The container that wraps the card's main content.\n * @csspart footer - The container that wraps the card's footer.\n *\n * @cssproperty --border-color - The card's border color, including borders that occur inside the card.\n * @cssproperty --border-radius - The border radius for the card's edges.\n * @cssproperty --border-width - The width of the card's borders.\n * @cssproperty --padding - The padding to use for the card's sections.\n */\nexport default class Card extends UIKitElement {\n  static styles: CSSResultGroup = styles;\n\n  private readonly hasSlotController = new HasSlotController(this, 'footer', 'header', 'image');\n  @query('slot:not([name])') defaultSlot: HTMLSlotElement;\n\n  render() {\n    const defaultSlotAssignedNodes = this.defaultSlot?.assignedNodes({ flatten: true });\n\n    const defaultSlotHasContent = defaultSlotAssignedNodes?.some(node => {\n      return (\n        node.nodeType === Node.ELEMENT_NODE || (node.nodeType === Node.TEXT_NODE && node?.textContent?.trim() !== '')\n      );\n    });\n\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n          card: true,\n          'card--has-footer': this.hasSlotController.test('footer'),\n          'card--has-image': this.hasSlotController.test('image'),\n          'card--has-header': this.hasSlotController.test('header')\n        })}\n      >\n        <slot name=\"image\" part=\"image\" class=\"card__image\"></slot>\n        <div class=\"card-content\">\n          <slot\n            name=\"header\"\n            part=\"header\"\n            class=\"\n              card__header: true\"\n          ></slot>\n          <slot\n            part=\"body\"\n            class=${classMap({\n              card__body: true,\n              'card__body--has-margin-bottom': this.hasSlotController.test('footer'),\n              'card__body--has-margin-top': this.hasSlotController.test('header') && defaultSlotHasContent\n            })}\n          ></slot>\n          <slot name=\"footer\" part=\"footer\" class=\"card__footer\"></slot>\n        </div>\n      </div>\n    `;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA,SAAS,gBAAgB;AAEzB,SAAS,YAAY;AACrB,SAAS,aAAa;AA2BtB,IAAqB,OAArB,cAAkC,aAAa;AAAA,EAA/C;AAAA;AAGE,SAAiB,oBAAoB,IAAI,kBAAkB,MAAM,UAAU,UAAU,OAAO;AAAA;AAAA,EAG5F,SAAS;AApCX;AAqCI,UAAM,4BAA2B,UAAK,gBAAL,mBAAkB,cAAc,EAAE,SAAS,KAAK;AAEjF,UAAM,wBAAwB,qEAA0B,KAAK,UAAQ;AAvCzE,UAAAA;AAwCM,aACE,KAAK,aAAa,KAAK,gBAAiB,KAAK,aAAa,KAAK,eAAaA,MAAA,6BAAM,gBAAN,gBAAAA,IAAmB,YAAW;AAAA,IAE9G;AAEA,WAAO;AAAA;AAAA;AAAA,gBAGK,SAAS;AAAA,MACf,MAAM;AAAA,MACN,oBAAoB,KAAK,kBAAkB,KAAK,QAAQ;AAAA,MACxD,mBAAmB,KAAK,kBAAkB,KAAK,OAAO;AAAA,MACtD,oBAAoB,KAAK,kBAAkB,KAAK,QAAQ;AAAA,IAC1D,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYU,SAAS;AAAA,MACf,YAAY;AAAA,MACZ,iCAAiC,KAAK,kBAAkB,KAAK,QAAQ;AAAA,MACrE,8BAA8B,KAAK,kBAAkB,KAAK,QAAQ,KAAK;AAAA,IACzE,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ;AACF;AA9CqB,KACZ,SAAyB;AAGL;AAAA,EAA1B,MAAM,kBAAkB;AAAA,GAJN,KAIQ;",
  "names": ["_a"]
}
