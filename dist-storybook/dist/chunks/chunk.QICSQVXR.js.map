{
  "version": 3,
  "sources": ["../../src/components/select-option/select-option.component.ts"],
  "sourcesContent": ["import { classMap } from 'lit/directives/class-map.js';\r\nimport { html } from 'lit';\r\nimport { LocalizeController } from '../../utilities/localize';\r\nimport { property, query, state } from 'lit/decorators.js';\r\nimport { watch } from '../../internal/watch';\r\nimport Checkbox from '../checkbox/checkbox.component';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport Icon from '../icon/icon.component';\r\nimport styles from './select-option.styles';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\n\r\n/**\r\n * @summary Options define the selectable items within various form controls such as [select](/components/select).\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-select-option--docs\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @dependency koerber-icon\r\n *\r\n * @slot - The option's label.\r\n * @slot prefix - Used to prepend an icon or similar element to the menu item.\r\n * @slot suffix - Used to append an icon or similar element to the menu item.\r\n *\r\n * @csspart checked-icon - The checked icon, an `<koerber-icon>` element.\r\n * @csspart base - The component's base wrapper.\r\n * @csspart label - The option's label.\r\n * @csspart prefix - The container that wraps the prefix.\r\n * @csspart suffix - The container that wraps the suffix.\r\n */\r\nexport default class SelectOption extends UIKitElement {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n  static dependencies = {\r\n    'koerber-icon': Icon,\r\n    'koerber-checkbox': Checkbox\r\n  };\r\n\r\n  private cachedTextLabel: string;\r\n  // @ts-expect-error - Controller is currently unused\r\n  private readonly localize = new LocalizeController(this);\r\n\r\n  @query('.select-option__label') defaultSlot: HTMLSlotElement;\r\n\r\n  @state() current = false; // the user has keyed into the option, but hasn't selected it yet (shows a highlight)\r\n  @state() selected = false; // the option is selected and has aria-selected=\"true\"\r\n  @state() hasHover = false; // we need this because Safari doesn't honor :hover styles while dragging\r\n\r\n  /**\r\n   * The option's value. When selected, the containing form control will receive this value. The value must be unique\r\n   * from other options in the same group. Values may not contain spaces, as spaces are used as delimiters when listing\r\n   * multiple values.\r\n   */\r\n  @property({ reflect: true }) value = '';\r\n\r\n  /** Draws the option in a disabled state, preventing selection. */\r\n  @property({ type: Boolean, reflect: true }) disabled = false;\r\n\r\n  /** Draws the option in a checkbox state. */\r\n  @property({ type: Boolean, reflect: true }) checkbox = false;\r\n\r\n  /**\r\n   * The option's size. When used inside a select, the size will be determined by the select's size so this\r\n   * attribute can typically be omitted.\r\n   */\r\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.setAttribute('role', 'option');\r\n    this.setAttribute('aria-selected', 'false');\r\n  }\r\n\r\n  private handleDefaultSlotChange() {\r\n    const textLabel = this.getTextLabel();\r\n\r\n    // Ignore the first time the label is set\r\n    if (typeof this.cachedTextLabel === 'undefined') {\r\n      this.cachedTextLabel = textLabel;\r\n      return;\r\n    }\r\n\r\n    // When the label changes, emit a slotchange event so parent controls see it\r\n    if (textLabel !== this.cachedTextLabel) {\r\n      this.cachedTextLabel = textLabel;\r\n      this.emit('slotchange', { bubbles: true, composed: false, cancelable: false });\r\n    }\r\n  }\r\n\r\n  private handleMouseEnter() {\r\n    this.hasHover = true;\r\n    this.current = true;\r\n  }\r\n\r\n  private handleMouseLeave() {\r\n    this.hasHover = false;\r\n    this.current = false;\r\n  }\r\n\r\n  @watch('disabled')\r\n  handleDisabledChange() {\r\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\r\n  }\r\n\r\n  @watch('selected')\r\n  handleSelectedChange() {\r\n    this.setAttribute('aria-selected', this.selected ? 'true' : 'false');\r\n  }\r\n\r\n  @watch('value')\r\n  handleValueChange() {\r\n    // Ensure the value is a string. This ensures the next line doesn't error and allows framework users to pass numbers\r\n    // instead of requiring them to cast the value to a string.\r\n    if (typeof this.value !== 'string') {\r\n      this.value = String(this.value);\r\n    }\r\n\r\n    if (this.value.includes(' ')) {\r\n      console.error(`Option values cannot include a space. All spaces have been replaced with underscores.`, this);\r\n      this.value = this.value.replace(/ /g, '_');\r\n    }\r\n  }\r\n\r\n  // We are binding the click event to the options selected value because the first click\r\n  // is not handled correctly as the checkbox does not have focus initially\r\n  private handleCheckboxClick(event: Event) {\r\n    this.selected = !this.selected;\r\n    this.emit('koerber-change');\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Returns a plain text label based on the option's content. */\r\n  getTextLabel() {\r\n    return (this.textContent ?? '').trim();\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div\r\n        part=\"base\"\r\n        class=${classMap({\r\n          'select-option': true,\r\n          'select-option--current': this.current,\r\n          'select-option--disabled': this.disabled,\r\n          'select-option--selected': this.selected,\r\n          'select-option--hover': this.hasHover,\r\n          'select-option--small': this.size === 'small',\r\n          'select-option--medium': this.size === 'medium',\r\n          'select-option--large': this.size === 'large'\r\n        })}\r\n        @mouseenter=${this.handleMouseEnter}\r\n        @mouseleave=${this.handleMouseLeave}\r\n      >\r\n        ${this.checkbox\r\n          ? html` <koerber-checkbox\r\n              class=${classMap({\r\n                'select-option__checkbox': true,\r\n                'checkbox--small': this.size === 'small',\r\n                'checkbox--medium': this.size === 'medium',\r\n                'checkbox--large': this.size === 'large'\r\n              })}\r\n              @click=${this.handleCheckboxClick}\r\n              ?checked=${this.selected}\r\n            >\r\n            </koerber-checkbox>`\r\n          : ''}\r\n        <slot part=\"prefix\" name=\"prefix\" class=\"select-option__prefix\"></slot>\r\n        <slot\r\n          part=\"label\"\r\n          class=${classMap({\r\n            'select-option__label': true,\r\n            'select-option-label--small': this.size === 'small',\r\n            'select-option-label--medium': this.size === 'medium',\r\n            'select-option-label--large': this.size === 'large'\r\n          })}\r\n          @slotchange=${this.handleDefaultSlotChange}\r\n        >\r\n        </slot>\r\n        <slot part=\"suffix\" name=\"suffix\" class=\"select-option__suffix\"></slot>\r\n        ${this.checkbox\r\n          ? ''\r\n          : html` <koerber-icon\r\n              part=\"checked-icon\"\r\n              class=${classMap({\r\n                'select-option__check': true,\r\n                'icon--small': this.size === 'small',\r\n                'icon--medium': this.size === 'medium',\r\n                'icon--large': this.size === 'large'\r\n              })}\r\n              name=\"check\"\r\n              size=${this.size}\r\n              library=\"system\"\r\n              aria-hidden=\"true\"\r\n            >\r\n            </koerber-icon>`}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
