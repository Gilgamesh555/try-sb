{
  "version": 3,
  "sources": ["../../src/components/menu-item/menu-item.component.ts"],
  "sourcesContent": ["import { classMap } from 'lit/directives/class-map.js';\r\nimport { getTextContent, HasSlotController } from '../../internal/slot';\r\nimport { html } from 'lit';\r\nimport { LocalizeController } from '../../utilities/localize';\r\nimport { property, query, state } from 'lit/decorators.js';\r\nimport { SubmenuController } from './submenu-controller';\r\nimport { watch } from '../../internal/watch';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport Icon from '../icon/icon';\r\nimport Popup from '../popup/popup';\r\nimport styles from './menu-item.styles';\r\nimport Tooltip from '../tooltip/tooltip';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\n\r\n/**\r\n * @summary Menu items provide options for the user to pick from in a menu.\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @dependency koerber-icon\r\n * @dependency koerber-popup\r\n * @dependency koerber-spinner\r\n * @dependency koerber-tooltip\r\n *\r\n * @slot - The menu item's label.\r\n * @slot prefix - Used to prepend an icon or similar element to the menu item.\r\n * @slot suffix - Used to append an icon or similar element to the menu item.\r\n * @slot submenu - Used to denote a nested menu.\r\n *\r\n * @csspart base - The component's base wrapper.\r\n * @csspart prefix - The prefix container.\r\n * @csspart label - The menu item label.\r\n * @csspart suffix - The suffix container.\r\n * @csspart spinner - The spinner that shows when the menu item is in the loading state.\r\n * @csspart spinner__base - The spinner's base part.\r\n * @csspart submenu-icon - The submenu icon, visible only when the menu item has a submenu (not yet implemented).\r\n *\r\n * @cssproperty [--submenu-offset=-2px] - The distance submenus shift to overlap the parent menu.\r\n */\r\nexport default class MenuItem extends UIKitElement {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n  static dependencies = {\r\n    'koerber-icon': Icon,\r\n    'koerber-popup': Popup,\r\n    'koerber-tooltip': Tooltip\r\n  };\r\n\r\n  private cachedTextLabel: string;\r\n  private tooltipContent = '';\r\n\r\n  /* Checks if text is overflowing */\r\n  @state() private isLabelOverflowing = false;\r\n\r\n  @query('slot:not([name])') defaultSlot: HTMLSlotElement;\r\n  @query('.menu-item') menuItem: HTMLElement;\r\n  @query('.menu-item__label') labelContentSlot: HTMLSlotElement;\r\n\r\n  /** The type of menu item to render. To use `checked`, this value must be set t`. */\r\n  @property() type = 'checkbox';\r\n\r\n  /** Draws the item in a selected state. */\r\n  @property({ type: Boolean, reflect: true }) selected = false;\r\n\r\n  /** A unique value to store in the menu item. This can be used as a way to identify menu items when selected. */\r\n  @property() value = '';\r\n\r\n  /** Draws the menu item in a loading state. */\r\n  // @property({ type: Boolean, reflect: true }) loading = false;\r\n\r\n  /** Draws the menu item in a disabled state, preventing selection. */\r\n  @property({ type: Boolean, reflect: true }) disabled = false;\r\n\r\n  /** The height size value of the item - medium by default */\r\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  private readonly localize = new LocalizeController(this);\r\n  private readonly hasSlotController = new HasSlotController(this, 'submenu', 'prefix', 'suffix');\r\n  private submenuController: SubmenuController = new SubmenuController(this, this.hasSlotController, this.localize);\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.addEventListener('click', this.handleHostClick);\r\n    this.addEventListener('mouseover', this.handleMouseOver);\r\n    this.setAttribute('role', 'menuitemcheckbox');\r\n    this.setAttribute('aria-checked', this.selected ? 'true' : 'false');\r\n  }\r\n\r\n  protected firstUpdated(): void {\r\n    this.checkTextOverflow();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.removeEventListener('click', this.handleHostClick);\r\n    this.removeEventListener('mouseover', this.handleMouseOver);\r\n  }\r\n\r\n  private checkTextOverflow() {\r\n    if (this.labelContentSlot.scrollHeight > this.labelContentSlot.clientHeight) {\r\n      this.isLabelOverflowing = true;\r\n      this.tooltipContent = this.getTextLabel();\r\n    } else {\r\n      this.isLabelOverflowing = false;\r\n      this.tooltipContent = '';\r\n    }\r\n  }\r\n\r\n  private handleDefaultSlotChange() {\r\n    const textLabel = this.getTextLabel();\r\n\r\n    // Ignore the first time the label is set\r\n    if (typeof this.cachedTextLabel === 'undefined') {\r\n      this.cachedTextLabel = textLabel;\r\n      return;\r\n    }\r\n\r\n    // When the label changes, emit a slotchange event so parent controls see it\r\n    if (textLabel !== this.cachedTextLabel) {\r\n      this.cachedTextLabel = textLabel;\r\n      this.emit('slotchange', { bubbles: true, composed: false, cancelable: false });\r\n    }\r\n  }\r\n\r\n  private handleHostClick = (event: MouseEvent) => {\r\n    // Prevent the click event from being emitted when the button is disabled or loading\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n    }\r\n  };\r\n\r\n  private handleMouseOver = (event: MouseEvent) => {\r\n    this.focus();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  @watch('selected')\r\n  handleCheckedChange() {\r\n    this.setAttribute('aria-checked', this.selected ? 'true' : 'false');\r\n  }\r\n\r\n  @watch('disabled')\r\n  handleDisabledChange() {\r\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\r\n  }\r\n\r\n  /** Returns a text label based on the contents of the menu item's default slot. */\r\n  getTextLabel() {\r\n    return getTextContent(this.defaultSlot);\r\n  }\r\n\r\n  isSubmenu() {\r\n    return this.hasSlotController.test('submenu');\r\n  }\r\n\r\n  render() {\r\n    const isRtl = this.localize.dir() === 'rtl';\r\n    const isSubmenuExpanded = this.submenuController.isExpanded();\r\n\r\n    return html`\r\n      <div\r\n        id=\"anchor\"\r\n        part=\"base\"\r\n        class=${classMap({\r\n          'menu-item': true,\r\n          'menu-item--rtl': isRtl,\r\n          'menu-item--selected': this.selected,\r\n          'menu-item--disabled': this.disabled,\r\n          // 'menu-item--loading': this.loading,\r\n          'menu-item--has-submenu': this.isSubmenu(),\r\n          'menu-item--submenu-expanded': isSubmenuExpanded,\r\n          [`menu-item--${this.size}`]: true\r\n        })}\r\n        ?aria-haspopup=\"${this.isSubmenu()}\"\r\n        ?aria-expanded=\"${isSubmenuExpanded ? true : false}\"\r\n      >\r\n        ${this.hasSlotController.test('prefix')\r\n          ? html`<slot name=\"prefix\" part=\"prefix\" class=\"menu-item__prefix\"></slot>`\r\n          : ''}\r\n        ${this.isLabelOverflowing\r\n          ? html`<koerber-tooltip\r\n              class=\"menu-item__tooltip\"\r\n              placement=\"top\"\r\n              hoist\r\n              content=\"${this.tooltipContent ?? ''}\"\r\n            >\r\n              <div><slot part=\"label\" class=\"menu-item__label\" @slotchange=${this.handleDefaultSlotChange}></slot></div>\r\n            </koerber-tooltip>`\r\n          : html`<slot part=\"label\" class=\"menu-item__label\" @slotchange=${this.handleDefaultSlotChange}></slot>`}\r\n        ${this.hasSlotController.test('suffix')\r\n          ? html`<slot name=\"suffix\" part=\"suffix\" class=\"menu-item__suffix\"></slot>`\r\n          : ''}\r\n        ${this.isSubmenu()\r\n          ? html`<span part=\"submenu-icon\" class=\"menu-item__chevron\">\r\n              <koerber-icon name=${isRtl ? 'chevron-left' : 'chevron-right'} aria-hidden=\"true\"></koerber-icon>\r\n            </span>`\r\n          : ''}\r\n        ${this.submenuController.renderSubmenu()}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
