{
  "version": 3,
  "sources": ["../../src/components/alert/alert.component.ts"],
  "sourcesContent": ["import { animateTo, stopAnimations } from '../../internal/animate';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { getAnimation, setDefaultAnimation } from '../../utilities/animation-registry';\nimport { HasSlotController } from '../../internal/slot';\nimport { html } from 'lit';\nimport { LocalizeController } from '@shoelace-style/localize';\nimport { property, query, state } from 'lit/decorators.js';\nimport { waitForEvent } from '../../internal/event';\nimport { watch } from '../../internal/watch';\nimport Button from '../button/button.component';\nimport componentStyles from '../../styles/component.styles';\nimport styles from './alert.styles';\nimport UIKitElement from '../../internal/uikit-element';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Alert are used to inform or notify important messages inline or inside a container.\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-alert--docs\n * @status stable\n * @since 1.0\n *\n * @dependency koerber-icon-button\n *\n * @slot - The alert's main content.\n * @slot action - An button to show in the alert. Works best with `<koerber-button variant=\"ghost\">`.\n *\n * @event koerber-show - Emitted when the alert opens.\n * @event koerber-after-show - Emitted after the alert opens and all animations are complete.\n * @event koerber-hide - Emitted when the alert closes.\n * @event koerber-after-hide - Emitted after the alert closes and all animations are complete.\n *\n * @csspart base - The component's base wrapper.\n * @csspart icon - The container that wraps the optional icon.\n * @csspart message - The container that wraps the alert's main content.\n * @csspart close-button - The close button, an `<koerber-button>`.\n * @csspart close-button__base - The close button's exported `base` part.\n * @csspart label - The snackbar's label.\n *\n * @animation alert.show - The animation to use when showing the alert.\n * @animation alert.hide - The animation to use when hiding the alert.\n */\nconst toastStack = Object.assign(document.createElement('div'), { className: 'koerber-toast-stack' });\nconst toastChildAlert = 'koerber-alert-child';\n\nexport default class Alert extends UIKitElement {\n  static styles: CSSResultGroup = [componentStyles, styles];\n  static dependencies = {\n    'koerber-button': Button\n  };\n\n  private autoHideTimeout: number;\n  private readonly hasSlotController = new HasSlotController(\n    this,\n    '[default]',\n    'icon',\n    'action-primary',\n    'action-secondary'\n  );\n  private readonly localize = new LocalizeController(this);\n\n  @query('[part~=\"base\"]') base: HTMLElement;\n\n  /** Indicates whether the current text on the alert exceeds its bounds and the maximum number of lines */\n  @state() private isTextOverflowing = false;\n\n  /**\n   * Indicates whether or not the alert is open. You can toggle this attribute to show and hide the alert, or you can\n   * use the `show()` and `hide()` methods and this attribute will reflect the alert's open state.\n   */\n  @property({ type: Boolean, reflect: true }) open = false;\n\n  /** Enables a close button that allows the user to dismiss the alert. */\n  @property({ type: Boolean, reflect: true }) closable = false;\n\n  /** The alert's theme variant. */\n  @property({ reflect: true }) variant:\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'danger'\n    | 'alt-info'\n    | 'alt-success'\n    | 'alt-warning'\n    | 'alt-danger' = 'info';\n\n  /** Set wether actions should be rendered bottom or inline with main content */\n  @property({ attribute: 'actions-placement' }) actionsPlacement: 'inline' | 'footer' = 'inline';\n\n  /**\n   * The length of time, in milliseconds (ms), the alert will show before closing itself. If the user interacts with\n   * the alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `5000` ms, meaning\n   * the alert will not close after 5 seconds.\n   */\n  @property({ type: Number }) duration: number = Infinity;\n\n  firstUpdated() {\n    this.base.hidden = !this.open;\n\n    const textContainer = this.shadowRoot?.querySelector('.multiline');\n    const observer = new ResizeObserver(() => {\n      if (textContainer && textContainer.scrollHeight > textContainer.clientHeight) {\n        this.isTextOverflowing = true;\n        this.emit('koerber-show');\n      } else if (this.isTextOverflowing) {\n        this.isTextOverflowing = false;\n        this.emit('koerber-hide');\n      }\n    });\n\n    if (textContainer) {\n      observer.observe(textContainer);\n    }\n  }\n\n  private restartAutoHide() {\n    clearTimeout(this.autoHideTimeout);\n    if (this.open && this.duration < Infinity) {\n      this.autoHideTimeout = window.setTimeout(() => this.hide(), this.duration);\n    }\n  }\n\n  private handleCloseClick() {\n    this.hide();\n  }\n\n  private handleMouseMove() {\n    this.restartAutoHide();\n  }\n\n  /**\n   * Displays the alert as a toast alert. This will move the alert out of its position in the DOM and, when dismissed, it will be removed from the DOM completely. By storing a reference to the alert, you can reuse it by calling this method again. The returned promise will resolve after the alert is hidden.\n   */\n  async toast() {\n    return new Promise<void>(resolve => {\n      if (this.classList.contains(toastChildAlert)) {\n        // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style\n        const childAlert = this.shadowRoot?.querySelector('.alert') as HTMLElement;\n        childAlert.style.position = 'absolute';\n        childAlert.style.bottom = 'var(--koerber-toast-stack-spacing)';\n        childAlert.style.right = '0';\n        childAlert.style.width = '100%';\n\n        if (!this.open) {\n          this.show();\n        }\n\n        return;\n      }\n\n      if (toastStack.parentElement === null) {\n        document.body.append(toastStack);\n      }\n\n      toastStack.appendChild(this);\n\n      // Wait for the toast stack to render\n      requestAnimationFrame(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions -- force a reflow for the initial transition\n        this.clientWidth;\n        this.show();\n      });\n\n      this.addEventListener(\n        'koerber-after-hide',\n        () => {\n          toastStack.removeChild(this);\n          resolve();\n\n          // Remove the toast stack from the DOM when there are no more alerts\n          if (toastStack.querySelector('koerber-alert') === null) {\n            toastStack.remove();\n          }\n        },\n        { once: true }\n      );\n    });\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  async handleOpenChange() {\n    if (this.open) {\n      // Show\n      this.emit('koerber-show');\n\n      if (this.duration < Infinity) {\n        this.restartAutoHide();\n      }\n\n      await stopAnimations(this.base);\n      this.base.hidden = false;\n      const { keyframes, options } = getAnimation(this, 'alert.show', { dir: this.localize.dir() });\n      await animateTo(this.base, keyframes, options);\n\n      this.emit('koerber-after-show');\n    } else {\n      // Hide\n      this.emit('koerber-hide');\n\n      clearTimeout(this.autoHideTimeout);\n\n      await stopAnimations(this.base);\n      const { keyframes, options } = getAnimation(this, 'alert.hide', { dir: this.localize.dir() });\n      await animateTo(this.base, keyframes, options);\n      this.base.hidden = true;\n\n      this.emit('koerber-after-hide');\n    }\n  }\n\n  @watch('duration')\n  handleDurationChange() {\n    this.restartAutoHide();\n  }\n\n  /** Shows the alert. */\n  async show() {\n    this.open = true;\n    return waitForEvent(this, 'koerber-after-show');\n  }\n\n  /** Hides the alert */\n  async hide() {\n    this.open = false;\n    return waitForEvent(this, 'koerber-after-hide');\n  }\n\n  render() {\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n          alert: true,\n          'alert--multiline': this.actionsPlacement === 'footer',\n          'alert--open': this.open,\n          'alert--closable': this.closable,\n          [`alert--${this.variant}`]: true\n        })}\n        role=\"alert\"\n        aria-hidden=${this.open ? 'false' : 'true'}\n        @mousemove=${this.handleMouseMove}\n      >\n        <div\n          class=${classMap({\n            'alert__body-container': true,\n            'alert__body-container-multiline': this.actionsPlacement === 'footer'\n          })}\n        >\n          <div\n            class=${classMap({\n              'alert__content-container': true,\n              'alert__content-container-multiline': this.actionsPlacement === 'footer'\n            })}\n          >\n            ${this.hasSlotController.test('icon')\n              ? html`\n                  <slot\n                    name=\"icon\"\n                    class=${classMap({\n                      alert__icon: true,\n                      alert__icon__multiline: this.actionsPlacement === 'footer'\n                    })}\n                  ></slot>\n                `\n              : ''}\n            <div\n              part=\"message\"\n              class=${classMap({\n                alert__message: true,\n                multiline: true,\n                'footer--active': this.actionsPlacement === 'footer'\n              })}\n              aria-live=\"polite\"\n            >\n              <slot></slot>\n            </div>\n          </div>\n          <div\n            part=\"expand\"\n            class=${classMap({\n              alert__expand: true,\n              alert__expand_multiline: this.actionsPlacement === 'footer'\n            })}\n          >\n            <slot name=\"expand\"></slot>\n          </div>\n          <div\n            part=\"actions\"\n            class=${classMap({\n              alert__actions: true,\n              alert__actions_multiline: this.actionsPlacement === 'footer'\n            })}\n          >\n            <slot name=\"action\"></slot>\n          </div>\n        </div>\n\n        ${this.closable\n          ? html`\n              <koerber-button\n                part=\"close-button\"\n                exportparts=\"base:close-button__base\"\n                class=\"alert__close-button\"\n                aria-label=${this.localize.term('close')}\n                name=${this.localize.term('close')}\n                label=${this.localize.term('close')}\n                @click=${this.handleCloseClick}\n                icon-only\n                variant=\"ghost\"\n                icon=\"close\"\n              >\n                <koerber-icon name=\"close\"></koerber-icon>\n              </koerber-button>\n            `\n          : ''}\n      </div>\n    `;\n  }\n}\n\nsetDefaultAnimation('alert.show', {\n  keyframes: [\n    { opacity: 0, scale: 0.8 },\n    { opacity: 1, scale: 1 }\n  ],\n  options: { duration: 250, easing: 'ease' }\n});\n\nsetDefaultAnimation('alert.hide', {\n  keyframes: [\n    { opacity: 1, scale: 1 },\n    { opacity: 0, scale: 0.8 }\n  ],\n  options: { duration: 250, easing: 'ease' }\n});\n"],
  "mappings": "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",
  "names": []
}
