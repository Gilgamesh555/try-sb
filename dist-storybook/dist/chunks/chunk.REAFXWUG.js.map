{
  "version": 3,
  "sources": ["../../src/components/search-option/search-option.component.ts"],
  "sourcesContent": ["import { classMap } from 'lit/directives/class-map.js';\r\nimport { html } from 'lit';\r\nimport { LocalizeController } from '../../utilities/localize';\r\nimport { property, query, state } from 'lit/decorators.js';\r\nimport { watch } from '../../internal/watch';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport styles from './search-option.styles';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\n\r\n/**\r\n * @summary Search Options define the selectable options within the Search Component.\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-search-option--docs\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @slot - The search option's label.\r\n * @slot suffix - Used to append an icon or similar element to the search option.\r\n *\r\n * @csspart base - The component's base wrapper.\r\n * @csspart label - The search option's label.\r\n * @csspart prefix - The container that wraps the prefix.\r\n * @csspart suffix - The container that wraps the suffix.\r\n */\r\nexport default class SearchOption extends UIKitElement {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n\r\n  // @ts-expect-error - Controller is currently unused\r\n  private readonly localize = new LocalizeController(this);\r\n\r\n  @query('.search-option__label') defaultSlot: HTMLSlotElement;\r\n\r\n  @state() current = false; // the user has keyed into the search-option, but hasn't selected it yet (shows a highlight)\r\n  @state() selected = false; // the search-option is selected and has aria-selected=\"true\"\r\n  @state() hasHover = false; // we need this because Safari doesn't honor :hover styles while dragging\r\n\r\n  /**\r\n   * The search-option's value. When selected, the containing form control will receive this value. The value must be unique\r\n   * from other search-options in the same group.\r\n   */\r\n  @property({ reflect: true }) value = '';\r\n\r\n  /** Draws the search-option in a disabled state, preventing selection. */\r\n  @property({ type: Boolean, reflect: true }) disabled = false;\r\n\r\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.setAttribute('role', 'option');\r\n    this.setAttribute('aria-selected', 'false');\r\n  }\r\n\r\n  private handleMouseEnter() {\r\n    this.hasHover = true;\r\n  }\r\n\r\n  private handleMouseLeave() {\r\n    this.hasHover = false;\r\n  }\r\n\r\n  @watch('disabled')\r\n  handleDisabledChange() {\r\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\r\n  }\r\n\r\n  @watch('selected')\r\n  handleSelectedChange() {\r\n    this.setAttribute('aria-selected', this.selected ? 'true' : 'false');\r\n  }\r\n\r\n  @watch('value')\r\n  handleValueChange() {\r\n    // Ensure the value is a string. This ensures the next line doesn't error and allows framework users to pass numbers\r\n    // instead of requiring them to cast the value to a string.\r\n    if (typeof this.value !== 'string') {\r\n      this.value = String(this.value);\r\n    }\r\n\r\n    if (this.value.includes(' ')) {\r\n      // For now we will allow spaces - only we are going to send a console warning\r\n      console.warn(`search-option values preferably should not include spaces.`, this);\r\n      // For now we will allow spaces\r\n      // this.value = this.value.replace(/ /g, '_');\r\n    }\r\n  }\r\n\r\n  /** Returns a plain text label based on the search-option's content. */\r\n  getTextLabel() {\r\n    const nodes = this.childNodes;\r\n    let label = '';\r\n\r\n    [...nodes].forEach(node => {\r\n      if (node.nodeType === Node.ELEMENT_NODE) {\r\n        if (!(node as HTMLElement).hasAttribute('slot')) {\r\n          label += (node as HTMLElement).textContent;\r\n        }\r\n      }\r\n\r\n      if (node.nodeType === Node.TEXT_NODE) {\r\n        label += node.textContent;\r\n      }\r\n    });\r\n    return label.trim();\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div\r\n        part=\"base\"\r\n        class=${classMap({\r\n          'search-option': true,\r\n          'search-option--current': this.current,\r\n          'search-option--disabled': this.disabled,\r\n          'search-option--selected': this.selected,\r\n          'search-option--hover': this.hasHover,\r\n          [`search-option--${this.size}`]: true\r\n        })}\r\n        @mouseenter=${this.handleMouseEnter}\r\n        @mouseleave=${this.handleMouseLeave}\r\n      >\r\n        <!-- Hide prefix slot instead of removing it entirely -->\r\n        <!-- <slot part=\"prefix\" name=\"prefix\" class=\"search-option__prefix\"></slot> -->\r\n        <span part=\"label\" class=\"search-option__label\">${this.value}</span>\r\n        <slot part=\"suffix\" name=\"suffix\" class=\"search-option__suffix\"></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,YAAY;AAErB,SAAS,UAAU,OAAO,aAAa;AAqBvC,IAAqB,eAArB,cAA0C,aAAa;AAAA,EAAvD;AAAA;AAIE;AAAA,SAAiB,WAAW,IAAI,mBAAmB,IAAI;AAI9C,mBAAU;AACV,oBAAW;AACX,oBAAW;AAMS,iBAAQ;AAGO,oBAAW;AAE1B,gBAAqC;AAAA;AAAA,EAElE,oBAAoB;AAClB,UAAM,kBAAkB;AACxB,SAAK,aAAa,QAAQ,QAAQ;AAClC,SAAK,aAAa,iBAAiB,OAAO;AAAA,EAC5C;AAAA,EAEQ,mBAAmB;AACzB,SAAK,WAAW;AAAA,EAClB;AAAA,EAEQ,mBAAmB;AACzB,SAAK,WAAW;AAAA,EAClB;AAAA,EAGA,uBAAuB;AACrB,SAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO;AAAA,EACrE;AAAA,EAGA,uBAAuB;AACrB,SAAK,aAAa,iBAAiB,KAAK,WAAW,SAAS,OAAO;AAAA,EACrE;AAAA,EAGA,oBAAoB;AAGlB,QAAI,OAAO,KAAK,UAAU,UAAU;AAClC,WAAK,QAAQ,OAAO,KAAK,KAAK;AAAA,IAChC;AAEA,QAAI,KAAK,MAAM,SAAS,GAAG,GAAG;AAE5B,cAAQ,KAAK,8DAA8D,IAAI;AAAA,IAGjF;AAAA,EACF;AAAA;AAAA,EAGA,eAAe;AACb,UAAM,QAAQ,KAAK;AACnB,QAAI,QAAQ;AAEZ,KAAC,GAAG,KAAK,EAAE,QAAQ,UAAQ;AACzB,UAAI,KAAK,aAAa,KAAK,cAAc;AACvC,YAAI,CAAE,KAAqB,aAAa,MAAM,GAAG;AAC/C,mBAAU,KAAqB;AAAA,QACjC;AAAA,MACF;AAEA,UAAI,KAAK,aAAa,KAAK,WAAW;AACpC,iBAAS,KAAK;AAAA,MAChB;AAAA,IACF,CAAC;AACD,WAAO,MAAM,KAAK;AAAA,EACpB;AAAA,EAEA,SAAS;AACP,WAAO;AAAA;AAAA;AAAA,gBAGK,SAAS;AAAA,MACf,iBAAiB;AAAA,MACjB,0BAA0B,KAAK;AAAA,MAC/B,2BAA2B,KAAK;AAAA,MAChC,2BAA2B,KAAK;AAAA,MAChC,wBAAwB,KAAK;AAAA,MAC7B,CAAC,kBAAkB,KAAK,IAAI,EAAE,GAAG;AAAA,IACnC,CAAC,CAAC;AAAA,sBACY,KAAK,gBAAgB;AAAA,sBACrB,KAAK,gBAAgB;AAAA;AAAA;AAAA;AAAA,0DAIe,KAAK,KAAK;AAAA;AAAA;AAAA;AAAA,EAIlE;AACF;AAxGqB,aACZ,SAAyB,CAAC,0BAAiB,4BAAM;AAKxB;AAAA,EAA/B,MAAM,uBAAuB;AAAA,GANX,aAMa;AAEvB;AAAA,EAAR,MAAM;AAAA,GARY,aAQV;AACA;AAAA,EAAR,MAAM;AAAA,GATY,aASV;AACA;AAAA,EAAR,MAAM;AAAA,GAVY,aAUV;AAMoB;AAAA,EAA5B,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GAhBR,aAgBU;AAGe;AAAA,EAA3C,SAAS,EAAE,MAAM,SAAS,SAAS,KAAK,CAAC;AAAA,GAnBvB,aAmByB;AAEf;AAAA,EAA5B,SAAS,EAAE,SAAS,KAAK,CAAC;AAAA,GArBR,aAqBU;AAiB7B;AAAA,EADC,MAAM,UAAU;AAAA,GArCE,aAsCnB;AAKA;AAAA,EADC,MAAM,UAAU;AAAA,GA1CE,aA2CnB;AAKA;AAAA,EADC,MAAM,OAAO;AAAA,GA/CK,aAgDnB;",
  "names": []
}
