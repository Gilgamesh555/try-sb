{
  "version": 3,
  "sources": ["../../src/components/accordion/accordion.component.ts"],
  "sourcesContent": ["import { animateTo, shimKeyframesHeightAuto, stopAnimations } from '../../internal/animate';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { getAnimation, setDefaultAnimation } from '../../utilities/animation-registry';\nimport { HasSlotController } from '../../internal/slot';\nimport { html } from 'lit';\nimport { LocalizeController } from '../../utilities/localize';\nimport { property, query } from 'lit/decorators.js';\nimport { waitForEvent } from '../../internal/event';\nimport { watch } from '../../internal/watch';\nimport componentStyles from '../../styles/component.styles';\nimport Icon from '../icon/icon.component';\nimport styles from './accordion.styles';\nimport UIKitElement from '../../internal/uikit-element';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Accordion show a brief summary and expand to show additional content.\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-accordion--docs\n * @status stable\n * @since 2.0\n *\n * @dependency koerber-icon\n *\n * @slot - The accordion' main content.\n * @slot expand-icon - Optional expand icon to use instead of the default. Works best with `<koerber-icon>`.\n * @slot collapse-icon - Optional collapse icon to use instead of the default. Works best with `<koerber-icon>`.\n * @slot prefix - Optional left side of the summary - Summary section.\n * @slot suffix - Optional right side of the summary - Summary section.\n * @slot prefix-content - Optional left side of the content - Body section.\n * @slot suffix-content - Optional right side of the content - Body section.\n * @slot summary - The accordion' summary. Alternatively, you can use the `summary` attribute.\n * @slot subtitle - The accordion' subtitle. Alternatively, you can use the `subtitle` attribute.\n *\n * @event koerber-show - Emitted when the accordion opens.\n * @event koerber-after-show - Emitted after the accordion opens and all animations are complete.\n * @event koerber-hide - Emitted when the accordion closes.\n * @event koerber-after-hide - Emitted after the accordion closes and all animations are complete.\n *\n * @csspart base - The component's base wrapper.\n * @csspart header - The header that wraps both the summary and the expand/collapse icon.\n * @csspart summary - The container that wraps the summary.\n * @csspart summary-icon - The container that wraps the expand/collapse icons.\n * @csspart content - The accordion content.\n *\n * @animation accordion.show - The animation to use when showing accordion. You can use `height: auto` with this animation.\n * @animation accordion.hide - The animation to use when hiding accordion. You can use `height: auto` with this animation.\n */\nexport default class Accordion extends UIKitElement {\n  static styles: CSSResultGroup = [componentStyles, styles];\n  static dependencies = { 'koerber-icon': Icon };\n\n  private readonly localize = new LocalizeController(this);\n  private readonly hasSlotController = new HasSlotController(this, '[default]', 'prefix-content', 'suffix-content');\n\n  @query('.accordion') accordion: HTMLElement;\n  @query('.accordion__header') header: HTMLElement;\n  @query('.accordion__body') body: HTMLElement;\n  @query('.accordion__expand-icon-slot') expandIconSlot: HTMLSlotElement;\n\n  /**\n   * Indicates whether or not the accordion is open. You can toggle this attribute to show and hide the accordion, or you\n   * can use the `show()` and `hide()` methods and this attribute will reflect the accordion' open state.\n   */\n  @property({ type: Boolean, reflect: true }) open = false;\n\n  /** The summary to show in the header. If you need to display HTML, use the `summary` slot instead. */\n  @property() summary: string;\n\n  /** The text to complement the title below of them. */\n  @property() subtitle: string;\n\n  /** Disables the accordion so it can't be toggled. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** The size of the accordion header */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** The direction of which the chevron should be displayed in the summary section */\n  @property({ reflect: true }) direction: 'left' | 'right' = 'left';\n\n  firstUpdated() {\n    this.body.hidden = !this.open;\n    this.body.style.height = this.open ? 'auto' : '0';\n  }\n\n  private handleSummaryClick(event: MouseEvent) {\n    const target = event.target as HTMLElement;\n    const checkbox = target.closest('koerber-checkbox');\n\n    // If the user clicked on a checkbox, don't toggle the accordion\n    if (checkbox) {\n      return;\n    }\n\n    if (!this.disabled) {\n      if (this.open) {\n        this.hide();\n      } else {\n        this.show();\n      }\n\n      this.header.focus();\n    }\n  }\n\n  private handleSummaryKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n\n      if (this.open) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n      event.preventDefault();\n      this.hide();\n    }\n\n    if (event.key === 'ArrowDown' || event.key === 'ArrowRight') {\n      event.preventDefault();\n      this.show();\n    }\n  }\n\n  @watch('open', { waitUntilFirstUpdate: true })\n  async handleOpenChange() {\n    if (this.open) {\n      // Show\n      const koerberShow = this.emit('koerber-show', { cancelable: true });\n      if (koerberShow.defaultPrevented) {\n        this.open = false;\n        return;\n      }\n\n      await stopAnimations(this.body);\n      this.body.hidden = false;\n\n      const { keyframes, options } = getAnimation(this, 'accordion.show', { dir: this.localize.dir() });\n      await animateTo(this.body, shimKeyframesHeightAuto(keyframes, this.body.scrollHeight), options);\n      this.body.style.height = 'auto';\n\n      this.emit('koerber-after-show');\n    } else {\n      // Hide\n      const koerberHide = this.emit('koerber-hide', { cancelable: true });\n      if (koerberHide.defaultPrevented) {\n        this.open = true;\n        return;\n      }\n\n      await stopAnimations(this.body);\n\n      const { keyframes, options } = getAnimation(this, 'accordion.hide', { dir: this.localize.dir() });\n      await animateTo(this.body, shimKeyframesHeightAuto(keyframes, this.body.scrollHeight), options);\n      this.body.hidden = true;\n      this.body.style.height = 'auto';\n\n      this.emit('koerber-after-hide');\n    }\n  }\n\n  /** Shows the accordion. */\n  async show() {\n    if (this.open || this.disabled) {\n      return undefined;\n    }\n\n    this.open = true;\n    return waitForEvent(this, 'koerber-after-show');\n  }\n\n  /** Hides the accordion */\n  async hide() {\n    if (!this.open || this.disabled) {\n      return undefined;\n    }\n\n    this.open = false;\n    return waitForEvent(this, 'koerber-after-hide');\n  }\n\n  render() {\n    const isRtl = this.localize.dir() === 'rtl';\n    const summary_icon_part = html`\n      <span part=\"summary-icon\" class=\"accordion__summary-icon\">\n        <slot name=\"expand-icon\">\n          <koerber-icon library=\"system\" name=\"chevron-down\"></koerber-icon>\n        </slot>\n        <slot name=\"collapse-icon\">\n          <koerber-icon library=\"system\" name=\"chevron-down\"></koerber-icon>\n        </slot>\n      </span>\n    `;\n\n    return html`\n      <div\n        part=\"base\"\n        class=${classMap({\n          accordion: true,\n          'accordion--open': this.open,\n          'accordion--disabled': this.disabled,\n          'accordion--rtl': isRtl,\n          [`accordion--${this.size}`]: true\n        })}\n      >\n        <div\n          part=\"header\"\n          id=\"header\"\n          class=${classMap({\n            accordion__header: true,\n            [`accordion__header--${this.size}`]: true\n          })}\n          role=\"button\"\n          aria-expanded=${this.open ? 'true' : 'false'}\n          aria-controls=\"content\"\n          aria-disabled=${this.disabled ? 'true' : 'false'}\n          aria-label=\"Expand/Collapse\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          @click=${this.handleSummaryClick}\n          @keydown=${this.handleSummaryKeyDown}\n        >\n          ${this.direction === 'left' ? summary_icon_part : ''}\n\n          <slot name=\"prefix\" part=\"prefix-side\" class=\"accordion__title__prefix\"></slot>\n\n          <div part=\"body-summary\" class=\"accordion__body-summary\">\n            <slot name=\"summary\" part=\"summary\" class=\"accordion__summary\">${this.summary}</slot>\n            <slot name=\"subtitle\" part=\"subtitle\" class=\"accordion__subtitle\">${this.subtitle}</slot>\n          </div>\n\n          <slot name=\"suffix\" part=\"suffix-side\" class=\"accordion__title__suffix\"></slot>\n\n          ${this.direction === 'right' ? summary_icon_part : ''}\n        </div>\n\n        <div\n          class=${classMap({\n            accordion__body: true,\n            [`accordion__body--${this.size}`]: true\n          })}\n          role=\"region\"\n          aria-labelledby=\"header\"\n        >\n          <slot name=\"prefix-content\" part=\"prefix-content\" class=\"accordion__body__prefix-content\"></slot>\n          <slot\n            part=\"content\"\n            id=\"content\"\n            class=${classMap({\n              accordion__content: true\n            })}\n          >\n          </slot>\n          ${this.hasSlotController.test('suffix-content')\n            ? html`<div part=\"suffix-content\" class=\"accordion__body__suffix-content\">\n                <slot name=\"suffix-content\"></slot>\n              </div>`\n            : ''}\n        </div>\n      </div>\n    `;\n  }\n}\n\nsetDefaultAnimation('accordion.show', {\n  keyframes: [\n    { height: '0', opacity: '0' },\n    { height: 'auto', opacity: '1' }\n  ],\n  options: { duration: 250, easing: 'linear' }\n});\n\nsetDefaultAnimation('accordion.hide', {\n  keyframes: [\n    { height: 'auto', opacity: '1' },\n    { height: '0', opacity: '0' }\n  ],\n  options: { duration: 250, easing: 'linear' }\n});\n"],
  "mappings": "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",
  "names": []
}
