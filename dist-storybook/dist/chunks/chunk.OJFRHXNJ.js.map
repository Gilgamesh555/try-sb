{
  "version": 3,
  "sources": ["../../src/components/drawer/drawer.component.ts", "../../src/internal/string.ts", "../../src/internal/modal.ts"],
  "sourcesContent": ["import { animateTo, stopAnimations } from '../../internal/animate';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { getAnimation, setDefaultAnimation } from '../../utilities/animation-registry';\r\nimport { HasSlotController } from '../../internal/slot';\r\nimport { html } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport { LocalizeController } from '../../utilities/localize';\r\nimport { lockBodyScrolling, unlockBodyScrolling } from '../../internal/scroll';\r\nimport { property, query } from 'lit/decorators.js';\r\nimport { uppercaseFirstLetter } from '../../internal/string';\r\nimport { waitForEvent } from '../../internal/event';\r\nimport { watch } from '../../internal/watch';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport IconButton from '../icon-button/icon-button.component';\r\nimport Modal from '../../internal/modal';\r\nimport styles from './drawer.styles';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\n\r\n/**\r\n * @summary Drawers slide in from a container to expose additional options and information.\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-drawer--docs\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @dependency koerber-icon-button\r\n *\r\n * @slot - The drawer's main content.\r\n * @slot icon - Optional icon to add to the icon before the label. Works best with `<koerber-icon>`.\r\n * @slot label - The drawer's label. Alternatively, you can use the `label` attribute.\r\n * @slot footer - The drawer's footer, usually one or more buttons representing various options.\r\n *\r\n * @event koerber-show - Emitted when the drawer opens.\r\n * @event koerber-after-show - Emitted after the drawer opens and all animations are complete.\r\n * @event koerber-hide - Emitted when the drawer closes.\r\n * @event koerber-after-hide - Emitted after the drawer closes and all animations are complete.\r\n * @event koerber-initial-focus - Emitted when the drawer opens and is ready to receive focus. Calling\r\n *   `event.preventDefault()` will prevent focusing and allow you to set it on a different element, such as an input.\r\n * @event koerber-request-close - Emitted when the user attempts to\r\n *   close the drawer by clicking the close button, clicking the overlay, or pressing escape. Calling\r\n *   `event.preventDefault()` will keep the drawer open. Avoid using this unless closing the drawer will result in\r\n *   destructive behavior such as data loss.\r\n *\r\n * @csspart base - The component's base wrapper.\r\n * @csspart overlay - The overlay that covers the screen behind the drawer.\r\n * @csspart panel - The drawer's panel (where the drawer and its content are rendered).\r\n * @csspart header - The drawer's header. This element wraps the title and header actions.\r\n * @csspart icon - Optional icon to add to the header before the label. Works best with `<koerber-icon>`.\r\n * @csspart title - The drawer's title.\r\n * @csspart close-button - The close button, an `<koerber-icon-button>`.\r\n * @csspart close-button__base - The close button's exported `base` part.\r\n * @csspart body - The drawer's body.\r\n * @csspart footer - The drawer's footer.\r\n *\r\n * @cssproperty --koerber-drawer-contained-z-index - The z-index for contained (non-modal) drawer.\r\n * @cssproperty --koerber-drawer-z-index - The z-index for modal drawer.\r\n * @cssproperty --koerber-drawer-small-max-width - The max width for drawer with small size.\r\n * @cssproperty --koerber-drawer-large-max-width - The max width for drawer with large size.\r\n * @cssproperty --koerber-drawer-header-spacing - The amount of padding to use for the header.\r\n * @cssproperty --koerber-drawer-body-spacing - The amount of padding to use for the body.\r\n * @cssproperty --koerber-drawer-footer-spacing - The amount of padding to use for the footer.\r\n * @cssproperty --koerber-drawer-panel-spacing: - The amount of margin to use for the panel.\r\n * @cssproperty --koerber-drawer-overlay-color - The background color of the overlay.\r\n * @cssproperty --koerber-drawer-overlay-opacity - The target opacity of the overlay in percents.\r\n *\r\n * @animation drawer.showEnd - The animation to use when showing a drawer with `end` placement.\r\n * @animation drawer.showStart - The animation to use when showing a drawer with `start` placement.\r\n * @animation drawer.hideEnd - The animation to use when hiding a drawer with `end` placement.\r\n * @animation drawer.hideStart - The animation to use when hiding a drawer with `start` placement.\r\n * @animation drawer.denyClose - The animation to use when a request to close the drawer is denied.\r\n * @animation drawer.overlay.show - The animation to use when showing the drawer's overlay.\r\n * @animation drawer.overlay.hide - The animation to use when hiding the drawer's overlay.\r\n *\r\n * @property modal - Exposes the internal modal utility that controls focus trapping. To temporarily disable focus\r\n *   trapping and allow third-party modals spawned from an active modal, call `modal.activateExternal()` when\r\n *   the third-party modal opens. Upon closing, call `modal.deactivateExternal()` to restore Shoelace's focus trapping.\r\n */\r\nexport default class Drawer extends UIKitElement {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n  static dependencies = { 'koerber-icon-button': IconButton };\r\n\r\n  private readonly hasSlotController = new HasSlotController(this, 'footer', 'icon');\r\n  private readonly localize = new LocalizeController(this);\r\n  private originalTrigger: HTMLElement | null;\r\n  public modal = new Modal(this);\r\n\r\n  @query('.drawer') drawer: HTMLElement;\r\n  @query('.drawer__panel') panel: HTMLElement;\r\n  @query('.drawer__overlay') overlay: HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether or not the drawer is open. You can toggle this attribute to show and hide the drawer, or you can\r\n   * use the `show()` and `hide()` methods and this attribute will reflect the drawer's open state.\r\n   */\r\n  @property({ type: Boolean, reflect: true }) open = false;\r\n\r\n  /**\r\n   * The drawer's label as displayed in the header. You should always include a relevant label even when using\r\n   * `no-header`, as it is required for proper accessibility. If you need to display HTML, use the `label` slot instead.\r\n   */\r\n  @property({ reflect: true }) label = '';\r\n\r\n  /** The direction from which the drawer will open. */\r\n  @property({ reflect: true }) placement: 'end' | 'start' = 'end';\r\n\r\n  /** The drawer's size. */\r\n  @property({ reflect: true }) size: 'small' | 'large' = 'small';\r\n\r\n  /**\r\n   * By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\r\n   * its parent element, set this attribute and add `position: relative` to the parent.\r\n   */\r\n  @property({ type: Boolean, reflect: true }) contained = false;\r\n\r\n  /**\r\n   * Removes the header. This will also remove the default close button, so please ensure you provide an easy,\r\n   * accessible way for users to dismiss the drawer.\r\n   */\r\n  @property({ attribute: 'no-header', type: Boolean, reflect: true }) noHeader = false;\r\n\r\n  firstUpdated() {\r\n    this.drawer.hidden = !this.open;\r\n\r\n    if (this.open) {\r\n      this.addOpenListeners();\r\n\r\n      if (!this.contained) {\r\n        this.modal.activate();\r\n        lockBodyScrolling(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    unlockBodyScrolling(this);\r\n  }\r\n\r\n  private requestClose(source: 'close-button' | 'keyboard' | 'overlay') {\r\n    const slRequestClose = this.emit('koerber-request-close', {\r\n      cancelable: true,\r\n      detail: { source }\r\n    });\r\n\r\n    if (slRequestClose.defaultPrevented) {\r\n      const animation = getAnimation(this, 'drawer.denyClose', { dir: this.localize.dir() });\r\n      animateTo(this.panel, animation.keyframes, animation.options);\r\n      return;\r\n    }\r\n\r\n    this.hide();\r\n  }\r\n\r\n  private addOpenListeners() {\r\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\r\n  }\r\n\r\n  private removeOpenListeners() {\r\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\r\n  }\r\n\r\n  private handleDocumentKeyDown = (event: KeyboardEvent) => {\r\n    // Contained drawers aren't modal and don't response to the escape key\r\n    if (this.contained) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Escape' && this.modal.isActive() && this.open) {\r\n      event.stopImmediatePropagation();\r\n      this.requestClose('keyboard');\r\n    }\r\n  };\r\n\r\n  @watch('open', { waitUntilFirstUpdate: true })\r\n  async handleOpenChange() {\r\n    if (this.open) {\r\n      // Show\r\n      this.emit('koerber-show');\r\n      this.addOpenListeners();\r\n      this.originalTrigger = document.activeElement as HTMLElement;\r\n\r\n      // Lock body scrolling only if the drawer isn't contained\r\n      if (!this.contained) {\r\n        this.modal.activate();\r\n        lockBodyScrolling(this);\r\n      }\r\n\r\n      // When the drawer is shown, Safari will attempt to set focus on whatever element has autofocus. This causes the\r\n      // drawer's animation to jitter, so we'll temporarily remove the attribute, call `focus({ preventScroll: true })`\r\n      // ourselves, and add the attribute back afterwards.\r\n      //\r\n      // Related: https://github.com/shoelace-style/shoelace/issues/693\r\n      //\r\n      const autoFocusTarget = this.querySelector('[autofocus]');\r\n      if (autoFocusTarget) {\r\n        autoFocusTarget.removeAttribute('autofocus');\r\n      }\r\n\r\n      await Promise.all([stopAnimations(this.drawer), stopAnimations(this.overlay)]);\r\n      this.drawer.hidden = false;\r\n\r\n      // Set initial focus\r\n      requestAnimationFrame(() => {\r\n        const slInitialFocus = this.emit('koerber-initial-focus', { cancelable: true });\r\n\r\n        if (!slInitialFocus.defaultPrevented) {\r\n          // Set focus to the autofocus target and restore the attribute\r\n          if (autoFocusTarget) {\r\n            (autoFocusTarget as HTMLInputElement).focus({ preventScroll: true });\r\n          } else {\r\n            this.panel.focus({ preventScroll: true });\r\n          }\r\n        }\r\n\r\n        // Restore the autofocus attribute\r\n        if (autoFocusTarget) {\r\n          autoFocusTarget.setAttribute('autofocus', '');\r\n        }\r\n      });\r\n\r\n      const panelAnimation = getAnimation(this, `drawer.show${uppercaseFirstLetter(this.placement)}`, {\r\n        dir: this.localize.dir()\r\n      });\r\n      const overlayAnimation = getAnimation(this, 'drawer.overlay.show', { dir: this.localize.dir() });\r\n      await Promise.all([\r\n        animateTo(this.panel, panelAnimation.keyframes, panelAnimation.options),\r\n        animateTo(this.overlay, overlayAnimation.keyframes, overlayAnimation.options)\r\n      ]);\r\n\r\n      this.emit('koerber-after-show');\r\n    } else {\r\n      // Hide\r\n      this.emit('koerber-hide');\r\n      this.removeOpenListeners();\r\n\r\n      if (!this.contained) {\r\n        this.modal.deactivate();\r\n        unlockBodyScrolling(this);\r\n      }\r\n\r\n      await Promise.all([stopAnimations(this.drawer), stopAnimations(this.overlay)]);\r\n      const panelAnimation = getAnimation(this, `drawer.hide${uppercaseFirstLetter(this.placement)}`, {\r\n        dir: this.localize.dir()\r\n      });\r\n      const overlayAnimation = getAnimation(this, 'drawer.overlay.hide', { dir: this.localize.dir() });\r\n\r\n      // Animate the overlay and the panel at the same time. Because animation durations might be different, we need to\r\n      // hide each one individually when the animation finishes, otherwise the first one that finishes will reappear\r\n      // unexpectedly. We'll unhide them after all animations have completed.\r\n      await Promise.all([\r\n        animateTo(this.overlay, overlayAnimation.keyframes, overlayAnimation.options).then(() => {\r\n          this.overlay.hidden = true;\r\n        }),\r\n        animateTo(this.panel, panelAnimation.keyframes, panelAnimation.options).then(() => {\r\n          this.panel.hidden = true;\r\n        })\r\n      ]);\r\n\r\n      this.drawer.hidden = true;\r\n\r\n      // Now that the dialog is hidden, restore the overlay and panel for next time\r\n      this.overlay.hidden = false;\r\n      this.panel.hidden = false;\r\n\r\n      // Restore focus to the original trigger\r\n      const trigger = this.originalTrigger;\r\n      if (typeof trigger?.focus === 'function') {\r\n        setTimeout(() => trigger.focus());\r\n      }\r\n\r\n      this.emit('koerber-after-hide');\r\n    }\r\n  }\r\n\r\n  @watch('contained', { waitUntilFirstUpdate: true })\r\n  handleNoModalChange() {\r\n    if (this.open && !this.contained) {\r\n      this.modal.activate();\r\n      lockBodyScrolling(this);\r\n    }\r\n\r\n    if (this.open && this.contained) {\r\n      this.modal.deactivate();\r\n      unlockBodyScrolling(this);\r\n    }\r\n  }\r\n\r\n  /** Shows the drawer. */\r\n  async show() {\r\n    if (this.open) {\r\n      return undefined;\r\n    }\r\n\r\n    this.open = true;\r\n    return waitForEvent(this, 'koerber-after-show');\r\n  }\r\n\r\n  /** Hides the drawer */\r\n  async hide() {\r\n    if (!this.open) {\r\n      return undefined;\r\n    }\r\n\r\n    this.open = false;\r\n    return waitForEvent(this, 'koerber-after-hide');\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div\r\n        part=\"base\"\r\n        class=${classMap({\r\n          drawer: true,\r\n          'drawer--open': this.open,\r\n          'drawer--small': this.size === 'small',\r\n          'drawer--large': this.size === 'large',\r\n          'drawer--end': this.placement === 'end',\r\n          'drawer--start': this.placement === 'start',\r\n          'drawer--contained': this.contained,\r\n          'drawer--fixed': !this.contained,\r\n          'drawer--rtl': this.localize.dir() === 'rtl',\r\n          'drawer--has-footer': this.hasSlotController.test('footer'),\r\n          'drawer--has-icon': this.hasSlotController.test('icon')\r\n        })}\r\n      >\r\n        <div part=\"overlay\" class=\"drawer__overlay\" @click=${() => this.requestClose('overlay')} tabindex=\"-1\"></div>\r\n\r\n        <div\r\n          part=\"panel\"\r\n          class=\"drawer__panel\"\r\n          role=\"dialog\"\r\n          aria-modal=\"true\"\r\n          aria-hidden=${this.open ? 'false' : 'true'}\r\n          aria-label=${ifDefined(this.noHeader ? this.label : undefined)}\r\n          aria-labelledby=${ifDefined(!this.noHeader ? 'title' : undefined)}\r\n          tabindex=\"0\"\r\n        >\r\n          ${!this.noHeader\r\n            ? html`\r\n                <header part=\"header\" class=\"drawer__header\">\r\n                  <h2 part=\"title\" class=\"drawer__title\" id=\"title\">\r\n                    <div part=\"icon\" class=\"drawer__title-icon\">\r\n                      <slot name=\"icon\"></slot>\r\n                    </div>\r\n                    <!-- If there's no label, use an invisible character to prevent the header from collapsing -->\r\n                    <div part=\"title-label\" class=\"drawer__title-label\">\r\n                      <slot name=\"label\"> ${this.label.length > 0 ? this.label : String.fromCharCode(65279)} </slot>\r\n                    </div>\r\n                  </h2>\r\n                  <div class=\"drawer__header-actions\">\r\n                    <koerber-icon-button\r\n                      size=\"large\"\r\n                      part=\"close-button\"\r\n                      exportparts=\"base:close-button__base\"\r\n                      class=\"drawer__close\"\r\n                      name=\"close\"\r\n                      label=${this.localize.term('close')}\r\n                      library=\"system\"\r\n                      @click=${() => this.requestClose('close-button')}\r\n                    ></koerber-icon-button>\r\n                  </div>\r\n                </header>\r\n              `\r\n            : ''}\r\n\r\n          <slot part=\"body\" class=\"drawer__body\"></slot>\r\n\r\n          <footer part=\"footer\" class=\"drawer__footer\">\r\n            <slot name=\"footer\"></slot>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\n// End\r\nsetDefaultAnimation('drawer.showEnd', {\r\n  keyframes: [\r\n    { opacity: 0, translate: '100%' },\r\n    { opacity: 1, translate: '0' }\r\n  ],\r\n  rtlKeyframes: [\r\n    { opacity: 0, translate: '-100%' },\r\n    { opacity: 1, translate: '0' }\r\n  ],\r\n  options: { duration: 250, easing: 'ease' }\r\n});\r\n\r\nsetDefaultAnimation('drawer.hideEnd', {\r\n  keyframes: [\r\n    { opacity: 1, translate: '0' },\r\n    { opacity: 0, translate: '100%' }\r\n  ],\r\n  rtlKeyframes: [\r\n    { opacity: 1, translate: '0' },\r\n    { opacity: 0, translate: '-100%' }\r\n  ],\r\n  options: { duration: 250, easing: 'ease' }\r\n});\r\n\r\n// Start\r\nsetDefaultAnimation('drawer.showStart', {\r\n  keyframes: [\r\n    { opacity: 0, translate: '-100%' },\r\n    { opacity: 1, translate: '0' }\r\n  ],\r\n  rtlKeyframes: [\r\n    { opacity: 0, translate: '100%' },\r\n    { opacity: 1, translate: '0' }\r\n  ],\r\n  options: { duration: 250, easing: 'ease' }\r\n});\r\n\r\nsetDefaultAnimation('drawer.hideStart', {\r\n  keyframes: [\r\n    { opacity: 1, translate: '0' },\r\n    { opacity: 0, translate: '-100%' }\r\n  ],\r\n  rtlKeyframes: [\r\n    { opacity: 1, translate: '0' },\r\n    { opacity: 0, translate: '100%' }\r\n  ],\r\n  options: { duration: 250, easing: 'ease' }\r\n});\r\n\r\n// Deny close\r\nsetDefaultAnimation('drawer.denyClose', {\r\n  keyframes: [{ scale: 1 }, { scale: 1.01 }, { scale: 1 }],\r\n  options: { duration: 250 }\r\n});\r\n\r\n// Overlay\r\nsetDefaultAnimation('drawer.overlay.show', {\r\n  keyframes: [{ opacity: 0 }, { opacity: 1 }],\r\n  options: { duration: 250 }\r\n});\r\n\r\nsetDefaultAnimation('drawer.overlay.hide', {\r\n  keyframes: [{ opacity: 1 }, { opacity: 0 }],\r\n  options: { duration: 250 }\r\n});\r\n", "/** Converts the first letter of a string to uppercase */\nexport function uppercaseFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n", "import { getTabbableBoundary } from './tabbable';\n\nlet activeModals: HTMLElement[] = [];\n\nexport default class Modal {\n  element: HTMLElement;\n  tabDirection: 'forward' | 'backward' = 'forward';\n\n  constructor(element: HTMLElement) {\n    this.element = element;\n    this.handleFocusIn = this.handleFocusIn.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  activate() {\n    activeModals.push(this.element);\n    document.addEventListener('focusin', this.handleFocusIn);\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  deactivate() {\n    activeModals = activeModals.filter(modal => modal !== this.element);\n    document.removeEventListener('focusin', this.handleFocusIn);\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  isActive() {\n    // The \"active\" modal is always the most recent one shown\n    return activeModals[activeModals.length - 1] === this.element;\n  }\n\n  checkFocus() {\n    if (this.isActive()) {\n      if (!this.element.matches(':focus-within')) {\n        const { start, end } = getTabbableBoundary(this.element);\n        const target = this.tabDirection === 'forward' ? start : end;\n\n        if (typeof target?.focus === 'function') {\n          target.focus({ preventScroll: true });\n        }\n      }\n    }\n  }\n\n  handleFocusIn() {\n    this.checkFocus();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Tab' && event.shiftKey) {\n      this.tabDirection = 'backward';\n\n      // Ensure focus remains trapped after the key is pressed\n      requestAnimationFrame(() => this.checkFocus());\n    }\n  }\n\n  handleKeyUp() {\n    this.tabDirection = 'forward';\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
