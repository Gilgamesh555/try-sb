{
  "version": 3,
  "sources": ["../../src/components/chip/chip.component.ts"],
  "sourcesContent": ["import { classMap } from 'lit/directives/class-map.js';\nimport { html } from 'lit';\nimport { live } from 'lit/directives/live.js';\nimport { LocalizeController } from '../../utilities/localize';\nimport { property, query, state } from 'lit/decorators.js';\nimport { watch } from '../../internal/watch';\nimport Button from '../button/button.component';\nimport componentStyles from '../../styles/component.styles';\nimport styles from './chip.styles';\nimport UIKitElement from '../../internal/uikit-element';\nimport type { CSSResultGroup } from 'lit';\n\n/**\n * @summary Chips are used as labels to organize things or to indicate a selection.\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-chip--docs\n * @status stable\n * @since 2.0\n *\n * @dependency koerber-icon-button\n * @dependency koerber-icon\n *\n * @slot - The chip's content.\n * @slot next-icon - Optional next icon to use instead of the default. Works best with `<koerber-icon>`.\n * @slot previous-icon - Optional previous icon to use instead of the default. Works best with `<koerber-icon>`.\n *\n * @event koerber-click - Emitted when the chip is clicked.\n * @event koerber-remove - Emitted when the remove button is activated.\n * @event koerber-focus - Emitted when the chip gains focus.\n * @event koerber-blur - Emitted when the chip loses focus.\n *\n * @method click - Simulates a click on the chip.\n * @method focus - Sets focus on the chip.\n * @method blur - Removes focus from the chip.\n * @method delete - Removes the chip.\n *\n *\n * @csspart base - The component's base wrapper.\n * @csspart content - The chip's content.\n * @csspart remove-button - The chip's remove button, an `<sl-icon-button>`.\n * @csspart remove-button__base - The remove button's exported `base` part.\n */\nexport default class Chip extends UIKitElement {\n  static styles: CSSResultGroup = [componentStyles, styles];\n  static dependencies = { 'koerber-button': Button };\n  private readonly localize = new LocalizeController(this);\n\n  /** The chip element itself */\n  @query('.chip') chip: HTMLButtonElement | HTMLLinkElement;\n\n  /** The chip's focus state. */\n  @state() private hasFocus = false;\n\n  /** The chip's size. */\n  @property({ reflect: true }) size: 'small' | 'medium' | 'large' = 'medium';\n\n  /** The chip's theme variant. */\n  @property({ reflect: true }) variants:\n    | 'primary'\n    | 'primary-outline'\n    | 'info'\n    | 'info-outline'\n    | 'danger'\n    | 'danger-outline'\n    | 'tertiary'\n    | 'tertiary-outline' = 'info';\n\n  /** Makes the chip removable and shows a remove button. */\n  @property({ type: Boolean, reflect: true }) removable = false;\n\n  /** Disables the chip. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Draws the chip in a selected state. */\n  @property({ type: Boolean, reflect: true }) selected = false;\n\n  /** Set the prefixIcon name to render */\n  @property({ type: String, reflect: true, attribute: 'prefix-icon' }) prefixIcon = '';\n\n  /** Set the suffixIcon name to render */\n  @property({ type: String, reflect: true, attribute: 'suffix-icon' }) suffixIcon = '';\n\n  /** Methods */\n\n  /** Simulates a click on the chip. */\n  click() {\n    this.chip.click();\n  }\n\n  /** Sets focus on the chip. */\n  focus(options?: FocusOptions) {\n    this.chip.focus(options);\n  }\n\n  /** Removes focus from the chip. */\n  blur() {\n    this.chip.blur();\n  }\n\n  /** Removes the chip. */\n  delete() {\n    this.handleDeleteClick();\n  }\n\n  @watch('disabled')\n  handleDisabledChange() {\n    this.setAttribute('aria-disabled', this.disabled ? 'true' : 'false');\n  }\n\n  @watch('selected')\n  handleSelectedChange() {\n    this.setAttribute('aria-selected', this.selected ? 'true' : 'false');\n  }\n\n  /** Events */\n\n  private handleDeleteClick() {\n    this.emit('koerber-remove');\n  }\n\n  private handleClick() {\n    this.emit('koerber-click');\n  }\n\n  private handleFocus() {\n    this.hasFocus = true;\n    this.emit('koerber-focus');\n  }\n\n  private handleBlur() {\n    this.hasFocus = false;\n    this.emit('koerber-blur');\n  }\n\n  render() {\n    return html`\n      <div part=\"container\" class=\"chip--container\">\n        <span\n          part=\"base\"\n          class=${classMap({\n            chip: true,\n            'chip--primary': this.variants === 'primary',\n            'chip--info': this.variants === 'info',\n            'chip--danger': this.variants === 'danger',\n            'chip--tertiary': this.variants === 'tertiary',\n            'chip--primary-outline': this.variants === 'primary-outline',\n            'chip--info-outline': this.variants === 'info-outline',\n            'chip--danger-outline': this.variants === 'danger-outline',\n            'chip--tertiary-outline': this.variants === 'tertiary-outline',\n\n            // Sizes\n            'chip--small': this.size === 'small',\n            'chip--medium': this.size === 'medium',\n            'chip--large': this.size === 'large',\n\n            // Modifiers\n            'chip--removable': this.removable || this.suffixIcon.length > 0,\n\n            'chip--focused': this.hasFocus,\n            'chip--disabled': this.disabled,\n            'chip--selected': this.selected || this.prefixIcon.length > 0\n          })}\n          ?disabled=${this.disabled}\n          ?checked=\"${live(this.selected)}\"\n          tabindex=${this.disabled ? '-1' : '0'}\n          @click=${this.handleClick}\n          @focus=${this.handleFocus}\n          @blur=${this.handleBlur}\n        >\n          ${this.selected\n            ? html` <koerber-icon\n                part=\"selected-button\"\n                exportparts=\"base:remove-button__base\"\n                name=\"check-circle\"\n                size=\"medium\"\n                label=${'select'}\n                class=\"chip__selected\"\n                tabindex=\"-1\"\n              ></koerber-icon>`\n            : ''}\n          ${this.prefixIcon\n            ? html` <koerber-icon part=\"prefix-icon\" class=\"chip__prefix\" name=${this.prefixIcon}></koerber-icon>`\n            : ''}\n\n          <slot part=\"content\" class=\"chip__label\"></slot>\n\n          ${this.suffixIcon\n            ? html` <koerber-icon part=\"suffix-icon\" class=\"chip__suffix\" name=${this.suffixIcon}></koerber-icon>`\n            : ''}\n          ${this.removable\n            ? html` <koerber-button\n                variant=\"ghost\"\n                part=\"remove-button\"\n                exportparts=\"base:remove-button__base\"\n                size=\"medium\"\n                label=${this.localize.term('remove')}\n                class=\"chip__remove\"\n                @click=${this.handleDeleteClick}\n                @focus=${this.handleFocus}\n                tabindex=\"-1\"\n                ?disabled=${this.disabled}\n                ><koerber-icon name=\"close\">close</koerber-icon></koerber-button\n              >`\n            : ''}\n\n          <slot part=\"tooltip\"></slot>\n        </span>\n      </div>\n    `;\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
