{
  "version": 3,
  "sources": ["../../src/components/dropdown/dropdown.component.ts"],
  "sourcesContent": ["import { animateTo, stopAnimations } from '../../internal/animate';\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { getAnimation, setDefaultAnimation } from '../../utilities/animation-registry';\r\nimport { getTabbableBoundary } from '../../internal/tabbable';\r\nimport { html } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport { LocalizeController } from '../../utilities/localize';\r\nimport { property, query } from 'lit/decorators.js';\r\nimport { waitForEvent } from '../../internal/event';\r\nimport { watch } from '../../internal/watch';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport styles from './dropdown.styles';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\nimport type Button from '../button/button';\r\nimport type IconButton from '../icon-button/icon-button';\r\nimport type KoerberSelectEvent from '../../events/koerber-select';\r\nimport type Menu from '../menu/menu';\r\nimport type Popup from '../popup/popup.component';\r\n\r\n/**\r\n * @summary Dropdowns expose additional content that \"drops down\" in a panel.\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @dependency koerber-popup\r\n *\r\n * @slot - The dropdown's main content.\r\n * @slot trigger - The dropdown's trigger, usually a `<koerber-button>` element.\r\n *\r\n * @event koerber-show - Emitted when the dropdown opens.\r\n * @event koerber-after-show - Emitted after the dropdown opens and all animations are complete.\r\n * @event koerber-hide - Emitted when the dropdown closes.\r\n * @event koerber-after-hide - Emitted after the dropdown closes and all animations are complete.\r\n *\r\n * @csspart base - The component's base wrapper.\r\n * @csspart trigger - The container that wraps the trigger.\r\n * @csspart panel - The panel that gets shown when the dropdown is open.\r\n *\r\n * @animation dropdown.show - The animation to use when showing the dropdown.\r\n * @animation dropdown.hide - The animation to use when hiding the dropdown.\r\n */\r\nexport default class Dropdown extends UIKitElement {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n\r\n  @query('.dropdown') popup: Popup;\r\n  @query('.dropdown__trigger') trigger: HTMLSlotElement;\r\n  @query('.dropdown__panel') panel: HTMLSlotElement;\r\n\r\n  private readonly localize = new LocalizeController(this);\r\n\r\n  /**\r\n   * Indicates whether or not the dropdown is open. You can toggle this attribute to show and hide the dropdown, or you\r\n   * can use the `show()` and `hide()` methods and this attribute will reflect the dropdown's open state.\r\n   */\r\n  @property({ type: Boolean, reflect: true }) open = false;\r\n\r\n  /**\r\n   * The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\r\n   * inside of the viewport.\r\n   */\r\n  @property({ reflect: true }) placement:\r\n    | 'top'\r\n    | 'top-start'\r\n    | 'top-end'\r\n    | 'bottom'\r\n    | 'bottom-start'\r\n    | 'bottom-end'\r\n    | 'right'\r\n    | 'right-start'\r\n    | 'right-end'\r\n    | 'left'\r\n    | 'left-start'\r\n    | 'left-end' = 'bottom-start';\r\n\r\n  /** Disables the dropdown so the panel will not open. */\r\n  @property({ type: Boolean, reflect: true }) disabled = false;\r\n\r\n  /**\r\n   * By default, the dropdown is closed when an item is selected. This attribute will keep it open instead. Useful for\r\n   * dropdowns that allow for multiple interactions.\r\n   */\r\n  @property({ attribute: 'stay-open-on-select', type: Boolean, reflect: true }) stayOpenOnSelect = false;\r\n\r\n  /**\r\n   * The dropdown will close when the user interacts outside of this element (e.g. clicking). Useful for composing other\r\n   * components that use a dropdown internally.\r\n   */\r\n  @property({ attribute: false }) containingElement?: HTMLElement;\r\n\r\n  /** The distance in pixels from which to offset the panel away from its trigger. */\r\n  @property({ type: Number }) distance = 0;\r\n\r\n  /** The distance in pixels from which to offset the panel along its trigger. */\r\n  @property({ type: Number }) skidding = 0;\r\n\r\n  /**\r\n   * Enable this option to prevent the panel from being clipped when the component is placed inside a container with\r\n   * `overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.\r\n   */\r\n  @property({ type: Boolean }) hoist = false;\r\n\r\n  /**\r\n   * Syncs the popup width or height to that of the trigger element.\r\n   */\r\n  @property({ reflect: true }) sync: 'width' | 'height' | 'both' | undefined = undefined;\r\n\r\n  private buttonWidth: string;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    if (!this.containingElement) {\r\n      this.containingElement = this;\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.panel.hidden = !this.open;\r\n\r\n    // If the dropdown is visible on init, update its position\r\n    if (this.open) {\r\n      this.addOpenListeners();\r\n      this.popup.active = true;\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.removeOpenListeners();\r\n    this.hide();\r\n  }\r\n\r\n  focusOnTrigger() {\r\n    const trigger = this.trigger.assignedElements({ flatten: true })[0] as HTMLElement | undefined;\r\n    if (typeof trigger?.focus === 'function') {\r\n      trigger.focus();\r\n    }\r\n  }\r\n\r\n  getMenu() {\r\n    return this.panel.assignedElements({ flatten: true }).find(el => el.tagName.toLowerCase() === 'koerber-menu') as\r\n      | Menu\r\n      | undefined;\r\n  }\r\n\r\n  private handleKeyDown = (event: KeyboardEvent) => {\r\n    // Close when escape is pressed inside an open dropdown. We need to listen on the panel itself and stop propagation\r\n    // in case any ancestors are also listening for this key.\r\n    if (this.open && event.key === 'Escape') {\r\n      event.stopPropagation();\r\n      this.hide();\r\n      this.focusOnTrigger();\r\n    }\r\n  };\r\n\r\n  private handleDocumentKeyDown = (event: KeyboardEvent) => {\r\n    // Close when escape or tab is pressed\r\n    if (event.key === 'Escape' && this.open) {\r\n      event.stopPropagation();\r\n      this.focusOnTrigger();\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    // Handle tabbing\r\n    if (event.key === 'Tab') {\r\n      // Tabbing within an open menu should close the dropdown and refocus the trigger\r\n      if (this.open && document.activeElement?.tagName.toLowerCase() === 'koerber-menu-item') {\r\n        event.preventDefault();\r\n        this.hide();\r\n        this.focusOnTrigger();\r\n        return;\r\n      }\r\n\r\n      // Tabbing outside of the containing element closes the panel\r\n      //\r\n      // If the dropdown is used within a shadow DOM, we need to obtain the activeElement within that shadowRoot,\r\n      // otherwise `document.activeElement` will only return the name of the parent shadow DOM element.\r\n      setTimeout(() => {\r\n        const activeElement =\r\n          this.containingElement?.getRootNode() instanceof ShadowRoot\r\n            ? document.activeElement?.shadowRoot?.activeElement\r\n            : document.activeElement;\r\n\r\n        if (\r\n          !this.containingElement ||\r\n          activeElement?.closest(this.containingElement.tagName.toLowerCase()) !== this.containingElement\r\n        ) {\r\n          this.hide();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  private handleDocumentMouseDown = (event: MouseEvent) => {\r\n    // Close when clicking outside of the containing element\r\n    const path = event.composedPath();\r\n    if (this.containingElement && !path.includes(this.containingElement)) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  private handlePanelSelect = (event: KoerberSelectEvent) => {\r\n    const target = event.target as HTMLElement;\r\n\r\n    // Hide the dropdown when a menu item is selected\r\n    if (!this.stayOpenOnSelect && target.tagName.toLowerCase() === 'koerber-menu') {\r\n      this.hide();\r\n      this.focusOnTrigger();\r\n    }\r\n  };\r\n\r\n  handleTriggerClick() {\r\n    if (this.open) {\r\n      this.hide();\r\n    } else {\r\n      this.buttonWidth = `${this.trigger.clientWidth}px`;\r\n      this.show();\r\n      this.focusOnTrigger();\r\n    }\r\n  }\r\n\r\n  async handleTriggerKeyDown(event: KeyboardEvent) {\r\n    // When spacebar/enter is pressed, show the panel but don't focus on the menu. This let's the user press the same\r\n    // key again to hide the menu in case they don't want to make a selection.\r\n    if ([' ', 'Enter'].includes(event.key)) {\r\n      event.preventDefault();\r\n      this.handleTriggerClick();\r\n      return;\r\n    }\r\n\r\n    const menu = this.getMenu();\r\n\r\n    if (menu) {\r\n      const menuItems = menu.getAllItems();\r\n      const firstMenuItem = menuItems[0];\r\n      const lastMenuItem = menuItems[menuItems.length - 1];\r\n\r\n      // When up/down is pressed, we make the assumption that the user is familiar with the menu and plans to make a\r\n      // selection. Rather than toggle the panel, we focus on the menu (if one exists) and activate the first item for\r\n      // faster navigation.\r\n      if (['ArrowDown', 'ArrowUp', 'Home', 'End'].includes(event.key)) {\r\n        event.preventDefault();\r\n\r\n        // Show the menu if it's not already open\r\n        if (!this.open) {\r\n          this.show();\r\n\r\n          // Wait for the dropdown to open before focusing, but not the animation\r\n          await this.updateComplete;\r\n        }\r\n\r\n        if (menuItems.length > 0) {\r\n          // Focus on the first/last menu item after showing\r\n          this.updateComplete.then(() => {\r\n            if (event.key === 'ArrowDown' || event.key === 'Home') {\r\n              menu.setCurrentItem(firstMenuItem);\r\n              firstMenuItem.focus();\r\n            }\r\n\r\n            if (event.key === 'ArrowUp' || event.key === 'End') {\r\n              menu.setCurrentItem(lastMenuItem);\r\n              lastMenuItem.focus();\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleTriggerKeyUp(event: KeyboardEvent) {\r\n    // Prevent space from triggering a click event in Firefox\r\n    if (event.key === ' ') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  handleTriggerSlotChange() {\r\n    this.updateAccessibleTrigger();\r\n  }\r\n\r\n  //\r\n  // Slotted triggers can be arbitrary content, but we need to link them to the dropdown panel with `aria-haspopup` and\r\n  // `aria-expanded`. These must be applied to the \"accessible trigger\" (the tabbable portion of the trigger element\r\n  // that gets slotted in) so screen readers will understand them. The accessible trigger could be the slotted element,\r\n  // a child of the slotted element, or an element in the slotted element's shadow root.\r\n  //\r\n  // For example, the accessible trigger of an <koerber-button> is a <button> located inside its shadow root.\r\n  //\r\n  // To determine this, we assume the first tabbable element in the trigger slot is the \"accessible trigger.\"\r\n  //\r\n  updateAccessibleTrigger() {\r\n    const assignedElements = this.trigger.assignedElements({ flatten: true }) as HTMLElement[];\r\n    const accessibleTrigger = assignedElements.find(el => getTabbableBoundary(el).start);\r\n    let target: HTMLElement;\r\n\r\n    if (accessibleTrigger) {\r\n      switch (accessibleTrigger.tagName.toLowerCase()) {\r\n        // Shoelace buttons have to update the internal button so it's announced correctly by screen readers\r\n        case 'koerber-button':\r\n        case 'koerber-icon-button':\r\n          target = (accessibleTrigger as Button | IconButton).button;\r\n          break;\r\n\r\n        default:\r\n          target = accessibleTrigger;\r\n      }\r\n\r\n      target.setAttribute('aria-haspopup', 'true');\r\n      target.setAttribute('aria-expanded', this.open ? 'true' : 'false');\r\n    }\r\n  }\r\n\r\n  /** Shows the dropdown panel. */\r\n  async show() {\r\n    if (this.open) {\r\n      return undefined;\r\n    }\r\n\r\n    this.open = true;\r\n    return waitForEvent(this, 'koerber-after-show');\r\n  }\r\n\r\n  /** Hides the dropdown panel */\r\n  async hide() {\r\n    if (!this.open) {\r\n      return undefined;\r\n    }\r\n\r\n    this.open = false;\r\n    return waitForEvent(this, 'koerber-after-hide');\r\n  }\r\n\r\n  /**\r\n   * Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu is activated.\r\n   */\r\n  reposition() {\r\n    this.popup.reposition();\r\n  }\r\n\r\n  addOpenListeners() {\r\n    this.panel.addEventListener('koerber-select', this.handlePanelSelect);\r\n    document.addEventListener('keydown', this.handleDocumentKeyDown);\r\n    document.addEventListener('mousedown', this.handleDocumentMouseDown);\r\n  }\r\n\r\n  removeOpenListeners() {\r\n    if (this.panel) {\r\n      this.panel.removeEventListener('koerber-select', this.handlePanelSelect);\r\n      this.panel.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    document.removeEventListener('keydown', this.handleDocumentKeyDown);\r\n    document.removeEventListener('mousedown', this.handleDocumentMouseDown);\r\n  }\r\n\r\n  @watch('open', { waitUntilFirstUpdate: true })\r\n  async handleOpenChange() {\r\n    if (this.disabled) {\r\n      this.open = false;\r\n      return;\r\n    }\r\n\r\n    this.updateAccessibleTrigger();\r\n\r\n    if (this.open) {\r\n      // Show\r\n      this.emit('koerber-show');\r\n      this.addOpenListeners();\r\n\r\n      await stopAnimations(this);\r\n      this.panel.hidden = false;\r\n      this.popup.active = true;\r\n      const { keyframes, options } = getAnimation(this, 'dropdown.show', { dir: this.localize.dir() });\r\n      await animateTo(this.popup.popup, keyframes, options);\r\n\r\n      this.emit('koerber-after-show');\r\n    } else {\r\n      // Hide\r\n      this.emit('koerber-hide');\r\n      this.removeOpenListeners();\r\n\r\n      await stopAnimations(this);\r\n      const { keyframes, options } = getAnimation(this, 'dropdown.hide', { dir: this.localize.dir() });\r\n      await animateTo(this.popup.popup, keyframes, options);\r\n      this.panel.hidden = true;\r\n      this.popup.active = false;\r\n\r\n      this.emit('koerber-after-hide');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <koerber-popup\r\n        part=\"base\"\r\n        id=\"dropdown\"\r\n        placement=${this.placement}\r\n        distance=${this.distance}\r\n        skidding=${this.skidding}\r\n        strategy=${this.hoist ? 'fixed' : 'absolute'}\r\n        flip\r\n        shift\r\n        auto-size=\"vertical\"\r\n        auto-size-padding=\"10\"\r\n        sync=${ifDefined(this.sync ? this.sync : undefined)}\r\n        class=${classMap({\r\n          dropdown: true,\r\n          'dropdown--open': this.open\r\n        })}\r\n      >\r\n        <slot\r\n          name=\"trigger\"\r\n          slot=\"anchor\"\r\n          part=\"trigger\"\r\n          class=\"dropdown__trigger\"\r\n          @click=${this.handleTriggerClick}\r\n          @keydown=${this.handleTriggerKeyDown}\r\n          @keyup=${this.handleTriggerKeyUp}\r\n          @slotchange=${this.handleTriggerSlotChange}\r\n        ></slot>\r\n\r\n        <div aria-hidden=${this.open ? 'false' : 'true'} aria-labelledby=\"dropdown\">\r\n          <slot part=\"panel\" class=\"dropdown__panel\" style=\"--width: ${this.buttonWidth}\"></slot>\r\n        </div>\r\n      </koerber-popup>\r\n    `;\r\n  }\r\n}\r\n\r\nsetDefaultAnimation('dropdown.show', {\r\n  keyframes: [\r\n    { opacity: 0, scale: 0.9 },\r\n    { opacity: 1, scale: 1 }\r\n  ],\r\n  options: { duration: 100, easing: 'ease' }\r\n});\r\n\r\nsetDefaultAnimation('dropdown.hide', {\r\n  keyframes: [\r\n    { opacity: 1, scale: 1 },\r\n    { opacity: 0, scale: 0.9 }\r\n  ],\r\n  options: { duration: 100, easing: 'ease' }\r\n});\r\n"],
  "mappings": "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",
  "names": ["_a"]
}
