{
  "version": 3,
  "sources": ["../../src/components/toggle/toggle.component.ts"],
  "sourcesContent": ["/** Exception due eslint doesn't support WAI-ARIA 1.3 that supports aria-description attr */\r\n/* eslint-disable lit-a11y/aria-attrs */\r\nimport { classMap } from 'lit/directives/class-map.js';\r\nimport { defaultValue } from '../../internal/default-value';\r\nimport { html } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport { live } from 'lit/directives/live.js';\r\nimport { property, query, state } from 'lit/decorators.js';\r\nimport { watch } from '../../internal/watch';\r\nimport componentStyles from '../../styles/component.styles';\r\nimport styles from './toggle.styles';\r\nimport UIKitElement from '../../internal/uikit-element';\r\nimport type { CSSResultGroup } from 'lit';\r\nimport type { UIKitFormControl } from '../../internal/uikit-element';\r\n\r\n/**\r\n * @summary toggles allow the user to toggle an option on or off.\r\n * @documentation https://kind-desert-0fb80550f.5.azurestaticapps.net\r\n * @status stable\r\n * @since 2.0\r\n *\r\n * @slot - The toggle's label.\r\n *\r\n * @event koerber-blur - Emitted when the control loses focus.\r\n * @event koerber-change - Emitted when the control's checked state changes.\r\n * @event koerber-input - Emitted when the control receives input.\r\n * @event koerber-focus - Emitted when the control gains focus.\r\n *\r\n * @csspart base - The component's base wrapper.\r\n * @csspart control - The control that houses the toggle's thumb.\r\n * @csspart thumb - The toggle's thumb.\r\n * @csspart label - The toggle's label.\r\n *\r\n * @cssproperty --width - The width of the toggle.\r\n * @cssproperty --height - The height of the toggle.\r\n * @cssproperty --thumb-size - The size of the thumb.\r\n */\r\nexport default class Toggle extends UIKitElement implements UIKitFormControl {\r\n  static styles: CSSResultGroup = [componentStyles, styles];\r\n\r\n  @query('input[type=\"checkbox\"]') input: HTMLInputElement;\r\n\r\n  @state() private hasFocus = false;\r\n  @property() title = ''; // make reactive to pass through\r\n\r\n  /** The name of the toggle, submitted as a name/value pair with form data. */\r\n  @property() name = '';\r\n\r\n  /** The current value of the toggle, submitted as a name/value pair with form data. */\r\n  @property() value: string;\r\n\r\n  /** Label of the toggle. */\r\n  @property() label: string;\r\n\r\n  /** The toggle's size. */\r\n  @property({ reflect: true }) size: 'standard' | 'comfortable' = 'standard';\r\n\r\n  /** Disables the toggle. */\r\n  @property({ type: Boolean, reflect: true }) disabled = false;\r\n\r\n  /** Draws the toggle in a checked state. */\r\n  @property({ type: Boolean, reflect: true }) checked = false;\r\n\r\n  /** The default value of the form control. Primarily used for resetting the form control. */\r\n  @defaultValue('checked') defaultChecked = false;\r\n\r\n  /** Makes the toggle a required field. */\r\n  @property({ type: Boolean, reflect: true }) required = false;\r\n\r\n  /** Indicates the form control is in an error state. */\r\n  @property({ type: Boolean, reflect: true }) error = false;\r\n\r\n  /** The component accessible label name */\r\n  @property({ attribute: 'accessible-name', reflect: true }) accessibleName: string;\r\n\r\n  /** The component accessible description */\r\n  @property({ attribute: 'accessible-description', reflect: true }) accessibleDescription: string;\r\n\r\n  private handleBlur() {\r\n    this.hasFocus = false;\r\n    this.emit('koerber-blur');\r\n  }\r\n\r\n  private handleInput() {\r\n    this.emit('koerber-input');\r\n  }\r\n\r\n  private handleClick() {\r\n    this.checked = !this.checked;\r\n    this.emit('koerber-change');\r\n  }\r\n\r\n  private handleFocus() {\r\n    this.hasFocus = true;\r\n    this.emit('koerber-focus');\r\n  }\r\n\r\n  private handleKeyDown(event: KeyboardEvent) {\r\n    if (event.key === 'ArrowLeft') {\r\n      event.preventDefault();\r\n      this.checked = false;\r\n      this.emit('koerber-change');\r\n      this.emit('koerber-input');\r\n    }\r\n\r\n    if (event.key === 'ArrowRight') {\r\n      event.preventDefault();\r\n      this.checked = true;\r\n      this.emit('koerber-change');\r\n      this.emit('koerber-input');\r\n    }\r\n  }\r\n\r\n  @watch('checked', { waitUntilFirstUpdate: true })\r\n  handleCheckedChange() {\r\n    this.input.checked = this.checked; // force a sync update\r\n  }\r\n\r\n  /** Simulates a click on the toggle. */\r\n  click() {\r\n    this.input.click();\r\n  }\r\n\r\n  /** Sets focus on the toggle. */\r\n  focus(options?: FocusOptions) {\r\n    this.input.focus(options);\r\n  }\r\n\r\n  /** Removes focus from the toggle. */\r\n  blur() {\r\n    this.input.blur();\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <label\r\n        part=\"base\"\r\n        class=${classMap({\r\n          toggle: true,\r\n          'toggle--checked': this.checked,\r\n          'toggle--disabled': this.disabled,\r\n          'toggle--focused': this.hasFocus,\r\n          'toggle--standard': this.size === 'standard',\r\n          'toggle--comfortable': this.size === 'comfortable',\r\n          'toggle--error': this.error\r\n        })}\r\n      >\r\n        <input\r\n          class=\"toggle__input\"\r\n          type=\"checkbox\"\r\n          title=${this.title /* An empty title prevents browser validation tooltips from appearing on hover */}\r\n          name=${this.name}\r\n          value=${ifDefined(this.value)}\r\n          .checked=${live(this.checked)}\r\n          .disabled=${this.disabled}\r\n          .required=${this.required}\r\n          role=\"switch\"\r\n          aria-checked=${this.checked ? 'true' : 'false'}\r\n          aria-label=${ifDefined(this.accessibleName)}\r\n          aria-description=${ifDefined(this.accessibleDescription)}\r\n          @click=${this.handleClick}\r\n          @input=${this.handleInput}\r\n          @blur=${this.handleBlur}\r\n          @focus=${this.handleFocus}\r\n          @keydown=${this.handleKeyDown}\r\n        />\r\n\r\n        <span part=\"control\" class=\"toggle__control\">\r\n          <span part=\"thumb\" class=\"toggle__thumb\"></span>\r\n        </span>\r\n\r\n        <slot part=\"label\" class=\"toggle__label\">\r\n          <koerber-form-field-label label=\"${this.label}\"></koerber-form-field-label>\r\n        </slot>\r\n      </label>\r\n    `;\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
