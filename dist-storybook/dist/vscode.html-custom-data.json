{
  "$schema": "https://raw.githubusercontent.com/microsoft/vscode-html-languageservice/main/docs/customData.schema.json",
  "version": 1.1,
  "tags": [
    {
      "name": "koerber-accordion",
      "description": "Accordion show a brief summary and expand to show additional content.\n---\n\n\n### **Events:**\n - **koerber-show** - Emitted when the accordion opens.\n- **koerber-after-show** - Emitted after the accordion opens and all animations are complete.\n- **koerber-hide** - Emitted when the accordion closes.\n- **koerber-after-hide** - Emitted after the accordion closes and all animations are complete.\n\n### **Methods:**\n - **show()** - Shows the accordion.\n- **hide()** - Hides the accordion\n\n### **Slots:**\n - _default_ - The accordion' main content.\n- **expand-icon** - Optional expand icon to use instead of the default. Works best with `<koerber-icon>`.\n- **collapse-icon** - Optional collapse icon to use instead of the default. Works best with `<koerber-icon>`.\n- **prefix** - Optional left side of the summary - Summary section.\n- **suffix** - Optional right side of the summary - Summary section.\n- **prefix-content** - Optional left side of the content - Body section.\n- **suffix-content** - Optional right side of the content - Body section.\n- **summary** - The accordion' summary. Alternatively, you can use the `summary` attribute.\n- **subtitle** - The accordion' subtitle. Alternatively, you can use the `subtitle` attribute.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **header** - The header that wraps both the summary and the expand/collapse icon.\n- **summary** - The container that wraps the summary.\n- **summary-icon** - The container that wraps the expand/collapse icons.\n- **content** - The accordion content.",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether or not the accordion is open. You can toggle this attribute to show and hide the accordion, or you\ncan use the `show()` and `hide()` methods and this attribute will reflect the accordion' open state.",
          "values": []
        },
        {
          "name": "summary",
          "description": "The summary to show in the header. If you need to display HTML, use the `summary` slot instead.",
          "values": []
        },
        {
          "name": "subtitle",
          "description": "The text to complement the title below of them.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the accordion so it can't be toggled.",
          "values": []
        },
        {
          "name": "size",
          "description": "The size of the accordion header",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "direction",
          "description": "The direction of which the chevron should be displayed in the summary section",
          "values": [{ "name": "left" }, { "name": "right" }]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-accordion--docs"
        }
      ]
    },
    {
      "name": "koerber-alert",
      "description": "\n---\n\n\n### **Methods:**\n - **toast()** - Displays the alert as a toast alert. This will move the alert out of its position in the DOM and, when dismissed, it will be removed from the DOM completely. By storing a reference to the alert, you can reuse it by calling this method again. The returned promise will resolve after the alert is hidden.\n- **show()** - Shows the alert.\n- **hide()** - Hides the alert",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether or not the alert is open. You can toggle this attribute to show and hide the alert, or you can\nuse the `show()` and `hide()` methods and this attribute will reflect the alert's open state.",
          "values": []
        },
        {
          "name": "closable",
          "description": "Enables a close button that allows the user to dismiss the alert.",
          "values": []
        },
        {
          "name": "variant",
          "description": "The alert's theme variant.",
          "values": [
            { "name": "" },
            { "name": "info" },
            { "name": "success" },
            { "name": "warning" },
            { "name": "danger" },
            { "name": "alt-info" },
            { "name": "alt-success" },
            { "name": "alt-warning" },
            { "name": "alt-danger" }
          ]
        },
        {
          "name": "actions-placement",
          "description": "Set wether actions should be rendered bottom or inline with main content",
          "values": [{ "name": "inline" }, { "name": "footer" }]
        },
        {
          "name": "duration",
          "description": "The length of time, in milliseconds (ms), the alert will show before closing itself. If the user interacts with\nthe alert before it closes (e.g. moves the mouse over it), the timer will restart. Defaults to `5000` ms, meaning\nthe alert will not close after 5 seconds.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-alert--docs"
        }
      ]
    },
    {
      "name": "koerber-animation",
      "description": "Animate elements declaratively with nearly 100 baked-in presets, or roll your own with custom keyframes. Powered by the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API).\n---\n\n\n### **Events:**\n - **koerber-cancel** - Emitted when the animation is canceled.\n- **koerber-finish** - Emitted when the animation finishes.\n- **koerber-start** - Emitted when the animation starts or restarts.\n\n### **Methods:**\n - **cancel()** - Clears all keyframe effects caused by this animation and aborts its playback.\n- **finish()** - Sets the playback time to the end of the animation corresponding to the current playback direction.\n\n### **Slots:**\n - _default_ - The element to animate. Avoid slotting in more than one element, as subsequent ones will be ignored. To animate multiple elements, either wrap them in a single container or use multiple `<koerber-animation>` elements.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the built-in animation to use. For custom animations, use the `keyframes` prop.",
          "values": []
        },
        {
          "name": "play",
          "description": "Plays the animation. When omitted, the animation will be paused. This attribute will be automatically removed when\nthe animation finishes or gets canceled.",
          "values": []
        },
        {
          "name": "delay",
          "description": "The number of milliseconds to delay the start of the animation.",
          "values": []
        },
        {
          "name": "direction",
          "description": "Determines the direction of playback as well as the behavior when reaching the end of an iteration.\n[Learn more](https://developer.mozilla.org/en-US/docs/Web/CSS/animation-direction)",
          "values": [{ "name": "PlaybackDirection" }]
        },
        {
          "name": "duration",
          "description": "The number of milliseconds each iteration of the animation takes to complete.",
          "values": []
        },
        {
          "name": "easing",
          "description": "The easing function to use for the animation. This can be a Shoelace easing function or a custom easing function\nsuch as `cubic-bezier(0, 1, .76, 1.14)`.",
          "values": []
        },
        {
          "name": "end-delay",
          "description": "The number of milliseconds to delay after the active period of an animation sequence.",
          "values": []
        },
        {
          "name": "fill",
          "description": "Sets how the animation applies styles to its target before and after its execution.",
          "values": [{ "name": "FillMode" }]
        },
        {
          "name": "iterations",
          "description": "The number of iterations to run before the animation completes. Defaults to `Infinity`, which loops.",
          "values": []
        },
        {
          "name": "iteration-start",
          "description": "The offset at which to start the animation, usually between 0 (start) and 1 (end).",
          "values": []
        },
        {
          "name": "playback-rate",
          "description": "Sets the animation's playback rate. The default is `1`, which plays the animation at a normal speed. Setting this\nto `2`, for example, will double the animation's speed. A negative value can be used to reverse the animation. This\nvalue can be changed without causing the animation to restart.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-animation--docs"
        }
      ]
    },
    {
      "name": "koerber-avatar",
      "description": "Avatars are used to represent a person or object.\n---\n\n\n### **Methods:**\n - **click()** - Simulates click on the component\n- **press(time: _number_)** - Simulates the component press certain amount of time in mil-seconds\n\n### **Slots:**\n - **icon** - The default icon to use when no image or initials are present. Works best with `<koerber-icon>`.\n\n### **CSS Properties:**\n - **--size** - The size of the avatar. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **icon** - The container that wraps the avatar's icon.\n- **initials** - The container that wraps the avatar's initials.\n- **image** - The avatar image. Only shown when the `image` attribute is set.",
      "attributes": [
        {
          "name": "image",
          "description": "The image source to use for the avatar.",
          "values": []
        },
        { "name": "icon", "description": "Icon name attribute", "values": [] },
        {
          "name": "label",
          "description": "A label to use to describe the avatar to assistive devices.",
          "values": []
        },
        {
          "name": "initials",
          "description": "Initials to use as a fallback when no image is available (1-2 characters max recommended).",
          "values": []
        },
        {
          "name": "loading",
          "description": "Indicates how the browser should load the image.",
          "values": [{ "name": "eager" }, { "name": "lazy" }]
        },
        {
          "name": "size",
          "description": "Indicates how the browser should load the image.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-avatar--docs"
        }
      ]
    },
    {
      "name": "koerber-badge",
      "description": "Badges are used to draw attention and display statuses or counts.\n---\n\n\n### **Slots:**\n - _default_ - The badge's content.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **label** - The chip's label.",
      "attributes": [
        {
          "name": "size",
          "description": "The badge's theme variant.",
          "values": [
            { "name": "extra-small" },
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-badge--docs"
        }
      ]
    },
    {
      "name": "koerber-breadcrumb",
      "description": "Breadcrumbs provide a group of links so users can easily navigate a website's hierarchy.\n---\n\n\n### **Slots:**\n - _default_ - One or more breadcrumb items to display.\n- **separator** - The separator to use between breadcrumb items. Works best with `<koerber-icon>`.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [
        {
          "name": "label",
          "description": "The label to use for the breadcrumb control. This will not be shown on the screen, but it will be announced by\nscreen readers and other assistive devices to provide more context for users.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-breadcrumb--docs"
        }
      ]
    },
    {
      "name": "koerber-breadcrumb-item",
      "description": "Breadcrumb Items are used inside [breadcrumbs](/components/breadcrumb) to represent different links.\n---\n\n\n### **Slots:**\n - _default_ - The breadcrumb item's label.\n- **prefix** - An optional prefix, usually an icon or icon button.\n- **suffix** - An optional suffix, usually an icon or icon button.\n- **separator** - The separator to use for the breadcrumb item. This will only change the separator for this item. If you want to change it for all items in the group, set the separator on `<koerber-breadcrumb>` instead.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **label** - The breadcrumb item's label.\n- **prefix** - The container that wraps the prefix.\n- **suffix** - The container that wraps the suffix.\n- **separator** - The container that wraps the separator.",
      "attributes": [
        {
          "name": "max-width",
          "description": "Indicates the max width of the item text",
          "values": []
        },
        {
          "name": "href",
          "description": "Optional URL to direct the user to when the breadcrumb item is activated. When set, a link will be rendered\r\ninternally. When unset, a button will be rendered instead.",
          "values": []
        },
        {
          "name": "target",
          "description": "Tells the browser where to open the link. Only used when `href` is set.",
          "values": [
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_self" },
            { "name": "_top" }
          ]
        },
        {
          "name": "rel",
          "description": "The `rel` attribute to use on the link. Only used when `href` is set.",
          "values": []
        },
        {
          "name": "active",
          "description": "Check if the item is the current Active",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-breadcrumb-item--docs"
        }
      ]
    },
    {
      "name": "koerber-button",
      "description": "Buttons represent actions that are available to the user.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the button loses focus.\n- **koerber-focus** - Emitted when the button gains focus.\n\n### **Methods:**\n - **click()** - Simulates a click on the button.\n- **focus(options: _FocusOptions_)** - Sets focus on the button.\n- **blur()** - Removes focus from the button.\n\n### **Slots:**\n - _default_ - The button's label.\n- **prefix** - A presentational prefix icon or similar element.\n- **suffix** - A presentational suffix icon or similar element.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **prefix** - The container that wraps the prefix.\n- **label** - The button's label.\n- **suffix** - The container that wraps the suffix.\n- **caret** - The button's caret icon, an `<koerber-icon>` element.",
      "attributes": [
        { "name": "title", "values": [] },
        {
          "name": "variant",
          "description": "The button's theme variant.",
          "values": [
            { "name": "" },
            { "name": "primary" },
            { "name": "secondary" },
            { "name": "tertiary" },
            { "name": "ghost" },
            { "name": "danger" },
            { "name": "secondary-danger" },
            { "name": "ghost-danger" }
          ]
        },
        {
          "name": "size",
          "description": "The button's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "caret",
          "description": "Draws the button with a caret. Used to indicate that the button triggers a dropdown menu or similar behavior.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the button.",
          "values": []
        },
        {
          "name": "loading",
          "description": "Draws the button in a loading state.",
          "values": []
        },
        {
          "name": "name",
          "description": "The name of the button, submitted as a name/value pair with form data, but only when this button is the submitter.\r\nThis attribute is ignored when `href` is present.",
          "values": []
        },
        {
          "name": "value",
          "description": "The value of the button, submitted as a pair with the button's name as part of the form data, but only when this\r\nbutton is the submitter. This attribute is ignored when `href` is present.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-button--docs"
        }
      ]
    },
    {
      "name": "koerber-button-group",
      "description": "Button groups can be used to group related buttons into sections.\n---\n\n\n### **Slots:**\n - _default_ - One or more `<koerber-button>` elements to display in the button group.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [
        {
          "name": "label",
          "description": "A label to use for the button group. This won't be displayed on the screen, but it will be announced by assistive\ndevices when interacting with the control and is strongly recommended.",
          "values": []
        },
        { "name": "split", "values": [] }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-button-group--docs"
        }
      ]
    },
    {
      "name": "koerber-card",
      "description": "Cards can be used to group related subjects in a container.\n---\n\n\n### **Slots:**\n - _default_ - The card's main content.\n- **header** - An optional header for the card.\n- **footer** - An optional footer for the card.\n- **image** - An optional image to render at the start of the card.\n\n### **CSS Properties:**\n - **--border-color** - The card's border color, including borders that occur inside the card. _(default: undefined)_\n- **--border-radius** - The border radius for the card's edges. _(default: undefined)_\n- **--border-width** - The width of the card's borders. _(default: undefined)_\n- **--padding** - The padding to use for the card's sections. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **image** - The container that wraps the card's image.\n- **header** - The container that wraps the card's header.\n- **body** - The container that wraps the card's main content.\n- **footer** - The container that wraps the card's footer.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-card--docs"
        }
      ]
    },
    {
      "name": "koerber-checkbox",
      "description": "Checkboxes allow the user to toggle an option on or off.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the checkbox loses focus.\n- **koerber-change** - Emitted when the checked state changes.\n- **koerber-focus** - Emitted when the checkbox gains focus.\n- **koerber-input** - Emitted when the checkbox receives input.\n\n### **Methods:**\n - **click()** - Simulates a click on the checkbox.\n- **focus(options: _FocusOptions_)** - Sets focus on the checkbox.\n- **blur()** - Removes focus from the checkbox.\n\n### **Slots:**\n - _default_ - The checkbox's label.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **control** - The square container that wraps the checkbox's checked state.\n- **control--checked** - Matches the control part when the checkbox is checked.\n- **control--indeterminate** - Matches the control part when the checkbox is indeterminate.\n- **checked-icon** - The checked icon, an `<koerber-icon>` element.\n- **indeterminate-icon** - The indeterminate icon, an `<koerber-icon>` element.\n- **label** - The container that wraps the checkbox's label.",
      "attributes": [
        { "name": "title", "values": [] },
        {
          "name": "name",
          "description": "The name of the checkbox, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the checkbox, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "label",
          "description": "Label of the checkbox.",
          "values": []
        },
        {
          "name": "size",
          "description": "The checkbox's size.",
          "values": [{ "name": "standard" }, { "name": "comfortable" }]
        },
        {
          "name": "disabled",
          "description": "Disables the checkbox.",
          "values": []
        },
        {
          "name": "checked",
          "description": "Draws the checkbox in a checked state.",
          "values": []
        },
        {
          "name": "indeterminate",
          "description": "Draws the checkbox in an indeterminate state. This is usually applied to checkboxes that represents a \"select\r\nall/none\" behavior when associated checkboxes have a mix of checked and unchecked states.",
          "values": []
        },
        {
          "name": "required",
          "description": "Makes the checkbox a required field.",
          "values": []
        },
        {
          "name": "error",
          "description": "Used to indicate that the input has some error based on some rule.",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-checkbox--docs"
        }
      ]
    },
    {
      "name": "koerber-chip",
      "description": "Chips are used as labels to organize things or to indicate a selection.\n---\n\n\n### **Events:**\n - **koerber-click** - Emitted when the chip is clicked.\n- **koerber-remove** - Emitted when the remove button is activated.\n- **koerber-focus** - Emitted when the chip gains focus.\n- **koerber-blur** - Emitted when the chip loses focus.\n\n### **Methods:**\n - **click()** - Simulates a click on the chip.\n- **focus(options: _FocusOptions_)** - Sets focus on the chip.\n- **blur()** - Removes focus from the chip.\n- **delete()** - Removes the chip.\n\n### **Slots:**\n - _default_ - The chip's content.\n- **next-icon** - Optional next icon to use instead of the default. Works best with `<koerber-icon>`.\n- **previous-icon** - Optional previous icon to use instead of the default. Works best with `<koerber-icon>`.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **content** - The chip's content.\n- **remove-button** - The chip's remove button, an `<sl-icon-button>`.\n- **remove-button__base** - The remove button's exported `base` part.",
      "attributes": [
        {
          "name": "size",
          "description": "The chip's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "variants",
          "description": "The chip's theme variant.",
          "values": [
            { "name": "" },
            { "name": "primary" },
            { "name": "primary-outline" },
            { "name": "info" },
            { "name": "info-outline" },
            { "name": "danger" },
            { "name": "danger-outline" },
            { "name": "tertiary" },
            { "name": "tertiary-outline" }
          ]
        },
        {
          "name": "removable",
          "description": "Makes the chip removable and shows a remove button.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the chip.",
          "values": []
        },
        {
          "name": "selected",
          "description": "Draws the chip in a selected state.",
          "values": []
        },
        {
          "name": "prefix-icon",
          "description": "Set the prefixIcon name to render",
          "values": []
        },
        {
          "name": "suffix-icon",
          "description": "Set the suffixIcon name to render",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-chip--docs"
        }
      ]
    },
    {
      "name": "koerber-divider",
      "description": "Dividers are used to visually separate or group elements.\n---\n\n\n### **CSS Properties:**\n - **--color** - The color of the divider. _(default: undefined)_\n- **--width** - The width of the divider. _(default: undefined)_\n- **--spacing** - The spacing of the divider. _(default: undefined)_",
      "attributes": [
        {
          "name": "variant",
          "description": "The divider's theme variant.",
          "values": [{ "name": "primary" }, { "name": "secondary" }]
        },
        {
          "name": "vertical",
          "description": "Draws the divider in a vertical orientation.",
          "values": []
        },
        {
          "name": "width",
          "description": "The width of the divider.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-divider--docs"
        }
      ]
    },
    {
      "name": "koerber-drawer",
      "description": "Drawers slide in from a container to expose additional options and information.\n---\n\n\n### **Events:**\n - **koerber-show** - Emitted when the drawer opens.\n- **koerber-after-show** - Emitted after the drawer opens and all animations are complete.\n- **koerber-hide** - Emitted when the drawer closes.\n- **koerber-after-hide** - Emitted after the drawer closes and all animations are complete.\n- **koerber-initial-focus** - Emitted when the drawer opens and is ready to receive focus. Calling `event.preventDefault()` will prevent focusing and allow you to set it on a different element, such as an input.\n- **koerber-request-close** - Emitted when the user attempts to close the drawer by clicking the close button, clicking the overlay, or pressing escape. Calling `event.preventDefault()` will keep the drawer open. Avoid using this unless closing the drawer will result in destructive behavior such as data loss.\n\n### **Methods:**\n - **show()** - Shows the drawer.\n- **hide()** - Hides the drawer\n\n### **Slots:**\n - _default_ - The drawer's main content.\n- **icon** - Optional icon to add to the icon before the label. Works best with `<koerber-icon>`.\n- **label** - The drawer's label. Alternatively, you can use the `label` attribute.\n- **footer** - The drawer's footer, usually one or more buttons representing various options.\n\n### **CSS Properties:**\n - **--koerber-drawer-contained-z-index** - The z-index for contained (non-modal) drawer. _(default: undefined)_\n- **--koerber-drawer-z-index** - The z-index for modal drawer. _(default: undefined)_\n- **--koerber-drawer-small-max-width** - The max width for drawer with small size. _(default: undefined)_\n- **--koerber-drawer-large-max-width** - The max width for drawer with large size. _(default: undefined)_\n- **--koerber-drawer-header-spacing** - The amount of padding to use for the header. _(default: undefined)_\n- **--koerber-drawer-body-spacing** - The amount of padding to use for the body. _(default: undefined)_\n- **--koerber-drawer-footer-spacing** - The amount of padding to use for the footer. _(default: undefined)_\n- **--koerber-drawer-panel-spacing:** - The amount of margin to use for the panel. _(default: undefined)_\n- **--koerber-drawer-overlay-color** - The background color of the overlay. _(default: undefined)_\n- **--koerber-drawer-overlay-opacity** - The target opacity of the overlay in percents. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **overlay** - The overlay that covers the screen behind the drawer.\n- **panel** - The drawer's panel (where the drawer and its content are rendered).\n- **header** - The drawer's header. This element wraps the title and header actions.\n- **icon** - Optional icon to add to the header before the label. Works best with `<koerber-icon>`.\n- **title** - The drawer's title.\n- **close-button** - The close button, an `<koerber-icon-button>`.\n- **close-button__base** - The close button's exported `base` part.\n- **body** - The drawer's body.\n- **footer** - The drawer's footer.",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether or not the drawer is open. You can toggle this attribute to show and hide the drawer, or you can\r\nuse the `show()` and `hide()` methods and this attribute will reflect the drawer's open state.",
          "values": []
        },
        {
          "name": "label",
          "description": "The drawer's label as displayed in the header. You should always include a relevant label even when using\r\n`no-header`, as it is required for proper accessibility. If you need to display HTML, use the `label` slot instead.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The direction from which the drawer will open.",
          "values": [{ "name": "end" }, { "name": "start" }]
        },
        {
          "name": "size",
          "description": "The drawer's size.",
          "values": [{ "name": "small" }, { "name": "large" }]
        },
        {
          "name": "contained",
          "description": "By default, the drawer slides out of its containing block (usually the viewport). To make the drawer slide out of\r\nits parent element, set this attribute and add `position: relative` to the parent.",
          "values": []
        },
        {
          "name": "no-header",
          "description": "Removes the header. This will also remove the default close button, so please ensure you provide an easy,\r\naccessible way for users to dismiss the drawer.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-drawer--docs"
        }
      ]
    },
    {
      "name": "koerber-dropdown",
      "description": "Dropdowns expose additional content that \"drops down\" in a panel.\n---\n\n\n### **Events:**\n - **koerber-show** - Emitted when the dropdown opens.\n- **koerber-after-show** - Emitted after the dropdown opens and all animations are complete.\n- **koerber-hide** - Emitted when the dropdown closes.\n- **koerber-after-hide** - Emitted after the dropdown closes and all animations are complete.\n\n### **Methods:**\n - **show()** - Shows the dropdown panel.\n- **hide()** - Hides the dropdown panel\n- **reposition()** - Instructs the dropdown menu to reposition. Useful when the position or size of the trigger changes when the menu is activated.\n\n### **Slots:**\n - _default_ - The dropdown's main content.\n- **trigger** - The dropdown's trigger, usually a `<koerber-button>` element.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **trigger** - The container that wraps the trigger.\n- **panel** - The panel that gets shown when the dropdown is open.",
      "attributes": [
        {
          "name": "open",
          "description": "Indicates whether or not the dropdown is open. You can toggle this attribute to show and hide the dropdown, or you\r\ncan use the `show()` and `hide()` methods and this attribute will reflect the dropdown's open state.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The preferred placement of the dropdown panel. Note that the actual placement may vary as needed to keep the panel\r\ninside of the viewport.",
          "values": [
            { "name": "" },
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "right" },
            { "name": "right-start" },
            { "name": "right-end" },
            { "name": "left" },
            { "name": "left-start" },
            { "name": "left-end" }
          ]
        },
        {
          "name": "disabled",
          "description": "Disables the dropdown so the panel will not open.",
          "values": []
        },
        {
          "name": "stay-open-on-select",
          "description": "By default, the dropdown is closed when an item is selected. This attribute will keep it open instead. Useful for\r\ndropdowns that allow for multiple interactions.",
          "values": []
        },
        {
          "name": "distance",
          "description": "The distance in pixels from which to offset the panel away from its trigger.",
          "values": []
        },
        {
          "name": "skidding",
          "description": "The distance in pixels from which to offset the panel along its trigger.",
          "values": []
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the panel from being clipped when the component is placed inside a container with\r\n`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.",
          "values": []
        },
        {
          "name": "sync",
          "description": "Syncs the popup width or height to that of the trigger element.",
          "values": [
            { "name": "width" },
            { "name": "height" },
            { "name": "both" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-dropdown--docs"
        }
      ]
    },
    {
      "name": "koerber-form-field",
      "description": "\n---\n\n\n### **Methods:**\n - **setErrors(errors: _string[]_)** - Sets the errors for the form-field.\n- **clearErrors()** - Clears the errors for the form-field.\n\n### **Slots:**\n - **(default)** - form field control or a suitable display value if in readonly mode.\n- **prefix** - provides custom content for the form field before field control. It is used to provide context or enhance functionality.\n- **suffix** - provides custom content for the form field before field control. It is used to provide context or enhance functionality.\n- **help-text** - custom content for help text.\n- **error** - custom content for error messages below the field control. can be used to provide form field related error messages\n- **footer** - custom content for form field footer. can be used to provide additional content after form field control and help-text area.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **form-control** - The component's form control.\n- **error** - The component's error wrapper.",
      "attributes": [
        {
          "name": "help-text",
          "description": "The form-field's help text. If you need to display HTML, use the `help-text` slot instead.",
          "values": []
        },
        {
          "name": "errors",
          "description": "The form-field's set of errors",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "label",
          "description": "The label of the component",
          "values": []
        },
        {
          "name": "value-hint",
          "description": "The Value Hint of the component",
          "values": []
        },
        {
          "name": "required",
          "description": "Sets if the user input is strictly required",
          "values": []
        },
        {
          "name": "tooltip",
          "description": "Handles if the form field will contain a tooltip in its label",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-form-field--docs"
        }
      ]
    },
    {
      "name": "koerber-form-field-error",
      "description": "\n---\n\n\n### **Slots:**\n - _default_ - The Form field error’s main content.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-form-field-error--docs"
        }
      ]
    },
    {
      "name": "koerber-form-field-label",
      "description": "\n---\n\n\n### **Slots:**\n - _default_ - The Form field label’s main content.\n- **tooltip** - Use to display tooltip content for the form field label.\n- **required** - Use to mark the form field label as required.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **label** - The form field label container.",
      "attributes": [
        {
          "name": "label",
          "description": "The label of the Form Field",
          "values": []
        },
        {
          "name": "tooltip",
          "description": "The tooltip of the Form field label",
          "values": []
        },
        {
          "name": "required",
          "description": "Makes the form field label a required field.",
          "values": []
        },
        { "name": "accessible-hidden", "values": [] }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-form-field-label--docs"
        }
      ]
    },
    {
      "name": "koerber-icon",
      "description": "Icons are symbols that can be used to represent various options within an application.\n---\n\n\n### **Events:**\n - **koerber-load** - Emitted when the icon has loaded.\n- **koerber-error** - Emitted when the icon fails to load due to an error.\n\n### **CSS Parts:**\n - **svg** - The internal SVG element.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the icon to draw.",
          "values": []
        },
        {
          "name": "size",
          "description": "The icon's size.",
          "values": [{ "name": "medium" }, { "name": "large" }]
        },
        {
          "name": "title",
          "description": "The title (tooltip) of the attribute",
          "values": []
        },
        {
          "name": "label",
          "description": "An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-icon--docs"
        }
      ]
    },
    {
      "name": "koerber-icon-button",
      "description": "Icons buttons are simple, icon-only buttons that can be used for actions and in toolbars.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the icon button loses focus.\n- **koerber-focus** - Emitted when the icon button gains focus.\n\n### **Methods:**\n - **click()** - Simulates a click on the icon button.\n- **focus(options: _FocusOptions_)** - Sets focus on the icon button.\n- **blur()** - Removes focus from the icon button.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the icon to draw. Available names depend on the icon library being used.",
          "values": []
        },
        {
          "name": "library",
          "description": "The name of a registered custom icon library.",
          "values": []
        },
        {
          "name": "src",
          "description": "An external URL of an SVG file. Be sure you trust the content you are including, as it will be executed as code and\r\ncan result in XSS attacks.",
          "values": []
        },
        {
          "name": "href",
          "description": "When set, the underlying button will be rendered as an `<a>` with this `href` instead of a `<button>`.",
          "values": []
        },
        {
          "name": "target",
          "description": "Tells the browser where to open the link. Only used when `href` is set.",
          "values": [
            { "name": "_blank" },
            { "name": "_parent" },
            { "name": "_self" },
            { "name": "_top" }
          ]
        },
        {
          "name": "download",
          "description": "Tells the browser to download the linked file as this filename. Only used when `href` is set.",
          "values": []
        },
        {
          "name": "size",
          "description": "The icon's size.",
          "values": [{ "name": "medium" }, { "name": "large" }]
        },
        {
          "name": "label",
          "description": "A description that gets read by assistive devices. For optimal accessibility, you should always include a label\r\nthat describes what the icon button does.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the button.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-icon-button--docs"
        }
      ]
    },
    {
      "name": "koerber-include",
      "description": "Includes give you the power to embed external HTML files into the page.\n---\n\n\n### **Events:**\n - **koerber-load** - Emitted when the included file is loaded.\n- **koerber-error** - Emitted when the included file fails to load due to an error.",
      "attributes": [
        {
          "name": "src",
          "description": "The location of the HTML file to include. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
          "values": []
        },
        {
          "name": "mode",
          "description": "The fetch mode to use.",
          "values": [
            { "name": "cors" },
            { "name": "no-cors" },
            { "name": "same-origin" }
          ]
        },
        {
          "name": "allow-scripts",
          "description": "Allows included scripts to be executed. Be sure you trust the content you are including as it will be executed as\ncode and can result in XSS attacks.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-include--docs"
        }
      ]
    },
    {
      "name": "koerber-input",
      "description": "Inputs collect data from the user.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the control loses focus.\n- **koerber-change** - Emitted when an alteration to the control's value is committed by the user.\n- **koerber-clear** - Emitted when the clear button is activated.\n- **koerber-focus** - Emitted when the control gains focus.\n- **koerber-input** - Emitted when the control receives input.\n\n### **Methods:**\n - **focus(options: _FocusOptions_)** - Sets focus on the input.\n- **blur()** - Removes focus from the input.\n- **select()** - Selects all the text in the input.\n- **setSelectionRange(selectionStart: _number_, selectionEnd: _number_, selectionDirection: _'forward' | 'backward' | 'none'_)** - Sets the start and end positions of the text selection (0-based).\n- **setRangeText(replacement: _string_, start: _number_, end: _number_, selectMode: _'select' | 'start' | 'end' | 'preserve'_)** - Replaces a range of text with a new string.\n- **showPicker()** - Displays the browser picker for an input element (only works if the browser supports it for the input type).\n- **stepUp()** - Increments the value of a numeric input type by the value of the step attribute.\n- **stepDown()** - Decrements the value of a numeric input type by the value of the step attribute.\n\n### **Slots:**\n - **prefix** - Used to prepend a presentational icon or similar element to the input.\n- **suffix** - Used to append a presentational icon or similar element to the input.\n- **clear-icon** - An icon to use in lieu of the default clear icon.\n- **show-password-icon** - An icon to use in lieu of the default show password icon.\n- **hide-password-icon** - An icon to use in lieu of the default hide password icon.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **input** - The internal `<input>` control.\n- **prefix** - The container that wraps the prefix.\n- **clear-button** - The clear button.\n- **password-toggle-button** - The password toggle button.\n- **suffix** - The container that wraps the suffix.",
      "attributes": [
        { "name": "title", "values": [] },
        {
          "name": "type",
          "description": "The type of input. Works the same as a native `<input>` element, but only a subset of types are supported. Defaults\r\nto `text`.",
          "values": [
            { "name": "" },
            { "name": "date" },
            { "name": "datetime-local" },
            { "name": "email" },
            { "name": "number" },
            { "name": "password" },
            { "name": "search" },
            { "name": "tel" },
            { "name": "text" },
            { "name": "time" },
            { "name": "url" }
          ]
        },
        {
          "name": "name",
          "description": "The name of the input, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the input, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "size",
          "description": "The input's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "clearable",
          "description": "Adds a clear button when the input is not empty.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the input.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Placeholder text to show as a hint when the input is empty.",
          "values": []
        },
        {
          "name": "readonly",
          "description": "Makes the input readonly.",
          "values": []
        },
        {
          "name": "password-toggle",
          "description": "Adds a button to toggle the password's visibility. Only applies to password types.",
          "values": []
        },
        {
          "name": "password-visible",
          "description": "Determines whether or not the password is currently visible. Only applies to password input types.",
          "values": []
        },
        {
          "name": "step",
          "description": "Specifies the granularity that the value must adhere to, or the special value `any` which means no stepping is\r\nimplied, allowing any numeric value. Only applies to date and number input types.",
          "values": [{ "name": "any" }]
        },
        {
          "name": "autocapitalize",
          "description": "Controls whether and how text input is automatically capitalized as it is entered by the user.",
          "values": [
            { "name": "off" },
            { "name": "none" },
            { "name": "on" },
            { "name": "sentences" },
            { "name": "words" },
            { "name": "characters" }
          ]
        },
        {
          "name": "autocorrect",
          "description": "Indicates whether the browser's autocorrect feature is on or off.",
          "values": [{ "name": "off" }, { "name": "on" }]
        },
        {
          "name": "autocomplete",
          "description": "Specifies what permission the browser has to provide assistance in filling out form field values. Refer to\r\n[this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for available values.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that the input should receive focus on page load.",
          "values": []
        },
        {
          "name": "enterkeyhint",
          "description": "Used to customize the label or icon of the Enter key on virtual keyboards.",
          "values": [
            { "name": "enter" },
            { "name": "done" },
            { "name": "go" },
            { "name": "next" },
            { "name": "previous" },
            { "name": "search" },
            { "name": "send" }
          ]
        },
        {
          "name": "spellcheck",
          "description": "Enables spell checking on the input.",
          "values": []
        },
        {
          "name": "inputmode",
          "description": "Tells the browser what type of data will be entered by the user, allowing it to display the appropriate virtual\r\nkeyboard on supportive devices.",
          "values": [
            { "name": "none" },
            { "name": "text" },
            { "name": "decimal" },
            { "name": "numeric" },
            { "name": "tel" },
            { "name": "search" },
            { "name": "email" },
            { "name": "url" }
          ]
        },
        {
          "name": "error",
          "description": "Used to indicate that the input has some error based on some rule.",
          "values": []
        },
        {
          "name": "prefix-icon",
          "description": "Used to define an Icon as a prefix of Input",
          "values": []
        },
        {
          "name": "suffix-icon",
          "description": "Used to define an Icon as a suffix of Input",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "Used to define an accessible name for the input",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "Used to define an accessible description for the input",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-input--docs"
        }
      ]
    },
    {
      "name": "koerber-link",
      "description": "Links are used as navigational elements.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the link loses focus.\n- **koerber-focus** - Emitted when the link gains focus.\n\n### **Methods:**\n - **click()** - Simulates a click on the link.\n- **focus(options: _FocusOptions_)** - Sets focus on the link.\n- **blur()** - Removes focus from the link.\n\n### **Slots:**\n - _default_ - The link's label.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **prefix** - The container that wraps the prefix.\n- **label** - The button's label.\n- **suffix** - The container that wraps the suffix.\n- **caret** - The button's caret icon, an `<koerber-icon>` element.",
      "attributes": [
        { "name": "href", "values": [] },
        {
          "name": "target",
          "description": "Tells the browser where to open the link. Only used when `href` is set.",
          "values": []
        },
        {
          "name": "rel",
          "description": "The `rel` attribute to use on the link. Only used when `href` is set.",
          "values": []
        },
        { "name": "title", "values": [] },
        {
          "name": "size",
          "description": "The link's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "disabled",
          "description": "Disables the link.",
          "values": []
        },
        { "name": "underline", "values": [] },
        { "name": "showIcon", "description": "Shows the Icon", "values": [] }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-link--docs"
        }
      ]
    },
    {
      "name": "koerber-list",
      "description": "List is used for displaying single-level information/data.\n---\n\n\n### **Slots:**\n - _default_ - The list's content, includes only list items\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [
        {
          "name": "size",
          "description": "The list's size. This size will be applied to all child list-items.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-list--docs"
        }
      ]
    },
    {
      "name": "koerber-list-item",
      "description": "list items provide options for the user to select in a list.\n---\n\n\n### **Slots:**\n - **label** - list item's label text.\n- **prefix** - list item's prefix icon or avatar.\n- **secondary-text** - secondary text to the list item.\n- **tertiary-text** - tertiary text to the list item.\n- **suffix** - list item's suffix icon-only button.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [
        {
          "name": "label",
          "description": "The label of the list item",
          "values": []
        },
        {
          "name": "secondary-text",
          "description": "The secondary text of the list item",
          "values": []
        },
        {
          "name": "tertiary-text",
          "description": "The tertiary text of the list item",
          "values": []
        },
        {
          "name": "size",
          "description": "The size of the list item",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "value",
          "description": "A unique value to store in the list item. This can be used as a way to identify list items when clicked.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-list-item--docs"
        }
      ]
    },
    {
      "name": "koerber-menu",
      "description": "Menus provide a list of options for the user to choose from.\n---\n\n\n### **Events:**\n - **koerber-select** - Emitted when a menu item is selected.\n\n### **Slots:**\n - _default_ - The menu's content, including menu items, menu labels, and dividers.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-menu--docs"
        }
      ]
    },
    {
      "name": "koerber-menu-item",
      "description": "Menu items provide options for the user to pick from in a menu.\n---\n\n\n### **Methods:**\n - **getTextLabel()** - Returns a text label based on the contents of the menu item's default slot.\n\n### **Slots:**\n - _default_ - The menu item's label.\n- **prefix** - Used to prepend an icon or similar element to the menu item.\n- **suffix** - Used to append an icon or similar element to the menu item.\n- **submenu** - Used to denote a nested menu.\n\n### **CSS Properties:**\n - **--submenu-offset** - The distance submenus shift to overlap the parent menu. _(default: -2px)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **prefix** - The prefix container.\n- **label** - The menu item label.\n- **suffix** - The suffix container.\n- **spinner** - The spinner that shows when the menu item is in the loading state.\n- **spinner__base** - The spinner's base part.\n- **submenu-icon** - The submenu icon, visible only when the menu item has a submenu (not yet implemented).",
      "attributes": [
        {
          "name": "type",
          "description": "The type of menu item to render. To use `checked`, this value must be set t`.",
          "values": []
        },
        {
          "name": "selected",
          "description": "Draws the item in a selected state.",
          "values": []
        },
        {
          "name": "value",
          "description": "A unique value to store in the menu item. This can be used as a way to identify menu items when selected.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Draws the menu item in a disabled state, preventing selection.",
          "values": []
        },
        {
          "name": "size",
          "description": "The height size value of the item - medium by default",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-menu-item--docs"
        }
      ]
    },
    {
      "name": "koerber-popup",
      "description": "Popup is a utility that lets you declaratively anchor \"popup\" containers to another element.\n---\n\n\n### **Events:**\n - **koerber-reposition** - Emitted when the popup is repositioned. This event can fire a lot, so avoid putting expensive operations in your listener or consider debouncing it.\n\n### **Methods:**\n - **reposition()** - Forces the popup to recalculate and reposition itself.\n\n### **Slots:**\n - _default_ - The popup's content.\n- **anchor** - The element the popup will be anchored to. If the anchor lives outside of the popup, you can use the `anchor` attribute or property instead.\n\n### **CSS Properties:**\n - **--arrow-size** - The size of the arrow. Note that an arrow won't be shown unless the `arrow` attribute is used. _(default: 6px)_\n- **--arrow-color** - The color of the arrow. _(default: var(--koerber-color-neutral-0))_\n- **--auto-size-available-width** - A read-only custom property that determines the amount of width the popup can be before overflowing. Useful for positioning child elements that need to overflow. This property is only available when using `auto-size`. _(default: undefined)_\n- **--auto-size-available-height** - A read-only custom property that determines the amount of height the popup can be before overflowing. Useful for positioning child elements that need to overflow. This property is only available when using `auto-size`. _(default: undefined)_\n\n### **CSS Parts:**\n - **arrow** - The arrow's container. Avoid setting `top|bottom|left|right` properties, as these values are assigned dynamically as the popup moves. This is most useful for applying a background color to match the popup, and maybe a border or box shadow.\n- **popup** - The popup's container. Useful for setting a background color, box shadow, etc.\n- **hover-bridge** - The hover bridge element. Only available when the `hover-bridge` option is enabled.",
      "attributes": [
        {
          "name": "anchor",
          "description": "The element the popup will be anchored to. If the anchor lives outside of the popup, you can provide the anchor\nelement `id`, a DOM element reference, or a `VirtualElement`. If the anchor lives inside the popup, use the\n`anchor` slot instead.",
          "values": [{ "name": "Element" }, { "name": "VirtualElement" }]
        },
        {
          "name": "active",
          "description": "Activates the positioning logic and shows the popup. When this attribute is removed, the positioning logic is torn\ndown and the popup will be hidden.",
          "values": []
        },
        {
          "name": "color-variant",
          "description": "The color variant of the popup. Valid options are `default`, `unstyled`, and `interactive`.",
          "values": [
            { "name": "default" },
            { "name": "interactive" },
            { "name": "unstyled" }
          ]
        },
        {
          "name": "placement",
          "description": "The preferred placement of the popup. Note that the actual placement will vary as configured to keep the\npanel inside of the viewport.",
          "values": [
            { "name": "" },
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "right" },
            { "name": "right-start" },
            { "name": "right-end" },
            { "name": "left" },
            { "name": "left-start" },
            { "name": "left-end" }
          ]
        },
        {
          "name": "strategy",
          "description": "Determines how the popup is positioned. The `absolute` strategy works well in most cases, but if overflow is\nclipped, using a `fixed` position strategy can often workaround it.",
          "values": [{ "name": "absolute" }, { "name": "fixed" }]
        },
        {
          "name": "distance",
          "description": "The distance in pixels from which to offset the panel away from its anchor.",
          "values": []
        },
        {
          "name": "skidding",
          "description": "The distance in pixels from which to offset the panel along its anchor.",
          "values": []
        },
        {
          "name": "arrow",
          "description": "Attaches an arrow to the popup. The arrow's size and color can be customized using the `--arrow-size` and\n`--arrow-color` custom properties. For additional customizations, you can also target the arrow using\n`::part(arrow)` in your stylesheet.",
          "values": []
        },
        {
          "name": "arrow-placement",
          "description": "The placement of the arrow. The default is `anchor`, which will align the arrow as close to the center of the\nanchor as possible, considering available space and `arrow-padding`. A value of `start`, `end`, or `center` will\nalign the arrow to the start, end, or center of the popover instead.",
          "values": [
            { "name": "start" },
            { "name": "end" },
            { "name": "center" },
            { "name": "anchor" }
          ]
        },
        {
          "name": "arrow-padding",
          "description": "The amount of padding between the arrow and the edges of the popup. If the popup has a border-radius, for example,\nthis will prevent it from overflowing the corners.",
          "values": []
        },
        {
          "name": "flip",
          "description": "When set, placement of the popup will flip to the opposite site to keep it in view. You can use\n`flipFallbackPlacements` to further configure how the fallback placement is determined.",
          "values": []
        },
        {
          "name": "flip-fallback-placements",
          "description": "If the preferred placement doesn't fit, popup will be tested in these fallback placements until one fits. Must be a\nstring of any number of placements separated by a space, e.g. \"top bottom left\". If no placement fits, the flip\nfallback strategy will be used instead.",
          "values": []
        },
        {
          "name": "flip-fallback-strategy",
          "description": "When neither the preferred placement nor the fallback placements fit, this value will be used to determine whether\nthe popup should be positioned using the best available fit based on available space or as it was initially\npreferred.",
          "values": [{ "name": "best-fit" }, { "name": "initial" }]
        },
        {
          "name": "flipBoundary",
          "description": "The flip boundary describes clipping element(s) that overflow will be checked relative to when flipping. By\ndefault, the boundary includes overflow ancestors that will cause the element to be clipped. If needed, you can\nchange the boundary by passing a reference to one or more elements to this property.",
          "values": [{ "name": "Element" }, { "name": "Element[]" }]
        },
        {
          "name": "flip-padding",
          "description": "The amount of padding, in pixels, to exceed before the flip behavior will occur.",
          "values": []
        },
        {
          "name": "shift",
          "description": "Moves the popup along the axis to keep it in view when clipped.",
          "values": []
        },
        {
          "name": "shiftBoundary",
          "description": "The shift boundary describes clipping element(s) that overflow will be checked relative to when shifting. By\ndefault, the boundary includes overflow ancestors that will cause the element to be clipped. If needed, you can\nchange the boundary by passing a reference to one or more elements to this property.",
          "values": [{ "name": "Element" }, { "name": "Element[]" }]
        },
        {
          "name": "shift-padding",
          "description": "The amount of padding, in pixels, to exceed before the shift behavior will occur.",
          "values": []
        },
        {
          "name": "auto-size",
          "description": "When set, this will cause the popup to automatically resize itself to prevent it from overflowing.",
          "values": [
            { "name": "horizontal" },
            { "name": "vertical" },
            { "name": "both" }
          ]
        },
        {
          "name": "sync",
          "description": "Syncs the popup's width or height to that of the anchor element.",
          "values": [
            { "name": "width" },
            { "name": "height" },
            { "name": "both" }
          ]
        },
        {
          "name": "autoSizeBoundary",
          "description": "The auto-size boundary describes clipping element(s) that overflow will be checked relative to when resizing. By\ndefault, the boundary includes overflow ancestors that will cause the element to be clipped. If needed, you can\nchange the boundary by passing a reference to one or more elements to this property.",
          "values": [{ "name": "Element" }, { "name": "Element[]" }]
        },
        {
          "name": "auto-size-padding",
          "description": "The amount of padding, in pixels, to exceed before the auto-size behavior will occur.",
          "values": []
        },
        {
          "name": "hover-bridge",
          "description": "When a gap exists between the anchor and the popup element, this option will add a \"hover bridge\" that fills the\ngap using an invisible element. This makes listening for events such as `mouseenter` and `mouseleave` more sane\nbecause the pointer never technically leaves the element. The hover bridge will only be drawn when the popover is\nactive.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-popup--docs"
        }
      ]
    },
    {
      "name": "koerber-radio",
      "description": "Radios allow the user to select a single option from a group.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the control loses focus.\n- **koerber-focus** - Emitted when the control gains focus.\n- **koerber-input** - Emitted when the control receives user input.\n- **koerber-change** - Emitted when the control's checked state changes.\n\n### **Slots:**\n - _default_ - The radio's label.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **control** - The circular container that wraps the radio's checked state.\n- **control--checked** - The radio control when the radio is checked.\n- **checked-icon** - The checked icon, an `<koerber-icon>` element.\n- **label** - The container that wraps the radio's label.",
      "attributes": [
        {
          "name": "value",
          "description": "The radio's value. When selected, the radio group will receive this value.",
          "values": []
        },
        { "name": "label", "description": "Label of the radio.", "values": [] },
        {
          "name": "size",
          "description": "The radio's size. When used inside a radio group, the size will be determined by the radio group's size so this\r\nattribute can typically be omitted.",
          "values": [{ "name": "standard" }, { "name": "comfortable" }]
        },
        {
          "name": "disabled",
          "description": "Disables the radio.",
          "values": []
        },
        { "name": "error", "values": [] },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-radio--docs"
        }
      ]
    },
    {
      "name": "koerber-radio-button",
      "description": "Radios buttons allow the user to select a single option from a group using a button-like control.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the button loses focus.\n- **koerber-focus** - Emitted when the button gains focus.\n\n### **Methods:**\n - **focus(options: _FocusOptions_)** - Sets focus on the radio button.\n- **blur()** - Removes focus from the radio button.\n\n### **Slots:**\n - _default_ - The radio button's label.\n- **prefix** - A presentational prefix icon or similar element.\n- **suffix** - A presentational suffix icon or similar element.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **button** - The internal `<button>` element.\n- **button--checked** - The internal button element when the radio button is checked.\n- **prefix** - The container that wraps the prefix.\n- **label** - The container that wraps the radio button's label.\n- **suffix** - The container that wraps the suffix.",
      "attributes": [
        {
          "name": "value",
          "description": "The radio's value. When selected, the radio group will receive this value.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the radio button.",
          "values": []
        },
        {
          "name": "size",
          "description": "The radio button's size. When used inside a radio group, the size will be determined by the radio group's size so\r\nthis attribute can typically be omitted.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "error",
          "description": "Indicates en error on the component",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-radio-button--docs"
        }
      ]
    },
    {
      "name": "koerber-radio-group",
      "description": "Radio groups are used to group multiple [radios](/components/radio) or [radio buttons](/components/radio-button) so they function as a single form control.\n---\n\n\n### **Events:**\n - **koerber-change** - Emitted when the radio group's selected value changes.\n- **koerber-input** - Emitted when the radio group receives user input.\n\n### **Slots:**\n - _default_ - The default slot where `<koerber-radio>` or `<koerber-radio-button>` elements are placed. attribute.\n\n### **CSS Parts:**\n - **button-group** - The button group that wraps radio buttons.\n- **button-group__base** - The button group's `base` part.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the radio group, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the radio group, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "size",
          "description": "The radio group's size. This size will be applied to all child radios and radio buttons.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "required",
          "description": "Ensures a child radio is checked before allowing the containing form to submit.",
          "values": []
        },
        {
          "name": "horizontal",
          "description": "set layout horizontal/vertical.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables all child radio buttons.",
          "values": []
        },
        {
          "name": "error",
          "description": "Put the checked item to error state - indicating an error to the user.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-radio-group--docs"
        }
      ]
    },
    {
      "name": "koerber-search",
      "description": "Search allow you to choose items from a menu of predefined options.\n---\n\n\n### **Events:**\n - **koerber-change** - Emitted when the control's value changes.\n- **koerber-clear** - Emitted when the control's value is cleared.\n- **koerber-input** - Emitted when the control receives input.\n- **koerber-focus** - Emitted when the control gains focus.\n- **koerber-blur** - Emitted when the control loses focus.\n- **koerber-show** - Emitted when the search's menu opens.\n- **koerber-after-show** - Emitted after the search's menu opens and all animations are complete.\n- **koerber-hide** - Emitted when the search's menu closes.\n- **koerber-after-hide** - Emitted after the search's menu closes and all animations are complete.\n\n### **Methods:**\n - **show()** - Shows the listbox.\n- **hide()** - Hides the listbox.\n- **focus(options: _FocusOptions_)** - Sets focus on the control.\n- **blur()** - Removes focus from the control.\n\n### **Slots:**\n - _default_ - The listbox options. Must be `<koerber-search-option>` elements.\n- **prefix** - Used to prepend a presentational icon or similar element to the combobox.\n- **clear-icon** - An icon to use in lieu of the default clear icon.\n- **search-icon** - The icon to show when the control is expanded and collapsed. Rotates on open and close.\n\n### **CSS Parts:**\n - **combobox** - The container the wraps the prefix, combobox, clear icon, and expand button.\n- **prefix** - The container that wraps the prefix slot.\n- **display-input** - The element that displays the selected option's label, an `<input>` element.\n- **listbox** - The listbox container where options are slotted.\n- **tag__base** - The tag's base part.\n- **tag__content** - The tag's content part.\n- **tag__remove-button** - The tag's remove button.\n- **tag__remove-button__base** - The tag's remove button base part.\n- **search-button** - The search button or clear it depends.\n- **search__icon** - The container that wraps the expand icon.\n- **form-control-error-message** - The error's message wrapper.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the search, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the search, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "placeholder",
          "description": "Placeholder text to show as a hint when the search is empty.",
          "values": []
        },
        {
          "name": "size",
          "description": "The search's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "loading",
          "description": "Adds a loader/spinner in the suffix of the search control",
          "values": []
        },
        {
          "name": "loadingMessage",
          "description": "Displays loading message when loading flag set to true",
          "values": []
        },
        {
          "name": "max-height",
          "description": "Sets the maximum height for the dropdown box before the scrollbar appears.",
          "values": []
        },
        {
          "name": "min-length",
          "description": "Sets the minimum length of the search input before the search is triggered., zero by default (deactivated)",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the search control.",
          "values": []
        },
        {
          "name": "open",
          "description": "Indicates whether or not the search is open. You can toggle this attribute to show and hide the menu, or you can\r\nuse the `show()` and `hide()` methods and this attribute will reflect the search's open state.",
          "values": []
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the listbox from being clipped when the component is placed inside a container with\r\n`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The preferred placement of the search's menu. Note that the actual placement may vary as needed to keep the listbox\r\ninside of the viewport.",
          "values": [{ "name": "top" }, { "name": "bottom" }]
        },
        {
          "name": "required",
          "description": "The search's required attribute.",
          "values": []
        },
        {
          "name": "error",
          "description": "Used to indicate that the input has some error based on some rule.",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-search--docs"
        }
      ]
    },
    {
      "name": "koerber-search-option",
      "description": "Search Options define the selectable options within the Search Component.\n---\n\n\n### **Methods:**\n - **getTextLabel()** - Returns a plain text label based on the search-option's content.\n\n### **Slots:**\n - _default_ - The search option's label.\n- **suffix** - Used to append an icon or similar element to the search option.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **label** - The search option's label.\n- **prefix** - The container that wraps the prefix.\n- **suffix** - The container that wraps the suffix.",
      "attributes": [
        {
          "name": "value",
          "description": "The search-option's value. When selected, the containing form control will receive this value. The value must be unique\r\nfrom other search-options in the same group.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Draws the search-option in a disabled state, preventing selection.",
          "values": []
        },
        {
          "name": "size",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-search-option--docs"
        }
      ]
    },
    {
      "name": "koerber-select",
      "description": "Selects allow you to choose items from a menu of predefined options.\n---\n\n\n### **Events:**\n - **koerber-change** - Emitted when the control's value changes.\n- **koerber-clear** - Emitted when the control's value is cleared.\n- **koerber-input** - Emitted when the control receives input.\n- **koerber-focus** - Emitted when the control gains focus.\n- **koerber-blur** - Emitted when the control loses focus.\n- **koerber-show** - Emitted when the select's menu opens.\n- **koerber-after-show** - Emitted after the select's menu opens and all animations are complete.\n- **koerber-hide** - Emitted when the select's menu closes.\n- **koerber-after-hide** - Emitted after the select's menu closes and all animations are complete.\n\n### **Methods:**\n - **show()** - Shows the listbox.\n- **hide()** - Hides the listbox.\n- **focus(options: _FocusOptions_)** - Sets focus on the control.\n- **blur()** - Removes focus from the control.\n\n### **Slots:**\n - _default_ - The listbox options. Must be `<koerber-select-option>` elements.\n- **prefix** - Used to prepend a presentational icon or similar element to the combobox.\n- **clear-icon** - An icon to use in lieu of the default clear icon.\n- **expand-icon** - The icon to show when the control is expanded and collapsed. Rotates on open and close.\n\n### **CSS Parts:**\n - **combobox** - The container the wraps the prefix, combobox, clear icon, and expand button.\n- **prefix** - The container that wraps the prefix slot.\n- **display-input** - The element that displays the selected option's label, an `<input>` element.\n- **listbox** - The listbox container where options are slotted.\n- **tags** - The container that houses option tags when `multiselect` is used.\n- **tag** - The individual tags that represent each multiselect option.\n- **tag__base** - The tag's base part.\n- **tag__content** - The tag's content part.\n- **tag__remove-button** - The tag's remove button.\n- **tag__remove-button__base** - The tag's remove button base part.\n- **clear-button** - The clear button.\n- **expand-icon** - The container that wraps the expand icon.\n- **form-control-error-message** - The error's message wrapper.",
      "attributes": [
        {
          "name": "name",
          "description": "The name of the select, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the select, submitted as a name/value pair with form data. When `multiple` is enabled, the\r\nvalue will be a space-delimited list of values based on the options selected.",
          "values": [{ "name": "string[]" }]
        },
        {
          "name": "placeholder",
          "description": "Placeholder text to show as a hint when the select is empty.",
          "values": []
        },
        {
          "name": "size",
          "description": "The select's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "loading",
          "description": "Adds a loader/spinner in the suffix of the select control",
          "values": []
        },
        {
          "name": "loadingMessage",
          "description": "Displays loading message when loading flag set to true",
          "values": []
        },
        {
          "name": "multiple",
          "description": "Allows more than one option to be selected.",
          "values": []
        },
        {
          "name": "max-height",
          "description": "Sets the maximum height for the dropdown box before the scrollbar appears.",
          "values": []
        },
        {
          "name": "max-options-visible",
          "description": "The maximum number of selected options to show when `multiple` is true. After the maximum, \"+n\" will be shown to\r\nindicate the number of additional items that are selected. Set to 0 to remove the limit.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the select control.",
          "values": []
        },
        {
          "name": "clearable",
          "description": "Adds a clear button when the select is not empty.",
          "values": []
        },
        {
          "name": "open",
          "description": "Indicates whether or not the select is open. You can toggle this attribute to show and hide the menu, or you can\r\nuse the `show()` and `hide()` methods and this attribute will reflect the select's open state.",
          "values": []
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the listbox from being clipped when the component is placed inside a container with\r\n`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The preferred placement of the select's menu. Note that the actual placement may vary as needed to keep the listbox\r\ninside of the viewport.",
          "values": [{ "name": "top" }, { "name": "bottom" }]
        },
        {
          "name": "required",
          "description": "The select's required attribute.",
          "values": []
        },
        {
          "name": "allowSearch",
          "description": "Enables search functionality in the select box.",
          "values": []
        },
        {
          "name": "error",
          "description": "Used to indicate that the input has some error based on some rule.",
          "values": []
        },
        {
          "name": "loading-error-message",
          "description": "Used to indicate that the input has some error based on some rule.",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-select--docs"
        }
      ]
    },
    {
      "name": "koerber-select-option",
      "description": "Options define the selectable items within various form controls such as [select](/components/select).\n---\n\n\n### **Methods:**\n - **getTextLabel()** - Returns a plain text label based on the option's content.\n\n### **Slots:**\n - _default_ - The option's label.\n- **prefix** - Used to prepend an icon or similar element to the menu item.\n- **suffix** - Used to append an icon or similar element to the menu item.\n\n### **CSS Parts:**\n - **checked-icon** - The checked icon, an `<koerber-icon>` element.\n- **base** - The component's base wrapper.\n- **label** - The option's label.\n- **prefix** - The container that wraps the prefix.\n- **suffix** - The container that wraps the suffix.",
      "attributes": [
        {
          "name": "value",
          "description": "The option's value. When selected, the containing form control will receive this value. The value must be unique\r\nfrom other options in the same group. Values may not contain spaces, as spaces are used as delimiters when listing\r\nmultiple values.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Draws the option in a disabled state, preventing selection.",
          "values": []
        },
        {
          "name": "checkbox",
          "description": "Draws the option in a checkbox state.",
          "values": []
        },
        {
          "name": "size",
          "description": "The option's size. When used inside a select, the size will be determined by the select's size so this\r\nattribute can typically be omitted.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-select-option--docs"
        }
      ]
    },
    {
      "name": "koerber-spinner",
      "description": "Spinners are used to show the progress of an indeterminate operation.\n---\n\n\n### **CSS Properties:**\n - **--track-width** - The width of the track. _(default: undefined)_\n- **--track-color** - The color of the track. _(default: undefined)_\n- **--indicator-color** - The color of the spinner's indicator. _(default: undefined)_\n- **--speed** - The time it takes for the spinner to complete one animation cycle. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-spinner--docs"
        }
      ]
    },
    {
      "name": "koerber-textarea",
      "description": "Textareas collect data from the user and allow multiple lines of text.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the control loses focus.\n- **koerber-change** - Emitted when an alteration to the control's value is committed by the user.\n- **koerber-focus** - Emitted when the control gains focus.\n- **koerber-input** - Emitted when the control receives input.\n\n### **Methods:**\n - **focus(options: _FocusOptions_)** - Sets focus on the textarea.\n- **blur()** - Removes focus from the textarea.\n- **select()** - Selects all the text in the textarea.\n- **scrollPosition(position: _{ top?: number; left?: number }_): _{ top: number; left: number } | undefined_** - Gets or sets the textarea's scroll position.\n- **setSelectionRange(selectionStart: _number_, selectionEnd: _number_, selectionDirection: _'forward' | 'backward' | 'none'_)** - Sets the start and end positions of the text selection (0-based).\n- **setRangeText(replacement: _string_, start: _number_, end: _number_, selectMode: _'select' | 'start' | 'end' | 'preserve'_)** - Replaces a range of text with a new string.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **textarea** - The internal `<textarea>` control.",
      "attributes": [
        { "name": "title", "values": [] },
        {
          "name": "name",
          "description": "The name of the textarea, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the textarea, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "size",
          "description": "The textarea's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "placeholder",
          "description": "Placeholder text to show as a hint when the input is empty.",
          "values": []
        },
        {
          "name": "rows",
          "description": "The number of rows to display by default.",
          "values": []
        },
        {
          "name": "resize",
          "description": "Controls how the textarea can be resized.",
          "values": [
            { "name": "none" },
            { "name": "vertical" },
            { "name": "auto" }
          ]
        },
        {
          "name": "disabled",
          "description": "Disables the textarea.",
          "values": []
        },
        {
          "name": "readonly",
          "description": "Makes the textarea readonly.",
          "values": []
        },
        {
          "name": "required",
          "description": "Makes the textarea a required field.",
          "values": []
        },
        {
          "name": "autocapitalize",
          "description": "Controls whether and how text input is automatically capitalized as it is entered by the user.",
          "values": [
            { "name": "off" },
            { "name": "none" },
            { "name": "on" },
            { "name": "sentences" },
            { "name": "words" },
            { "name": "characters" }
          ]
        },
        {
          "name": "autocorrect",
          "description": "Indicates whether the browser's autocorrect feature is on or off.",
          "values": []
        },
        {
          "name": "autocomplete",
          "description": "Specifies what permission the browser has to provide assistance in filling out form field values. Refer to\r\n[this page on MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) for available values.",
          "values": []
        },
        {
          "name": "autofocus",
          "description": "Indicates that the input should receive focus on page load.",
          "values": []
        },
        {
          "name": "enterkeyhint",
          "description": "Used to customize the label or icon of the Enter key on virtual keyboards.",
          "values": [
            { "name": "enter" },
            { "name": "done" },
            { "name": "go" },
            { "name": "next" },
            { "name": "previous" },
            { "name": "search" },
            { "name": "send" }
          ]
        },
        {
          "name": "spellcheck",
          "description": "Enables spell checking on the textarea.",
          "values": []
        },
        {
          "name": "inputmode",
          "description": "Tells the browser what type of data will be entered by the user, allowing it to display the appropriate virtual\r\nkeyboard on supportive devices.",
          "values": [
            { "name": "none" },
            { "name": "text" },
            { "name": "decimal" },
            { "name": "numeric" },
            { "name": "tel" },
            { "name": "search" },
            { "name": "email" },
            { "name": "url" }
          ]
        },
        {
          "name": "error",
          "description": "to indicate that the text area is used for an error.",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-textarea--docs"
        }
      ]
    },
    {
      "name": "koerber-tag",
      "description": "Tags are used as labels to organize things or to indicate a selection.\n---\n\n\n### **Events:**\n - **koerber-remove** - Emitted when the remove button is activated.\n\n### **Slots:**\n - _default_ - The tag's content.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **content** - The tag's content.\n- **remove-button** - The tag's remove button, an `<koerber-icon-button>`.\n- **remove-button__base** - The remove button's exported `base` part.",
      "attributes": [
        {
          "name": "size",
          "description": "The tag's size.",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        },
        {
          "name": "pill",
          "description": "Draws a pill-style tag with rounded edges.",
          "values": []
        },
        {
          "name": "removable",
          "description": "Makes the tag removable and shows a remove button.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-tag--docs"
        }
      ]
    },
    {
      "name": "koerber-toggle",
      "description": "toggles allow the user to toggle an option on or off.\n---\n\n\n### **Events:**\n - **koerber-blur** - Emitted when the control loses focus.\n- **koerber-change** - Emitted when the control's checked state changes.\n- **koerber-input** - Emitted when the control receives input.\n- **koerber-focus** - Emitted when the control gains focus.\n\n### **Methods:**\n - **click()** - Simulates a click on the toggle.\n- **focus(options: _FocusOptions_)** - Sets focus on the toggle.\n- **blur()** - Removes focus from the toggle.\n\n### **Slots:**\n - _default_ - The toggle's label.\n\n### **CSS Properties:**\n - **--width** - The width of the toggle. _(default: undefined)_\n- **--height** - The height of the toggle. _(default: undefined)_\n- **--thumb-size** - The size of the thumb. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **control** - The control that houses the toggle's thumb.\n- **thumb** - The toggle's thumb.\n- **label** - The toggle's label.",
      "attributes": [
        { "name": "title", "values": [] },
        {
          "name": "name",
          "description": "The name of the toggle, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "value",
          "description": "The current value of the toggle, submitted as a name/value pair with form data.",
          "values": []
        },
        {
          "name": "label",
          "description": "Label of the toggle.",
          "values": []
        },
        {
          "name": "size",
          "description": "The toggle's size.",
          "values": [{ "name": "standard" }, { "name": "comfortable" }]
        },
        {
          "name": "disabled",
          "description": "Disables the toggle.",
          "values": []
        },
        {
          "name": "checked",
          "description": "Draws the toggle in a checked state.",
          "values": []
        },
        {
          "name": "required",
          "description": "Makes the toggle a required field.",
          "values": []
        },
        {
          "name": "error",
          "description": "Indicates the form control is in an error state.",
          "values": []
        },
        {
          "name": "accessible-name",
          "description": "The component accessible label name",
          "values": []
        },
        {
          "name": "accessible-description",
          "description": "The component accessible description",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-toggle--docs"
        }
      ]
    },
    {
      "name": "koerber-tree",
      "description": "Trees allow you to display a hierarchical list of selectable [tree items](/components/tree-item). Items with children can be expanded and collapsed as desired by the user.\n---\n\n\n### **Events:**\n - **koerber-selection-change** - Emitted when a tree item is selected or deselected.\n\n### **Slots:**\n - _default_ - The default slot.\n- **expand-icon** - The icon to show when the tree item is expanded. Works best with `<koerber-icon>`.\n- **collapse-icon** - The icon to show when the tree item is collapsed. Works best with `<koerber-icon>`.\n\n### **CSS Properties:**\n - **--indent-size** - The size of the indentation for nested items. _(default: var(--koerber-spacing-s))_\n- **--indent-guide-color** - The color of the indentation line. _(default: var(--koerber-color-neutral-200))_\n- **--indent-guide-offset** - The amount of vertical spacing to leave between the top and bottom of the indentation line's starting position. _(default: 0)_\n- **--indent-guide-style** - The style of the indentation line, e.g. solid, dotted, dashed. _(default: solid)_\n- **--indent-guide-width** - The width of the indentation line. _(default: 0)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.",
      "attributes": [],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-tree--docs"
        }
      ]
    },
    {
      "name": "koerber-tooltip",
      "description": "Tooltips display additional information based on a specific action.\n---\n\n\n### **Events:**\n - **koerber-show** - Emitted when the tooltip begins to show.\n- **koerber-after-show** - Emitted after the tooltip has shown and all animations are complete.\n- **koerber-hide** - Emitted when the tooltip begins to hide.\n- **koerber-after-hide** - Emitted after the tooltip has hidden and all animations are complete.\n\n### **Methods:**\n - **show()** - Shows the tooltip.\n- **hide()** - Hides the tooltip\n\n### **Slots:**\n - _default_ - The tooltip's target element. Avoid slotting in more than one element, as subsequent ones will be ignored.\n- **content** - The content to render in the tooltip. Alternatively, you can use the `content` attribute.\n\n### **CSS Properties:**\n - **--max-width** - The maximum width of the tooltip before its content will wrap. _(default: undefined)_\n- **--hide-delay** - The amount of time to wait before hiding the tooltip when hovering. _(default: undefined)_\n- **--show-delay** - The amount of time to wait before showing the tooltip when hovering. _(default: undefined)_\n\n### **CSS Parts:**\n - **base** - The component's base wrapper, an `<koerber-popup>` element.\n- **base__popup** - The popup's exported `popup` part. Use this to target the tooltip's popup container.\n- **base__arrow** - The popup's exported `arrow` part. Use this to target the tooltip's arrow.\n- **body** - The tooltip's body where its content is rendered.",
      "attributes": [
        {
          "name": "content",
          "description": "The tooltip's content. If you need to display HTML, use the `content` slot instead.",
          "values": []
        },
        {
          "name": "placement",
          "description": "The preferred placement of the tooltip. Note that the actual placement may vary as needed to keep the tooltip\ninside of the viewport.",
          "values": [
            { "name": "" },
            { "name": "top" },
            { "name": "top-start" },
            { "name": "top-end" },
            { "name": "right" },
            { "name": "right-start" },
            { "name": "right-end" },
            { "name": "bottom" },
            { "name": "bottom-start" },
            { "name": "bottom-end" },
            { "name": "left" },
            { "name": "left-start" },
            { "name": "left-end" }
          ]
        },
        {
          "name": "open",
          "description": "Indicates whether or not the tooltip is open. You can use this in lieu of the show/hide methods.",
          "values": []
        },
        {
          "name": "hoist",
          "description": "Enable this option to prevent the tooltip from being clipped when the component is placed inside a container with\n`overflow: auto|hidden|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all,\nscenarios.",
          "values": []
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-tooltip--docs"
        }
      ]
    },
    {
      "name": "koerber-tree-item",
      "description": "A tree item serves as a hierarchical node that lives inside a [tree](/components/tree).\n---\n\n\n### **Events:**\n - **koerber-expand** - Emitted when the tree item expands.\n- **koerber-after-expand** - Emitted after the tree item expands and all animations are complete.\n- **koerber-collapse** - Emitted when the tree item collapses.\n- **koerber-after-collapse** - Emitted after the tree item collapses and all animations are complete.\n- **koerber-lazy-change** - Emitted when the tree item's lazy state changes.\n- **koerber-lazy-load** - Emitted when a lazy item is selected. Use this event to asynchronously load data and append items to the tree before expanding. After appending new items, remove the `lazy` attribute to remove the loading state and update the tree.\n\n### **Slots:**\n - _default_ - The default slot.\n- **expand-icon** - The icon to show when the tree item is expanded.\n- **collapse-icon** - The icon to show when the tree item is collapsed.\n- **actions** - The action buttons in the tree item.\n- **support** - The icon to show the supporting visuals in the tree item.\n- **hint** - The hint text in the tree item content.\n\n### **CSS Parts:**\n - **base** - The component's base wrapper.\n- **item** - The tree item's container. This element wraps everything except slotted tree item children.\n- **item--disabled** - Applied when the tree item is disabled.\n- **item--open** - Applied when the tree item is open.\n- **item--indeterminate** - Applied when the selection is indeterminate.\n- **item--selected** - Applied when the tree item is selected.\n- **indentation** - The tree item's indentation container.\n- **expand-button** - The container that wraps the tree item's expand button and spinner.\n- **label** - The tree item's label.\n- **children** - The container that wraps the tree item's nested children.\n- **checkbox** - The checkbox that shows when using multiselect.\n- **checkbox__base** - The checkbox's exported `base` part.\n- **checkbox__control** - The checkbox's exported `control` part.\n- **checkbox__control--checked** - The checkbox's exported `control--checked` part.\n- **checkbox__control--indeterminate** - The checkbox's exported `control--indeterminate` part.\n- **checkbox__checked-icon** - The checkbox's exported `checked-icon` part.\n- **checkbox__indeterminate-icon** - The checkbox's exported `indeterminate-icon` part.\n- **checkbox__label** - The checkbox's exported `label` part.",
      "attributes": [
        {
          "name": "open",
          "description": "Expands the tree item.",
          "values": []
        },
        {
          "name": "selected",
          "description": "Draws the tree item in a selected state.",
          "values": []
        },
        {
          "name": "disabled",
          "description": "Disables the tree item.",
          "values": []
        },
        {
          "name": "lazy",
          "description": "Enables lazy loading behavior.",
          "values": []
        },
        {
          "name": "size",
          "description": "Set the current size of the tree item",
          "values": [
            { "name": "small" },
            { "name": "medium" },
            { "name": "large" }
          ]
        }
      ],
      "references": [
        {
          "name": "Documentation",
          "url": "https://kind-desert-0fb80550f.5.azurestaticapps.net/?path=/docs/components-tree-item--docs"
        }
      ]
    }
  ]
}
