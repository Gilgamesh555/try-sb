"use strict";(self.webpackChunk_koerber_uikit=self.webpackChunk_koerber_uikit||[]).push([[5381],{"./src/stories/components/search/search.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomSearch:()=>CustomSearch,Default:()=>Default,Disabled:()=>Disabled,MinLength:()=>MinLength,Placeholder:()=>Placeholder,Sizes:()=>Sizes,Value:()=>Value,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/utils.ts");__webpack_require__("./src/stories/component-imports.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Search-Stories",component:"koerber-search",argTypes:{name:{control:{type:"text"},description:"The name of the search, submitted as a name/value pair with form data.",defaultValue:"''",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"''"}}},value:{control:{type:"text"},description:"The current value of the search, submitted as a name/value pair with form data.",defaultValue:"''",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"''"}}},placeholder:{control:{type:"text"},description:"Placeholder text to show as a hint when the search is empty.",defaultValue:"''",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"''"}}},size:{control:{type:"select"},options:["small","medium","large"],description:"The search's size.",defaultValue:"'medium'",table:{type:{summary:"'small' | 'medium' | 'large'",detail:"'small' | 'medium' | 'large'"},defaultValue:{summary:"'medium'"}}},loading:{control:{type:"boolean"},description:"Adds a loader/spinner in the suffix of the search control",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},loadingMessage:{control:{type:"text"},description:"Displays loading message when loading flag set to true",defaultValue:"'Disabled while loading'",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"'Disabled while loading'"}}},"max-height":{control:{type:"number"},description:"Sets the maximum height for the dropdown box before the scrollbar appears.",defaultValue:"0",table:{type:{summary:"number",detail:"number"},defaultValue:{summary:"0"}}},"min-length":{control:{type:"number"},description:"Sets the minimum length of the search input before the search is triggered.",defaultValue:"0",table:{type:{summary:"number",detail:"number"},defaultValue:{summary:"1"}}},disabled:{control:{type:"boolean"},description:"Disables the search control.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},open:{control:{type:"boolean"},description:"Indicates whether or not the search is open. You can toggle this attribute to show and hide the menu, or you can\r\nuse the `show()` and `hide()` methods and this attribute will reflect the search's open state.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},hoist:{control:{type:"boolean"},description:"Enable this option to prevent the listbox from being clipped when the component is placed inside a container with\r\n`overflow: auto|scroll`. Hoisting uses a fixed positioning strategy that works in many, but not all, scenarios.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},placement:{control:{type:"select"},options:["top","bottom"],description:"The preferred placement of the search's menu. Note that the actual placement may vary as needed to keep the listbox\r\ninside of the viewport.",defaultValue:"'bottom'",table:{type:{summary:"'top' | 'bottom'",detail:"'top' | 'bottom'"},defaultValue:{summary:"'bottom'"}}},required:{control:{type:"boolean"},description:"The search's required attribute.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},error:{control:{type:"boolean"},description:"Used to indicate that the input has some error based on some rule.",defaultValue:"false",table:{type:{summary:"boolean",detail:"boolean"},defaultValue:{summary:"false"}}},"accessible-name":{control:{type:"text"},description:"The component accessible label name",table:{type:{summary:"string",detail:"string"},defaultValue:{}}},"accessible-description":{control:{type:"text"},description:"The component accessible description",table:{type:{summary:"string",detail:"string"},defaultValue:{}}}}},Default={render:args=>{const searchHTML=`\n<koerber-search ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Germany"></koerber-search-option>\n  <koerber-search-option value="Russia">\n    <koerber-icon slot="suffix" name="delete"></koerber-icon>\n  </koerber-search-option>\n  <koerber-search-option value="Spain">\n    <koerber-icon slot="suffix" name="delete"></koerber-icon>\n  </koerber-search-option>\n</koerber-search>\n    `;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(searchHTML)},args:{hoist:!0,placeholder:"Type something..."},storyName:"Default"},Value={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<koerber-search value="Por" hoist>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Porcelain"></koerber-search-option>\n  <koerber-search-option value="Portal"></koerber-search-option>\n</koerber-search>\n    ')},Placeholder={render:args=>{const searchHTML=`<koerber-search ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}></koerber-search>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(searchHTML)},args:{placeholder:"Type something...",hoist:!0},storyName:"Placeholder"},Sizes={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<div class="flex flex-col gap-4">\n  <koerber-search size="small" hoist value="Size small"></koerber-search>\n  <koerber-search size="medium" hoist value="Size medium"></koerber-search>\n  <koerber-search size="large" hoist value="Size large"></koerber-search>\n</div>\n\n<style>\n.flex {\n  display: flex;\n}\n.flex-col {\n  flex-direction: column;\n}\n.gap-4 {\n  gap: 1rem;\n}\n</style>\n    ')},MinLength={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<koerber-search min-length="3" hoist>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Germany"></koerber-search-option>\n  <koerber-search-option value="Russia"></koerber-search-option>\n  <koerber-search-option value="Spain"></koerber-search-option>\n</koerber-search>\n    ')},Disabled={render:args=>{const searchHTML=`<koerber-search ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}>${args.label}</koerber-search>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(searchHTML)},args:{value:"Search Disabled, try to type something...",disabled:!0},storyName:"Disabled"},CustomSearch={render:()=>(setTimeout((()=>{const searchFruitsSample=[{value:"Apple"},{value:"Banana"},{value:"Cherry"},{value:"Date"},{value:"Elderberry"},{value:"Fig"},{value:"Grape"},{value:"Honeydew"},{value:"Icaco"},{value:"Jackfruit"},{value:"Kiwi"},{value:"Lemon"},{value:"Mango"},{value:"Nectarine"},{value:"Orange"},{value:"Papaya"},{value:"Quince"},{value:"Raspberry"},{value:"Strawberry"},{value:"Tangerine"},{value:"Ugli"},{value:"Vanilla"},{value:"Watermelon"},{value:"Ximenia"},{value:"Yuzu"},{value:"Zucchini"}],search=document.querySelector("#customSearch");null==search||search.addEventListener("koerber-change",(event=>{const searchValue=event.target.value.toLowerCase(),searchOptions=searchFruitsSample.filter((fruit=>fruit.value.toLowerCase().includes(searchValue)));search.innerHTML="",searchOptions.forEach((option=>{const optionElement=document.createElement("koerber-search-option");optionElement.value=option.value,search.appendChild(optionElement)}))}))})),(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<koerber-search hoist id="customSearch" placeholder="Type some fruit...">\n</koerber-search>\n    ')),parameters:{docs:{source:{code:"\n<koerber-search hoist id=\"customSearch\" placeholder=\"Type some fruit...\">\n</koerber-search>\n\n<script>\nconst searchFruitsSample = [\n  { value: 'Apple' },\n  { value: 'Banana' },\n  { value: 'Cherry' },\n  { value: 'Date' },\n  { value: 'Elderberry' },\n  { value: 'Fig' },\n  { value: 'Grape' },\n  { value: 'Honeydew' },\n  { value: 'Icaco' },\n  { value: 'Jackfruit' },\n  { value: 'Kiwi' },\n  { value: 'Lemon' },\n  { value: 'Mango' },\n  { value: 'Nectarine' },\n  { value: 'Orange' },\n  { value: 'Papaya' },\n  { value: 'Quince' },\n  { value: 'Raspberry' },\n  { value: 'Strawberry' },\n  { value: 'Tangerine' },\n  { value: 'Ugli' },\n  { value: 'Vanilla' },\n  { value: 'Watermelon' },\n  { value: 'Ximenia' },\n  { value: 'Yuzu' },\n  { value: 'Zucchini' }\n];\n\nconst search = document.querySelector('#customSearch');\n\n// Add event listener to search\nsearch?.addEventListener('koerber-change', event => {\n  // Search our fruits sample for coincidences\n  const searchObj = event.target as HTMLInputElement;\n  const searchValue = searchObj.value.toLowerCase();\n  const searchOptions = searchFruitsSample.filter(fruit => fruit.value.toLowerCase().includes(searchValue));\n\n  // Reset the search before appending new options\n  search.innerHTML = '';\n\n  // Add the matched options as children in default slot of search\n  searchOptions.forEach(option => {\n    const optionElement = document.createElement('koerber-search-option');\n    optionElement.value = option.value;\n    search.appendChild(optionElement);\n  });\n});\n\n<\/script>\n        "}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const searchHTML = `\n<koerber-search ${attributes}>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Germany"></koerber-search-option>\n  <koerber-search-option value="Russia">\n    <koerber-icon slot="suffix" name="delete"></koerber-icon>\n  </koerber-search-option>\n  <koerber-search-option value="Spain">\n    <koerber-icon slot="suffix" name="delete"></koerber-icon>\n  </koerber-search-option>\n</koerber-search>\n    `;\n    return getStoryTemplate(searchHTML);\n  },\n  args: {\n    hoist: true,\n    placeholder: \'Type something...\'\n  }\n}',...Default.parameters?.docs?.source}}},Value.parameters={...Value.parameters,docs:{...Value.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const searchHTML = `\n<koerber-search value="Por" hoist>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Porcelain"></koerber-search-option>\n  <koerber-search-option value="Portal"></koerber-search-option>\n</koerber-search>\n    `;\n    return getStoryTemplate(searchHTML);\n  }\n}',...Value.parameters?.docs?.source}}},Placeholder.parameters={...Placeholder.parameters,docs:{...Placeholder.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const searchHTML = `<koerber-search ${attributes}></koerber-search>`;\n    return getStoryTemplate(searchHTML);\n  },\n  args: {\n    placeholder: 'Type something...',\n    hoist: true\n  }\n}",...Placeholder.parameters?.docs?.source}}},Sizes.parameters={...Sizes.parameters,docs:{...Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const searchHTML = `\n<div class="flex flex-col gap-4">\n  <koerber-search size="small" hoist value="Size small"></koerber-search>\n  <koerber-search size="medium" hoist value="Size medium"></koerber-search>\n  <koerber-search size="large" hoist value="Size large"></koerber-search>\n</div>\n\n<style>\n.flex {\n  display: flex;\n}\n.flex-col {\n  flex-direction: column;\n}\n.gap-4 {\n  gap: 1rem;\n}\n</style>\n    `;\n    return getStoryTemplate(searchHTML);\n  }\n}',...Sizes.parameters?.docs?.source}}},MinLength.parameters={...MinLength.parameters,docs:{...MinLength.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const searchHTML = `\n<koerber-search min-length="3" hoist>\n  <koerber-search-option value="Portugal"></koerber-search-option>\n  <koerber-search-option value="Germany"></koerber-search-option>\n  <koerber-search-option value="Russia"></koerber-search-option>\n  <koerber-search-option value="Spain"></koerber-search-option>\n</koerber-search>\n    `;\n    return getStoryTemplate(searchHTML);\n  }\n}',...MinLength.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const searchHTML = `<koerber-search ${attributes}>${args.label}</koerber-search>`;\n    return getStoryTemplate(searchHTML);\n  },\n  args: {\n    value: 'Search Disabled, try to type something...',\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},CustomSearch.parameters={...CustomSearch.parameters,docs:{...CustomSearch.parameters?.docs,source:{originalSource:"{\n  render: () => {\n    const searchHTML = `\n<koerber-search hoist id=\"customSearch\" placeholder=\"Type some fruit...\">\n</koerber-search>\n    `;\n    setTimeout(() => {\n      const searchFruitsSample = [{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Cherry'\n      }, {\n        value: 'Date'\n      }, {\n        value: 'Elderberry'\n      }, {\n        value: 'Fig'\n      }, {\n        value: 'Grape'\n      }, {\n        value: 'Honeydew'\n      }, {\n        value: 'Icaco'\n      }, {\n        value: 'Jackfruit'\n      }, {\n        value: 'Kiwi'\n      }, {\n        value: 'Lemon'\n      }, {\n        value: 'Mango'\n      }, {\n        value: 'Nectarine'\n      }, {\n        value: 'Orange'\n      }, {\n        value: 'Papaya'\n      }, {\n        value: 'Quince'\n      }, {\n        value: 'Raspberry'\n      }, {\n        value: 'Strawberry'\n      }, {\n        value: 'Tangerine'\n      }, {\n        value: 'Ugli'\n      }, {\n        value: 'Vanilla'\n      }, {\n        value: 'Watermelon'\n      }, {\n        value: 'Ximenia'\n      }, {\n        value: 'Yuzu'\n      }, {\n        value: 'Zucchini'\n      }];\n      const search = document.querySelector('#customSearch');\n      search?.addEventListener('koerber-change', event => {\n        // Search our fruits sample for coincidences\n        const searchObj = (event.target as HTMLInputElement);\n        const searchValue = searchObj.value.toLowerCase();\n        const searchOptions = searchFruitsSample.filter(fruit => fruit.value.toLowerCase().includes(searchValue));\n\n        // Reset the search before appending new options\n        search.innerHTML = '';\n\n        // Add the matched options as children in default slot of search\n        searchOptions.forEach(option => {\n          const optionElement = document.createElement('koerber-search-option');\n          optionElement.value = option.value;\n          search.appendChild(optionElement);\n        });\n      });\n    });\n    return getStoryTemplate(searchHTML);\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: `\n<koerber-search hoist id=\"customSearch\" placeholder=\"Type some fruit...\">\n</koerber-search>\n\n<script>\nconst searchFruitsSample = [\n  { value: 'Apple' },\n  { value: 'Banana' },\n  { value: 'Cherry' },\n  { value: 'Date' },\n  { value: 'Elderberry' },\n  { value: 'Fig' },\n  { value: 'Grape' },\n  { value: 'Honeydew' },\n  { value: 'Icaco' },\n  { value: 'Jackfruit' },\n  { value: 'Kiwi' },\n  { value: 'Lemon' },\n  { value: 'Mango' },\n  { value: 'Nectarine' },\n  { value: 'Orange' },\n  { value: 'Papaya' },\n  { value: 'Quince' },\n  { value: 'Raspberry' },\n  { value: 'Strawberry' },\n  { value: 'Tangerine' },\n  { value: 'Ugli' },\n  { value: 'Vanilla' },\n  { value: 'Watermelon' },\n  { value: 'Ximenia' },\n  { value: 'Yuzu' },\n  { value: 'Zucchini' }\n];\n\nconst search = document.querySelector('#customSearch');\n\n// Add event listener to search\nsearch?.addEventListener('koerber-change', event => {\n  // Search our fruits sample for coincidences\n  const searchObj = event.target as HTMLInputElement;\n  const searchValue = searchObj.value.toLowerCase();\n  const searchOptions = searchFruitsSample.filter(fruit => fruit.value.toLowerCase().includes(searchValue));\n\n  // Reset the search before appending new options\n  search.innerHTML = '';\n\n  // Add the matched options as children in default slot of search\n  searchOptions.forEach(option => {\n    const optionElement = document.createElement('koerber-search-option');\n    optionElement.value = option.value;\n    search.appendChild(optionElement);\n  });\n});\n\n<\/script>\n        `\n      }\n    }\n  }\n}",...CustomSearch.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Value","Placeholder","Sizes","MinLength","Disabled","CustomSearch"]}}]);