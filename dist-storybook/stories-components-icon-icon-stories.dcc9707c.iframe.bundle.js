"use strict";(self.webpackChunk_koerber_uikit=self.webpackChunk_koerber_uikit||[]).push([[8612],{"./src/stories/components/icon/icon.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Icon_Colors:()=>Icon_Colors,Icon_Sizes:()=>Icon_Sizes,Icon_WithText:()=>Icon_WithText,Size_Large:()=>Size_Large,Size_Medium:()=>Size_Medium,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/stories/utils.ts");__webpack_require__("./src/stories/component-imports.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Icon-Stories",component:"koerber-icon",argTypes:{name:{control:{type:"select"},options:["string","undefined"],description:"The name of the icon to draw.",table:{type:{summary:"string | undefined",detail:"string | undefined"},defaultValue:{}}},size:{control:{type:"select"},options:["medium","large"],description:"The icon's size.",defaultValue:"'medium'",table:{type:{summary:"'medium' | 'large'",detail:"'medium' | 'large'"},defaultValue:{summary:"'medium'"}}},title:{control:{type:"text"},description:"The title (tooltip) of the attribute",defaultValue:"''",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"''"}}},label:{control:{type:"text"},description:"An alternate description to use for assistive devices. If omitted, the icon will be considered presentational and\nignored by assistive devices.",defaultValue:"''",table:{type:{summary:"string",detail:"string"},defaultValue:{summary:"''"}}}}},Default={render:args=>{const iconHTML=`<koerber-icon ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}>${args.label}</koerber-icon>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(iconHTML)},args:{label:"Medium",size:"medium",name:"account",title:"Account"},storyName:"Default"},Size_Medium={render:args=>{const iconHTML=`<koerber-icon ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}>${args.label}</koerber-icon>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(iconHTML)},args:{label:"Medium",size:"medium",name:"account",title:"Account"},storyName:"Size: Medium"},Size_Large={render:args=>{const iconHTML=`<koerber-icon ${(0,_utils__WEBPACK_IMPORTED_MODULE_0__.c)({args})}>${args.label}</koerber-icon>`;return(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)(iconHTML)},args:{label:"Large",size:"large",name:"account",title:"Account"},storyName:"Size: Large"},Icon_Sizes={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<koerber-icon size="medium" name="account" title="Account">undefined</koerber-icon>\n\n<koerber-icon size="large" name="account" title="Account">undefined</koerber-icon>\n    ')},Icon_WithText={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('<p>Account <koerber-icon name="account" style="margin-top:-4px"></koerber-icon></p>')},Icon_Colors={render:()=>(0,_utils__WEBPACK_IMPORTED_MODULE_0__.a)('\n<koerber-icon style="color:var(--koerber-color-bg-fill-info);" name="information"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-success);" name="check-circle"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-warning);" name="alert-circle"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-error);" name="alert"></koerber-icon>\n    ')};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const iconHTML = `<koerber-icon ${attributes}>${args.label}</koerber-icon>`;\n    return getStoryTemplate(iconHTML);\n  },\n  args: {\n    label: 'Medium',\n    size: 'medium',\n    name: 'account',\n    title: 'Account'\n  }\n}",...Default.parameters?.docs?.source}}},Size_Medium.parameters={...Size_Medium.parameters,docs:{...Size_Medium.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const iconHTML = `<koerber-icon ${attributes}>${args.label}</koerber-icon>`;\n    return getStoryTemplate(iconHTML);\n  },\n  args: {\n    label: 'Medium',\n    size: 'medium',\n    name: 'account',\n    title: 'Account'\n  }\n}",...Size_Medium.parameters?.docs?.source}}},Size_Large.parameters={...Size_Large.parameters,docs:{...Size_Large.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    const attributes = generateAttributes({\n      args\n    });\n    const iconHTML = `<koerber-icon ${attributes}>${args.label}</koerber-icon>`;\n    return getStoryTemplate(iconHTML);\n  },\n  args: {\n    label: 'Large',\n    size: 'large',\n    name: 'account',\n    title: 'Account'\n  }\n}",...Size_Large.parameters?.docs?.source}}},Icon_Sizes.parameters={...Icon_Sizes.parameters,docs:{...Icon_Sizes.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const iconHTML = `\n<koerber-icon size="medium" name="account" title="Account">undefined</koerber-icon>\n\n<koerber-icon size="large" name="account" title="Account">undefined</koerber-icon>\n    `;\n    return getStoryTemplate(iconHTML);\n  }\n}',...Icon_Sizes.parameters?.docs?.source}}},Icon_WithText.parameters={...Icon_WithText.parameters,docs:{...Icon_WithText.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const iconHTML = `<p>Account <koerber-icon name="account" style="margin-top:-4px"></koerber-icon></p>`;\n    return getStoryTemplate(iconHTML);\n  }\n}',...Icon_WithText.parameters?.docs?.source}}},Icon_Colors.parameters={...Icon_Colors.parameters,docs:{...Icon_Colors.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const iconHTML = `\n<koerber-icon style="color:var(--koerber-color-bg-fill-info);" name="information"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-success);" name="check-circle"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-warning);" name="alert-circle"></koerber-icon>\n\n<koerber-icon style="color:var(--koerber-color-bg-fill-error);" name="alert"></koerber-icon>\n    `;\n    return getStoryTemplate(iconHTML);\n  }\n}',...Icon_Colors.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Size_Medium","Size_Large","Icon_Sizes","Icon_WithText","Icon_Colors"]}}]);